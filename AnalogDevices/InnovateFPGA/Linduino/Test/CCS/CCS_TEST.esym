D G "__PCM__" 0 51 ""4.119""
D G "__DEVICE__" 0 51 "877"
D G "__DATE__" 0 51 ""29-Oct-12""
D G "__TIME__" 0 51 ""17:36:56"" "This program checks that all of the released drivers compile directly in CCS"
d G "PIN_A0" 2 19 "40"
d G "PIN_A1" 2 20 "41"
d G "PIN_A2" 2 21 "42"
d G "PIN_A3" 2 22 "43"
d G "PIN_A4" 2 23 "44"
d G "PIN_A5" 2 24 "45"
d G "PIN_B0" 2 26 "48"
d G "PIN_B1" 2 27 "49"
d G "PIN_B2" 2 28 "50"
d G "PIN_B3" 2 29 "51"
d G "PIN_B4" 2 30 "52"
d G "PIN_B5" 2 31 "53"
d G "PIN_B6" 2 32 "54"
d G "PIN_B7" 2 33 "55"
d G "PIN_C0" 2 35 "56"
d G "PIN_C1" 2 36 "57"
d G "PIN_C2" 2 37 "58"
d G "PIN_C3" 2 38 "59"
d G "PIN_C4" 2 39 "60"
d G "PIN_C5" 2 40 "61"
d G "PIN_C6" 2 41 "62"
d G "PIN_C7" 2 42 "63"
d G "PIN_D0" 2 44 "64"
d G "PIN_D1" 2 45 "65"
d G "PIN_D2" 2 46 "66"
d G "PIN_D3" 2 47 "67"
d G "PIN_D4" 2 48 "68"
d G "PIN_D5" 2 49 "69"
d G "PIN_D6" 2 50 "70"
d G "PIN_D7" 2 51 "71"
d G "PIN_E0" 2 53 "72"
d G "PIN_E1" 2 54 "73"
d G "PIN_E2" 2 55 "74"
d G "FALSE" 2 58 "0"
d G "TRUE" 2 59 "1"
d G "BYTE" 2 61 "int8"
d G "BOOLEAN" 2 62 "int1"
d G "getc" 2 64 "getch"
d G "fgetc" 2 65 "getch"
d G "getchar" 2 66 "getch"
d G "putc" 2 67 "putchar"
d G "fputc" 2 68 "putchar"
d G "fgets" 2 69 "gets"
d G "fputs" 2 70 "puts"
d G "WDT_FROM_SLEEP" 2 75 "3"
d G "WDT_TIMEOUT" 2 76 "11"
d G "MCLR_FROM_SLEEP" 2 77 "19"
d G "MCLR_FROM_RUN" 2 78 "27"
d G "NORMAL_POWER_UP" 2 79 "25"
d G "BROWNOUT_RESTART" 2 80 "26"
d G "T0_INTERNAL" 2 88 "0"
d G "T0_EXT_L_TO_H" 2 89 "32"
d G "T0_EXT_H_TO_L" 2 90 "48"
d G "T0_DIV_1" 2 92 "8"
d G "T0_DIV_2" 2 93 "0"
d G "T0_DIV_4" 2 94 "1"
d G "T0_DIV_8" 2 95 "2"
d G "T0_DIV_16" 2 96 "3"
d G "T0_DIV_32" 2 97 "4"
d G "T0_DIV_64" 2 98 "5"
d G "T0_DIV_128" 2 99 "6"
d G "T0_DIV_256" 2 100 "7"
d G "T0_8_BIT" 2 103 "0"
d G "RTCC_INTERNAL" 2 105 "0" "The following are provided for compatibility"
d G "RTCC_EXT_L_TO_H" 2 106 "32" "with older compiler versions"
d G "RTCC_EXT_H_TO_L" 2 107 "48"
d G "RTCC_DIV_1" 2 108 "8"
d G "RTCC_DIV_2" 2 109 "0"
d G "RTCC_DIV_4" 2 110 "1"
d G "RTCC_DIV_8" 2 111 "2"
d G "RTCC_DIV_16" 2 112 "3"
d G "RTCC_DIV_32" 2 113 "4"
d G "RTCC_DIV_64" 2 114 "5"
d G "RTCC_DIV_128" 2 115 "6"
d G "RTCC_DIV_256" 2 116 "7"
d G "RTCC_8_BIT" 2 117 "0"
d G "WDT_18MS" 2 129 "8"
d G "WDT_36MS" 2 130 "9"
d G "WDT_72MS" 2 131 "10"
d G "WDT_144MS" 2 132 "11"
d G "WDT_288MS" 2 133 "12"
d G "WDT_576MS" 2 134 "13"
d G "WDT_1152MS" 2 135 "14"
d G "WDT_2304MS" 2 136 "15"
d G "T1_DISABLED" 2 142 "0"
d G "T1_INTERNAL" 2 143 "0x85"
d G "T1_EXTERNAL" 2 144 "0x87"
d G "T1_EXTERNAL_SYNC" 2 145 "0x83"
d G "T1_CLK_OUT" 2 147 "8"
d G "T1_DIV_BY_1" 2 149 "0"
d G "T1_DIV_BY_2" 2 150 "0x10"
d G "T1_DIV_BY_4" 2 151 "0x20"
d G "T1_DIV_BY_8" 2 152 "0x30"
d G "T2_DISABLED" 2 157 "0"
d G "T2_DIV_BY_1" 2 158 "4"
d G "T2_DIV_BY_4" 2 159 "5"
d G "T2_DIV_BY_16" 2 160 "6"
d G "CCP_OFF" 2 166 "0"
d G "CCP_CAPTURE_FE" 2 167 "4"
d G "CCP_CAPTURE_RE" 2 168 "5"
d G "CCP_CAPTURE_DIV_4" 2 169 "6"
d G "CCP_CAPTURE_DIV_16" 2 170 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 171 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 172 "9"
d G "CCP_COMPARE_INT" 2 173 "0xA"
d G "CCP_COMPARE_RESET_TIMER" 2 174 "0xB"
d G "CCP_PWM" 2 175 "0xC"
d G "CCP_PWM_PLUS_1" 2 176 "0x1c"
d G "CCP_PWM_PLUS_2" 2 177 "0x2c"
d G "CCP_PWM_PLUS_3" 2 178 "0x3c"
d G "PSP_ENABLED" 2 190 "0x10"
d G "PSP_DISABLED" 2 191 "0"
d G "SPI_MASTER" 2 198 "0x20"
d G "SPI_SLAVE" 2 199 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 200 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 201 "0x00"
d G "SPI_CLK_DIV_4" 2 202 "0x00"
d G "SPI_CLK_DIV_16" 2 203 "0x01"
d G "SPI_CLK_DIV_64" 2 204 "0x02"
d G "SPI_CLK_T2" 2 205 "0x03"
d G "SPI_SS_DISABLED" 2 206 "0x01"
d G "SPI_XMIT_L_TO_H" 2 208 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 209 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 211 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 212 "0x8000"
d G "SPI_L_TO_H" 2 215 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 216 "SPI_SCK_IDLE_HIGH"
d G "UART_ADDRESS" 2 222 "2"
d G "UART_DATA" 2 223 "4"
d G "A0_A3_A1_A3" 2 227 "0xfff04"
d G "A0_A3_A1_A2_OUT_ON_A4_A5" 2 228 "0xfcf03"
d G "A0_A3_A1_A3_OUT_ON_A4_A5" 2 229 "0xbcf05"
d G "NC_NC_NC_NC" 2 230 "0x0ff07"
d G "A0_A3_A1_A2" 2 231 "0xfff02"
d G "A0_A3_NC_NC_OUT_ON_A4" 2 232 "0x9ef01"
d G "A0_VR_A1_VR" 2 233 "0x3ff06"
d G "A3_VR_A2_VR" 2 234 "0xcff0e"
d G "CP1_INVERT" 2 235 "0x0000010"
d G "CP2_INVERT" 2 236 "0x0000020"
d G "VREF_LOW" 2 244 "0xa0"
d G "VREF_HIGH" 2 245 "0x80"
d G "VREF_A2" 2 247 "0x40"
d G "ADC_OFF" 2 255 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 256 "0x10000"
d G "ADC_CLOCK_DIV_4" 2 257 "0x4000"
d G "ADC_CLOCK_DIV_8" 2 258 "0x0040"
d G "ADC_CLOCK_DIV_16" 2 259 "0x4040"
d G "ADC_CLOCK_DIV_32" 2 260 "0x0080"
d G "ADC_CLOCK_DIV_64" 2 261 "0x4080"
d G "ADC_CLOCK_INTERNAL" 2 262 "0x00c0" "Internal 2-6us"
d G "NO_ANALOGS" 2 265 "7" "None"
d G "ALL_ANALOG" 2 266 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 2 267 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 2 268 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 2 269 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 2 270 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 2 271 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 2 272 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 2 273 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 2 274 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 2 275 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 2 276 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 2 277 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 2 278 "0x0E" "A0"
d G "AN0_VREF_VREF" 2 279 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 2 280 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 2 281 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 2 282 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 2 283 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 2 284 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 2 285 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 2 286 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 2 287 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 2 288 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 2 289 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 2 290 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 2 291 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 2 292 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 2 295 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 296 "1"
d G "ADC_READ_ONLY" 2 297 "6"
d G "L_TO_H" 2 305 "0x40"
d G "H_TO_L" 2 306 "0"
d G "GLOBAL" 2 308 "0x0BC0"
d G "PERIPH" 2 309 "0x0B40"
d G "INT_RTCC" 2 310 "0x000B20"
d G "INT_RB" 2 311 "0x00FF0B08"
d G "INT_EXT_L2H" 2 312 "0x50000B10"
d G "INT_EXT_H2L" 2 313 "0x60000B10"
d G "INT_EXT" 2 314 "0x000B10"
d G "INT_AD" 2 315 "0x008C40"
d G "INT_TBE" 2 316 "0x008C10"
d G "INT_RDA" 2 317 "0x008C20"
d G "INT_TIMER1" 2 318 "0x008C01"
d G "INT_TIMER2" 2 319 "0x008C02"
d G "INT_CCP1" 2 320 "0x008C04"
d G "INT_CCP2" 2 321 "0x008D01"
d G "INT_SSP" 2 322 "0x008C08"
d G "INT_PSP" 2 323 "0x008C80"
d G "INT_BUSCOL" 2 324 "0x008D08"
d G "INT_EEPROM" 2 325 "0x008D10"
d G "INT_TIMER0" 2 326 "0x000B20"
d G "INT_COMP" 2 327 "0x008D40"
D G "MISO" 1 13 "PIN_C4"
D G "MOSI" 1 14 "PIN_C5"
D G "CS" 1 15 "PIN_B5"
D G "SCK" 1 16 "PIN_C3"
D G "SCL" 1 17 "PIN_C3"
D G "SDAO" 1 18 "PIN_C5"
D G "SDAI" 1 19 "PIN_C4"
D G "MATH_H" 3 28 ""
D G "PI" 3 33 "3.1415926535897932"
D G "SQRT2" 3 36 "1.4142135623730950"
C L "CEIL_FLOOR" 3 2 3 "FUNCTION"
V L "x" 3 43 "float"
V L "n" 3 43 "int8"
F G "CEIL_FLOOR" 3 43 "float(float x,int8 n)"
V L "y" 3 45 "float"
V L "res" 3 45 "float"
V L "l" 3 46 "int16"
V L "s" 3 47 "int1"
C L "floor" 3 2 5 "FUNCTION"
V L "x" 3 199 "float"
F G "floor" 3 199 "float(float x)"
C L "ceil" 3 2 5 "FUNCTION"
V L "x" 3 225 "float"
F G "ceil" 3 225 "float(float x)"
D G "fabs" 3 251 "abs"
C L "fmod" 3 2 6 "FUNCTION"
V L "x" 3 263 "float"
V L "y" 3 263 "float"
F G "fmod" 3 263 "float(float x,float y)"
V L "i" 3 265 "float"
D G "LN2" 3 326 "0.6931471805599453"
D G "LN2_INV" 3 327 "1.4426950408889634073"
V G "pe" 3 329 "float[6]"
V L "x" 3 333 "float"
F G "exp" 3 333 "float(float x)"
V L "y" 3 335 "float"
V L "res" 3 335 "float"
V L "r" 3 335 "float"
V L "n" 3 339 "sint8"
V L "s" 3 340 "int1"
C L "exp" 3 2 1 "FUNCTION"
V G "pl" 3 516 "float[4]"
V G "ql" 3 517 "float[4]"
C L "log" 3 2 3 "FUNCTION"
V L "x" 3 525 "float"
F G "log" 3 525 "float(float x)"
V L "y" 3 527 "float"
V L "res" 3 527 "float"
V L "r" 3 527 "float"
V L "y2" 3 527 "float"
V L "n" 3 531 "sint8"
C L "log" 3 2 1 "FUNCTION"
D G "LN10" 3 749 "2.3025850929940456"
D G "LN10_INV" 3 750 "0.4342944819032518276"
C L "log10" 3 2 3 "FUNCTION"
V L "x" 3 758 "float"
F G "log10" 3 758 "float(float x)"
V L "r" 3 760 "float"
C L "modf" 3 2 8 "FUNCTION"
V L "value" 3 799 "float"
V L "iptr" 3 799 "*float"
F G "modf" 3 799 "float(float value,*float iptr)"
C L "pwr" 3 2 6 "FUNCTION"
V L "x" 3 827 "float"
V L "y" 3 827 "float"
F G "pwr" 3 827 "float(float x,float y)"
C L "pow" 3 2 7 "FUNCTION"
V L "x" 3 890 "float"
V L "y" 3 890 "float"
F G "pow" 3 890 "float(float x,float y)"
C L "sqrt" 3 2 5 "FUNCTION"
V L "x" 3 951 "float"
F G "sqrt" 3 951 "float(float x)"
V L "y" 3 953 "float"
V L "res" 3 953 "float"
V L "p" 3 957 "*int8"
D G "PI_DIV_BY_TWO_INV" 3 1146 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 3 1150 "1.5707963267948966"
D G "TWOBYPI" 3 1154 "0.6366197723675813"
C L "cos" 3 2 3 "FUNCTION"
V L "x" 3 1162 "float"
F G "cos" 3 1162 "float(float x)"
V L "y" 3 1164 "float"
V L "t" 3 1164 "float"
V L "t2" 3 1164 "float"
V L "quad" 3 1165 "int8"
V L "i" 3 1165 "int8"
V L "frac" 3 1166 "float"
V L "p" 3 1167 "float[5]" "by the series definition for cosine"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 2 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "sin" 3 2 5 "FUNCTION"
V L "x" 3 1303 "float"
F G "sin" 3 1303 "float(float x)"
C L "tan" 3 2 5 "FUNCTION"
V L "x" 3 1329 "float"
F G "tan" 3 1329 "float(float x)"
V L "c" 3 1331 "float"
V L "s" 3 1331 "float"
V G "pas" 3 1369 "float[3]"
V G "qas" 3 1370 "float[3]"
V L "x" 3 1372 "float"
V L "n" 3 1372 "int8"
F G "ASIN_COS" 3 1372 "float(float x,int8 n)"
V L "y" 3 1374 "float"
V L "res" 3 1374 "float"
V L "r" 3 1374 "float"
V L "y2" 3 1374 "float"
V L "s" 3 1375 "int1"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "asin" 3 2 5 "FUNCTION"
V L "x" 3 1530 "float"
F G "asin" 3 1530 "float(float x)"
V L "r" 3 1532 "float"
C L "acos" 3 2 5 "FUNCTION"
V L "x" 3 1564 "float"
F G "acos" 3 1564 "float(float x)"
V L "r" 3 1566 "float"
V G "pat" 3 1592 "float[4]"
V G "qat" 3 1593 "float[4]"
C L "atan" 3 2 3 "FUNCTION"
V L "x" 3 1601 "float"
F G "atan" 3 1601 "float(float x)"
V L "y" 3 1603 "float"
V L "res" 3 1603 "float"
V L "r" 3 1603 "float"
V L "s" 3 1604 "int1"
V L "flag" 3 1604 "int1"
C L "atan" 3 2 1 "FUNCTION"
C L "atan2" 3 2 7 "FUNCTION"
V L "y" 3 1744 "float"
V L "x" 3 1744 "float"
F G "atan2" 3 1744 "float(float y,float x)"
V L "z" 3 1746 "float"
V L "sign" 3 1747 "int1"
V L "quad" 3 1748 "int8"
C L "atan2" 3 2 1 "FUNCTION"
C L "atan2" 3 2 1 "FUNCTION"
C L "cosh" 3 2 7 "FUNCTION"
V L "x" 3 1966 "float"
F G "cosh" 3 1966 "float(float x)"
C L "sinh" 3 2 6 "FUNCTION"
V L "x" 3 1993 "float"
F G "sinh" 3 1993 "float(float x)"
C L "tanh" 3 2 6 "FUNCTION"
V L "x" 3 2023 "float"
F G "tanh" 3 2023 "float(float x)"
D G "LOG2" 3 2053 ".30102999566398119521"
D G "LOG2_INV" 3 2054 "3.32192809488736234787"
V L "x" 3 2055 "float"
V L "exp" 3 2055 "*sint8"
F G "frexp" 3 2055 "float(float x,*sint8 exp)"
V L "res" 3 2057 "float"
V L "sign" 3 2058 "int1"
C L "ldexp" 3 2 6 "FUNCTION"
V L "value" 3 2200 "float"
V L "exp" 3 2200 "sint8"
F G "ldexp" 3 2200 "float(float value,sint8 exp)"
D G "LTC1867_h" 4 48 ""
D G "LTC1867_CS" 4 52 "CS"
D G "LTC1867_CH0" 4 56 "0x84"
D G "LTC1867_CH1" 4 57 "0xC4"
D G "LTC1867_CH2" 4 58 "0x94"
D G "LTC1867_CH3" 4 59 "0xD4"
D G "LTC1867_CH4" 4 60 "0xA4"
D G "LTC1867_CH5" 4 61 "0xE4"
D G "LTC1867_CH6" 4 62 "0xB4"
D G "LTC1867_CH7" 4 63 "0xF4"
D G "LTC1867_P0_N1" 4 66 "0x00"
D G "LTC1867_P1_N0" 4 67 "0x40"
D G "LTC1867_P2_N3" 4 69 "0x10"
D G "LTC1867_P3_N2" 4 70 "0x50"
D G "LTC1867_P4_N5" 4 72 "0x20"
D G "LTC1867_P5_N4" 4 73 "0x60"
D G "LTC1867_P6_N7" 4 75 "0x30"
D G "LTC1867_P7_N6" 4 76 "0x70"
D G "LTC1867_CH0_7COM" 4 79 "0x8C"
D G "LTC1867_CH1_7COM" 4 80 "0xCC"
D G "LTC1867_CH2_7COM" 4 81 "0x9C"
D G "LTC1867_CH3_7COM" 4 82 "0xDC"
D G "LTC1867_CH4_7COM" 4 83 "0xAC"
D G "LTC1867_CH5_7COM" 4 84 "0xEC"
D G "LTC1867_CH6_7COM" 4 85 "0xBC"
D G "LTC1867_SLEEP_MODE" 4 88 "0x02"
D G "LTC1867_EXIT_SLEEP_MODE" 4 89 "0x00"
D G "LTC1867_UNIPOLAR_MODE" 4 90 "0x04" "bitwise or with channel commands to enter in unipolar mode"
V G "LTC1867_lsb" 4 98 "float"
V G "LTC1867_offset_unipolar_code" 4 99 "float"
V G "LTC1867_offset_bipolar_code" 4 100 "float"
V L "adc_command" 4 102 "int8"
F G "LTC1867_read" 4 102 "int16(int8 adc_command)"
V L "data" 4 104 "{int8[2] b,int16 w}" "LTC1867 data"
C L "LTC1867_read" 4 1 1 "FUNCTION"
C L "LTC1867_read" 4 1 1 "FUNCTION"
C L "LTC1867_read" 4 1 1 "FUNCTION"
C L "LTC1867_read" 4 1 1 "FUNCTION"
V L "adc_code" 4 112 "int16"
F G "LTC1867_unipolar_voltage" 4 112 "float(int16 adc_code)" "Calculates the LTC1867 input binary data to unipolar voltage."
V L "adc_voltage" 4 115 "float"
V L "adc_code" 4 119 "int16"
F G "LTC1867_bipolar_voltage" 4 119 "float(int16 adc_code)" "Calculates the LTC1867 input two's compliment data to bipolar voltage"
V L "adc_voltage" 4 122 "float"
V L "zero_unipolar_code" 4 127 "int16"
V L "zero_bipolar_code" 4 127 "int16"
V L "fs_code" 4 127 "int16"
V L "fs_voltage" 4 127 "float"
F G "LTC1867_cal_voltage" 4 127 "void(int16 zero_unipolar_code,int16 zero_bipolar_code,int16 fs_code,float fs_voltage)" "Calibrate the lsb"
D G "LTC2309_h" 5 47 ""
D G "LTC2309_I2C_ADDRESS" 5 55 "0x10" "LOW       LOW"
D G "LTC2309_CH0" 5 67 "0x88"
D G "LTC2309_CH1" 5 68 "0xC8"
D G "LTC2309_CH2" 5 69 "0x98"
D G "LTC2309_CH3" 5 70 "0xD8"
D G "LTC2309_CH4" 5 71 "0xA8"
D G "LTC2309_CH5" 5 72 "0xE8"
D G "LTC2309_CH6" 5 73 "0xB8"
D G "LTC2309_CH7" 5 74 "0xF8"
D G "LTC2309_P0_N1" 5 77 "0x00"
D G "LTC2309_P1_N0" 5 78 "0x40"
D G "LTC2309_P2_N3" 5 80 "0x10"
D G "LTC2309_P3_N2" 5 81 "0x50"
D G "LTC2309_P4_N5" 5 83 "0x20"
D G "LTC2309_P5_N4" 5 84 "0x60"
D G "LTC2309_P6_N7" 5 86 "0x30"
D G "LTC2309_P7_N6" 5 87 "0x70"
D G "LTC2309_SLEEP_MODE" 5 91 "0x04"
D G "LTC2309_EXIT_SLEEP_MODE" 5 92 "0x00"
D G "LTC2309_UNIPOLAR_MODE" 5 93 "0x08"
V G "LTC2309_lsb" 5 107 "float"
V G "LTC2309_offset_code" 5 108 "float"
V L "i2c_address" 5 110 "int8"
V L "adc_command" 5 110 "int8"
V L "code" 5 110 "int16"
F G "LTC2309_read" 5 110 "int8(int8 i2c_address,int8 adc_command,int16 code)" "Reads 12 bits"
V L "ack" 5 113 "int8"
V L "data" 5 114 "{int8[2] b,int32 w}" "combines bytes"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
C L "LTC2309_read" 5 1 1 "FUNCTION"
V L "adc_code" 5 134 "int32"
F G "LTC2309_unipolar_voltage" 5 134 "float(int32 adc_code)" "Calculates the LTC2309 input unipolar voltage."
V L "adc_voltage" 5 137 "float"
V L "adc_code" 5 141 "int32"
F G "LTC2309_bipolar_voltage" 5 141 "float(int32 adc_code)" "Calculates the LTC2309 input bipolar voltage"
V L "adc_voltage" 5 144 "float"
V L "sign" 5 144 "float"
C L "LTC2309_bipolar_voltage" 5 1 1 "FUNCTION"
V L "zero_code" 5 154 "int32"
V L "fs_code" 5 154 "int32"
V L "fs_voltage" 5 154 "float"
F G "LTC2309_cal_voltage" 5 154 "void(int32 zero_code,int32 fs_code,float fs_voltage)" "Calibrate the lsb"
D G "LTC2418_h" 6 57 ""
D G "LTC2418_CS" 6 61 "CS"
D G "MISO_timeout" 6 65 "1000"
D G "LTC2418_KEEP_PREVIOUS_MODE" 6 68 "0x80"
D G "LTC2418_KEEP_PREVIOUS_SPEED_RESOLUTION" 6 69 "0x00"
D G "LTC2418_CH0" 6 72 "0xB0"
D G "LTC2418_CH1" 6 73 "0xB8"
D G "LTC2418_CH2" 6 74 "0xB1"
D G "LTC2418_CH3" 6 75 "0xB9"
D G "LTC2418_CH4" 6 76 "0xB2"
D G "LTC2418_CH5" 6 77 "0xBA"
D G "LTC2418_CH6" 6 78 "0xB3"
D G "LTC2418_CH7" 6 79 "0xBB"
D G "LTC2418_CH8" 6 80 "0xB4"
D G "LTC2418_CH9" 6 81 "0xBC"
D G "LTC2418_CH10" 6 82 "0xB5"
D G "LTC2418_CH11" 6 83 "0xBD"
D G "LTC2418_CH12" 6 84 "0xB6"
D G "LTC2418_CH13" 6 85 "0xBE"
D G "LTC2418_CH14" 6 86 "0xB7"
D G "LTC2418_CH15" 6 87 "0xBF"
D G "LTC2418_P0_N1" 6 90 "0xA0"
D G "LTC2418_P1_N0" 6 91 "0xA8"
D G "LTC2418_P2_N3" 6 93 "0xA1"
D G "LTC2418_P3_N2" 6 94 "0xA9"
D G "LTC2418_P4_N5" 6 96 "0xA2"
D G "LTC2418_P5_N4" 6 97 "0xAA"
D G "LTC2418_P6_N7" 6 99 "0xA3"
D G "LTC2418_P7_N6" 6 100 "0xAB"
D G "LTC2418_P8_N9" 6 102 "0xA4"
D G "LTC2418_P9_N8" 6 103 "0xAC"
D G "LTC2418_P10_N11" 6 105 "0xA5"
D G "LTC2418_P11_N10" 6 106 "0xAD"
D G "LTC2418_P12_N13" 6 108 "0xA6"
D G "LTC2418_P13_N12" 6 109 "0xAE"
D G "LTC2418_P14_N15" 6 111 "0xA7"
D G "LTC2418_P15_N14" 6 112 "0xAF"
V G "LTC2418_lsb" 6 114 "float"
V G "LTC2418_offset_code" 6 115 "float"
V L "adc_command" 6 117 "int8"
F G "LTC2418_read" 6 117 "int32(int8 adc_command)"
V L "timer_count" 6 119 "int16"
C L "LTC2418_read" 6 1 1 "FUNCTION"
V L "data" 6 120 "{int8[4] b,int32 w}" "LTC2418 data"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
C L "LTC2418_read" 6 1 1 "FUNCTION"
V L "adc_code" 6 136 "int32"
F G "LTC2418_voltage" 6 136 "float(int32 adc_code)" "Calculates the LTC2418 input bipolar voltage"
V L "adc_voltage" 6 139 "float"
C L "LTC2418_voltage" 6 1 1 "FUNCTION"
V L "zero_code" 6 146 "int32"
V L "fs_code" 6 146 "int32"
V L "fs_voltage" 6 146 "float"
F G "LTC2418_cal_voltage" 6 146 "void(int32 zero_code,int32 fs_code,float fs_voltage)" "Calibrate the lsb"
D G "LTC2449_h" 7 78 ""
D G "LTC2449_CS" 7 82 "CS"
D G "MISO_timeout" 7 86 "1000"
D G "LTC2449_KEEP_PREVIOUS_MODE" 7 96 "0x8000"
D G "LTC2449_KEEP_PREVIOUS_SPEED_RESOLUTION" 7 97 "0x0000"
D G "LTC2449_SPEED_2X" 7 98 "0x0008"
D G "LTC2449_CH0" 7 101 "0xB000"
D G "LTC2449_CH1" 7 102 "0xB800"
D G "LTC2449_CH2" 7 103 "0xB100"
D G "LTC2449_CH3" 7 104 "0xB900"
D G "LTC2449_CH4" 7 105 "0xB200"
D G "LTC2449_CH5" 7 106 "0xBA00"
D G "LTC2449_CH6" 7 107 "0xB300"
D G "LTC2449_CH7" 7 108 "0xBB00"
D G "LTC2449_CH8" 7 109 "0xB400"
D G "LTC2449_CH9" 7 110 "0xBC00"
D G "LTC2449_CH10" 7 111 "0xB500"
D G "LTC2449_CH11" 7 112 "0xBD00"
D G "LTC2449_CH12" 7 113 "0xB600"
D G "LTC2449_CH13" 7 114 "0xBE00"
D G "LTC2449_CH14" 7 115 "0xB700"
D G "LTC2449_CH15" 7 116 "0xBF00"
D G "LTC2449_P0_N1" 7 119 "0xA000"
D G "LTC2449_P1_N0" 7 120 "0xA800"
D G "LTC2449_P2_N3" 7 122 "0xA100"
D G "LTC2449_P3_N2" 7 123 "0xA900"
D G "LTC2449_P4_N5" 7 125 "0xA200"
D G "LTC2449_P5_N4" 7 126 "0xAA00"
D G "LTC2449_P6_N7" 7 128 "0xA300"
D G "LTC2449_P7_N6" 7 129 "0xAB00"
D G "LTC2449_P8_N9" 7 131 "0xA400"
D G "LTC2449_P9_N8" 7 132 "0xAC00"
D G "LTC2449_P10_N11" 7 134 "0xA500"
D G "LTC2449_P11_N10" 7 135 "0xAD00"
D G "LTC2449_P12_N13" 7 137 "0xA600"
D G "LTC2449_P13_N12" 7 138 "0xAE00"
D G "LTC2449_P14_N15" 7 140 "0xA700"
D G "LTC2449_P15_N14" 7 141 "0xAF00"
D G "LTC2449_OSR_64" 7 144 "0xA010"
D G "LTC2449_OSR_128" 7 145 "0xA020"
D G "LTC2449_OSR_256" 7 146 "0xA030"
D G "LTC2449_OSR_512" 7 147 "0xA040"
D G "LTC2449_OSR_1024" 7 148 "0xA050"
D G "LTC2449_OSR_2048" 7 149 "0xA060"
D G "LTC2449_OSR_4096" 7 150 "0xA070"
D G "LTC2449_OSR_8192" 7 151 "0xA080"
D G "LTC2449_OSR_16384" 7 152 "0xA090"
D G "LTC2449_OSR_32768" 7 153 "0xA0F0"
V G "LTC2449_lsb" 7 155 "float"
V G "LTC2449_offset_code" 7 156 "float"
V L "adc_command" 7 158 "int16"
F G "LTC2449_read" 7 158 "int32(int16 adc_command)"
V L "timer_count" 7 160 "int16"
C L "LTC2449_read" 7 1 1 "FUNCTION"
V L "data" 7 161 "{int8[4] b,int32 w}" "LTC2449 data"
V L "command" 7 162 "{int8[2] b,int16 w}"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
C L "LTC2449_read" 7 1 1 "FUNCTION"
V L "adc_code" 7 179 "int32"
F G "LTC2449_voltage" 7 179 "float(int32 adc_code)" "Calculates the LTC2449 input bipolar voltage"
V L "adc_voltage" 7 182 "float"
C L "LTC2449_voltage" 7 1 1 "FUNCTION"
V L "zero_code" 7 188 "int32"
V L "fs_code" 7 188 "int32"
V L "fs_voltage" 7 188 "float"
F G "LTC2449_cal_voltage" 7 188 "void(int32 zero_code,int32 fs_code,float fs_voltage)" "Calibrate the lsb"
C L "LTC2449_cal_voltage" 7 1 1 "FUNCTION"
C L "LTC2449_cal_voltage" 7 1 1 "FUNCTION"
D G "LTC2461_h" 8 49 ""
D G "LTC2461_I2C_ADDRESS" 8 56 "0x28" "A0 = LOW : this is demo board default"
D G "LTC2461_30HZ_SPEED_MODE" 8 61 "0xA0" "SPD=1"
D G "LTC2461_60HZ_SPEED_MODE" 8 62 "0x80" "SPD=0"
D G "LTC2461_SLEEP_MODE" 8 63 "0x90" "SLP=1 SPD=XX"
V G "LTC2461_lsb" 8 66 "float"
V G "LTC2461_offset_code" 8 67 "float"
V L "i2c_address" 8 69 "int8"
V L "adc_command" 8 69 "int8"
V L "code" 8 69 "int32"
F G "LTC2461_read" 8 69 "int8(int8 i2c_address,int8 adc_command,int32 code)" "Reads 16 bits. Derived from LTC2309."
V L "ack" 8 72 "int8"
V L "data" 8 73 "{int8[4] b,int32 w}" "LTC2461 data"
C L "LTC2461_read" 8 1 1 "FUNCTION"
C L "LTC2461_read" 8 1 1 "FUNCTION"
C L "LTC2461_read" 8 1 1 "FUNCTION"
C L "LTC2461_read" 8 1 1 "FUNCTION"
C L "LTC2461_read" 8 1 1 "FUNCTION"
C L "LTC2461_read" 8 1 1 "FUNCTION"
C L "LTC2461_read" 8 1 1 "FUNCTION"
V L "i2c_address" 8 92 "int8"
V L "adc_command" 8 92 "int8"
F G "LTC2461_command" 8 92 "int8(int8 i2c_address,int8 adc_command)" "Write a 16-bit command to the ADC. Derived from 2655."
C L "LTC2461_command" 8 1 1 "FUNCTION"
V L "ack" 8 96 "int8"
C L "LTC2461_command" 8 1 1 "FUNCTION"
C L "LTC2461_command" 8 1 1 "FUNCTION"
C L "LTC2461_command" 8 1 1 "FUNCTION"
C L "LTC2461_command" 8 1 1 "FUNCTION"
V L "adc_code" 8 108 "int32"
F G "LTC2461_voltage" 8 108 "float(int32 adc_code)" "Function definition"
C L "LTC2461_voltage" 8 1 1 "FUNCTION"
V L "adc_voltage" 8 111 "float"
V L "zero_code" 8 117 "int32"
V L "fs_code" 8 117 "int32"
V L "fs_voltage" 8 117 "float"
F G "LTC2461_cal_voltage" 8 117 "void(int32 zero_code,int32 fs_code,float fs_voltage)" "Function definition"
C L "LTC2461_cal_voltage" 8 1 1 "FUNCTION"
D G "LTC2484_h" 9 64 ""
D G "LTC2484_CS" 9 68 "CS"
D G "MISO_timeout" 9 72 "1000"
V G "LTC2484_lsb" 9 75 "float"
V G "LTC2484_offset_code" 9 76 "float"
V G "LTC2484_t0" 9 77 "float"
V G "LTC2484_r0" 9 78 "float"
D G "LTC2484_ENABLE" 9 81 "0x80"
D G "LTC2484_DISABLE" 9 82 "0x00"
D G "LTC2484_EXTERNAL_INPUT" 9 84 "0x00"
D G "LTC2484_TEMPERATURE_INPUT" 9 85 "0x08"
D G "LTC2484_REJECTION_50HZ_60HZ" 9 87 "0x00"
D G "LTC2484_REJECTION_50HZ" 9 88 "0x02"
D G "LTC2484_REJECTION_60HZ" 9 89 "0x04"
D G "LTC2484_AUTO_CALIBRATION" 9 91 "0x00"
D G "LTC2484_SPEED_2X" 9 92 "0x01"
C L "LTC2484_read" 9 1 5 "FUNCTION"
V L "adc_command" 9 101 "int8"
F G "LTC2484_read" 9 101 "int32(int8 adc_command)"
V L "timer_count" 9 103 "int16"
C L "LTC2484_read" 9 1 1 "FUNCTION"
V L "data" 9 104 "{int8[4] b,int32 w}" "LTC2484 data"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
C L "LTC2484_read" 9 1 1 "FUNCTION"
V L "adc_code" 9 120 "int32"
F G "LTC2484_voltage" 9 120 "float(int32 adc_code)" "Calculates the LTC2484 input bipolar voltage"
V L "adc_voltage" 9 123 "float"
V L "adc_code" 9 129 "int32"
F G "LTC2484_temperature" 9 129 "float(int32 adc_code)" "Calculate the LTC2484 temperature."
V L "zero_code" 9 136 "int32"
V L "fs_code" 9 136 "int32"
V L "fs_voltage" 9 136 "float"
F G "LTC2484_cal_voltage" 9 136 "void(int32 zero_code,int32 fs_code,float fs_voltage)" "Calibrate the lsb"
C L "LTC2484_cal_voltage" 9 1 1 "FUNCTION"
C L "LTC2484_cal_voltage" 9 1 1 "FUNCTION"
V L "adc_code" 9 145 "int32"
V L "temperature" 9 145 "float"
F G "LTC2484_cal_temperature" 9 145 "void(int32 adc_code,float temperature)" "Calibrate temperature"
C L "LTC2484_cal_temperature" 9 1 1 "FUNCTION"
C L "LTC2484_cal_temperature" 9 1 1 "FUNCTION"
C L "LTC2484_cal_temperature" 9 1 1 "FUNCTION"
D G "LTC2640_h" 10 44 ""
D G "LTC2640_CS" 10 48 "CS"
D G "LTC2640_cmd_write" 10 52 "0x00" "Write to input register"
D G "LTC2640_cmd_update" 10 53 "0x10" "Update (power up) DAC register"
D G "LTC2640_cmd_write_update" 10 54 "0x30" "Write to and update (power up) the DAC register"
D G "LTC2640_cmd_power_down" 10 55 "0x40" "Power down"
D G "LTC2640_cmd_internal_reference" 10 56 "0x60" "Select internal reference (default at power up)"
D G "LTC2640_cmd_external_reference" 10 57 "0x70" "Select the supply as the reference"
V G "LTC2640_lsb" 10 60 "float"
V G "LTC2640_offset" 10 61 "float"
C L "LTC2640_write" 10 1 1 "FUNCTION"
V L "dac_command" 10 63 "int8"
V L "dac_code" 10 63 "int16"
F G "LTC2640_write" 10 63 "void(int8 dac_command,int16 dac_code)" "Write the 16-bit dac_code to the LTC2640. The dac_code must be left aligned before"
C L "LTC2640_write" 10 1 1 "FUNCTION"
V L "data" 10 67 "{int8[2] b,int16 w}"
C L "LTC2640_write" 10 1 1 "FUNCTION"
C L "LTC2640_write" 10 1 1 "FUNCTION"
C L "LTC2640_write" 10 1 1 "FUNCTION"
C L "LTC2640_write" 10 1 1 "FUNCTION"
C L "LTC2640_write" 10 1 1 "FUNCTION"
C L "LTC2640_write" 10 1 1 "FUNCTION"
V L "dac_voltage" 10 76 "float"
F G "LTC2640_code" 10 76 "int16(float dac_voltage)" "Calculate a LTC2640 DAC code given the desired output voltage"
V L "float_code" 10 79 "float"
C L "LTC2640_code" 10 1 1 "FUNCTION"
C L "LTC2640_code" 10 1 1 "FUNCTION"
C L "LTC2640_code" 10 1 1 "FUNCTION"
V L "dac_code" 10 85 "int16"
F G "LTC2640_voltage" 10 85 "float(int16 dac_code)" "Calculate the LTC2640 DAC output voltage given the DAC code"
V L "dac_voltage" 10 88 "float"
C L "LTC2640_voltage" 10 1 1 "FUNCTION"
V L "dac_code1" 10 93 "int16"
V L "dac_code2" 10 93 "int16"
V L "voltage1" 10 93 "float"
V L "voltage2" 10 93 "float"
F G "LTC2640_calibrate" 10 93 "void(int16 dac_code1,int16 dac_code2,float voltage1,float voltage2)" "Calculate the LTC2640 offset and LSB voltage given two measured voltages and their corresponding codes"
C L "LTC2640_calibrate" 10 1 1 "FUNCTION"
C L "LTC2640_calibrate" 10 1 1 "FUNCTION"
D G "LTC2654_h" 11 52 ""
D G "LTC2654_CS" 11 56 "CS"
D G "LTC2654_cmd_write" 11 61 "0x00" "Write to input register n"
D G "LTC2654_cmd_update" 11 62 "0x10" "Update (power up) DAC register n"
D G "LTC2654_cmd_write_update" 11 63 "0x30" "Write to input register n, update (power-up) all"
D G "LTC2654_cmd_power_down" 11 64 "0x40" "Power down n"
D G "LTC2654_cmd_power_down_all" 11 65 "0x50" "Power down chip (all DAC's and reference)"
D G "LTC2654_cmd_internal_reference" 11 66 "0x60" "Select internal reference (power-up reference)"
D G "LTC2654_cmd_external_reference" 11 67 "0x70" "Select external reference (power-down internal reference)"
D G "LTC2654_cmd_no_operation" 11 68 "0xF0" "No operation"
D G "LTC2654_DAC_A" 11 70 "0x00"
D G "LTC2654_DAC_B" 11 71 "0x01"
D G "LTC2654_DAC_C" 11 72 "0x02"
D G "LTC2654_DAC_D" 11 73 "0x03"
D G "LTC2654_DAC_ALL" 11 74 "0x0F"
V G "LTC2654_offset" 11 80 "float[4]" "DAC offset"
V G "LTC2654_lsb" 11 81 "float[4]" "The LTC2654 lsb"
V L "dac_command" 11 83 "int16"
V L "dac_address" 11 83 "int8"
V L "dac_code" 11 83 "int16"
F G "LTC2654_write" 11 83 "void(int16 dac_command,int8 dac_address,int16 dac_code)" "Write the 16-bit dac_code to the LTC2654"
V L "command_byte" 11 86 "int8"
V L "data" 11 87 "{int8[2] b,int16 w}"
C L "LTC2654_write" 11 1 1 "FUNCTION"
C L "LTC2654_write" 11 1 1 "FUNCTION"
C L "LTC2654_write" 11 1 1 "FUNCTION"
C L "LTC2654_write" 11 1 1 "FUNCTION"
C L "LTC2654_write" 11 1 1 "FUNCTION"
C L "LTC2654_write" 11 1 1 "FUNCTION"
C L "LTC2654_write" 11 1 1 "FUNCTION"
V L "dac_voltage" 11 96 "float"
V L "dac_address" 11 96 "int8"
F G "LTC2654_code" 11 96 "int16(float dac_voltage,int8 dac_address)" "Calculate a LTC2654 DAC code given the desired output voltage and DAC address (0-3)"
V L "dac_code" 11 99 "int16"
V L "float_code" 11 100 "float"
C L "LTC2654_code" 11 1 1 "FUNCTION"
C L "LTC2654_code" 11 1 1 "FUNCTION"
C L "LTC2654_code" 11 1 1 "FUNCTION"
C L "LTC2654_code" 11 1 1 "FUNCTION"
V L "dac_code" 11 109 "int16"
V L "dac_address" 11 109 "int8"
F G "LTC2654_voltage" 11 109 "float(int16 dac_code,int8 dac_address)" "Calculate the LTC2654 DAC output voltage given the DAC code and DAC address (0-3)"
V L "dac_voltage" 11 112 "float"
C L "LTC2654_voltage" 11 1 1 "FUNCTION"
C L "LTC2654_voltage" 11 1 1 "FUNCTION"
V L "dac_code1" 11 119 "int16"
V L "dac_code2" 11 119 "int16"
V L "voltage1" 11 119 "float"
V L "voltage2" 11 119 "float"
V L "dac_address" 11 119 "int8"
F G "LTC2654_calibrate" 11 119 "void(int16 dac_code1,int16 dac_code2,float voltage1,float voltage2,int8 dac_address)" "Calculate the LTC2654 offset and LSB voltage given two measured voltages and their corresponding codes"
C L "LTC2654_calibrate" 11 1 1 "FUNCTION"
C L "LTC2654_calibrate" 11 1 1 "FUNCTION"
C L "LTC2654_calibrate" 11 1 1 "FUNCTION"
D G "LTC2655_h" 12 49 ""
D G "LTC2655_I2C_ADDRESS" 12 57 "0x20" "GND       GND       GND"
D G "LTC2655_I2C_GLOBAL_ADDRESS" 12 85 "0xE6" "LTC2655 global address"
D G "LTC2655_cmd_write" 12 89 "0x00" "Write to input register n"
D G "LTC2655_cmd_update" 12 90 "0x10" "Update (power up) DAC register n"
D G "LTC2655_cmd_write_update" 12 91 "0x30" "Write to input register n, update (power-up) all"
D G "LTC2655_cmd_power_down" 12 92 "0x40" "Power down n"
D G "LTC2655_cmd_power_down_all" 12 93 "0x50" "Power down chip (all DAC's and reference)"
D G "LTC2655_cmd_internal_reference" 12 94 "0x60" "Select internal reference (power-up reference)"
D G "LTC2655_cmd_external_reference" 12 95 "0x70" "Select external reference (power-down internal reference)"
D G "LTC2655_cmd_no_operation" 12 96 "0xF0" "No operation"
D G "LTC2655_DAC_A" 12 98 "0x00"
D G "LTC2655_DAC_B" 12 99 "0x01"
D G "LTC2655_DAC_C" 12 100 "0x02"
D G "LTC2655_DAC_D" 12 101 "0x03"
D G "LTC2655_DAC_ALL" 12 102 "0x0F"
V G "LTC2655_offset" 12 108 "float[4]" "DAC offset"
V G "LTC2655_lsb" 12 109 "float[4]" "The LTC2655 lsb"
V L "i2c_address" 12 111 "int8"
V L "dac_command" 12 111 "int8"
V L "dac_address" 12 111 "int8"
V L "dac_code" 12 111 "int16"
F G "LTC2655_write" 12 111 "int8(int8 i2c_address,int8 dac_command,int8 dac_address,int16 dac_code)" "Write a 16-bit dac_code to the LTC2655."
C L "LTC2655_write" 12 1 1 "FUNCTION"
V L "ack" 12 115 "int8"
V L "command_byte" 12 116 "int8"
V L "data" 12 117 "{int8[2] b,int16 w}"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
C L "LTC2655_write" 12 1 1 "FUNCTION"
V L "dac_voltage" 12 132 "float"
V L "dac_address" 12 132 "int8"
F G "LTC2655_code" 12 132 "int16(float dac_voltage,int8 dac_address)" "Calculate a LTC2655 DAC code given the desired output voltage and DAC address (0-3)"
V L "dac_code" 12 135 "int16"
V L "float_code" 12 136 "float"
C L "LTC2655_code" 12 1 1 "FUNCTION"
C L "LTC2655_code" 12 1 1 "FUNCTION"
C L "LTC2655_code" 12 1 1 "FUNCTION"
C L "LTC2655_code" 12 1 1 "FUNCTION"
V L "dac_code" 12 145 "int16"
V L "dac_address" 12 145 "int8"
F G "LTC2655_voltage" 12 145 "float(int16 dac_code,int8 dac_address)" "Calculate the LTC2655 DAC output voltage given the DAC code and DAC address (0-3)"
V L "dac_voltage" 12 148 "float"
C L "LTC2655_voltage" 12 1 1 "FUNCTION"
C L "LTC2655_voltage" 12 1 1 "FUNCTION"
V L "dac_code1" 12 155 "int16"
V L "dac_code2" 12 155 "int16"
V L "voltage1" 12 155 "float"
V L "voltage2" 12 155 "float"
V L "dac_address" 12 155 "int8"
F G "LTC2655_calibrate" 12 155 "void(int16 dac_code1,int16 dac_code2,float voltage1,float voltage2,int8 dac_address)" "Calculate the LTC2655 offset and LSB voltage given two measured voltages and their corresponding codes"
C L "LTC2655_calibrate" 12 1 1 "FUNCTION"
C L "LTC2655_calibrate" 12 1 1 "FUNCTION"
C L "LTC2655_calibrate" 12 1 1 "FUNCTION"
D G "LTC2656_h" 13 53 ""
D G "LTC2656_CS" 13 57 "CS"
D G "LTC2656_cmd_write" 13 62 "0x00" "Write to input register n"
D G "LTC2656_cmd_update" 13 63 "0x10" "Update (power up) DAC register n"
D G "LTC2656_cmd_write_update" 13 64 "0x30" "Write to input register n, update (power-up) all"
D G "LTC2656_cmd_power_down" 13 65 "0x40" "Power down n"
D G "LTC2656_cmd_power_down_all" 13 66 "0x50" "Power down chip (all DAC's and reference)"
D G "LTC2656_cmd_internal_reference" 13 67 "0x60" "Select internal reference (power-up reference)"
D G "LTC2656_cmd_external_reference" 13 68 "0x70" "Select external reference (power-down internal reference)"
D G "LTC2656_cmd_no_operation" 13 69 "0xF0" "No operation"
D G "LTC2656_DAC_A" 13 71 "0x00"
D G "LTC2656_DAC_B" 13 72 "0x01"
D G "LTC2656_DAC_C" 13 73 "0x02"
D G "LTC2656_DAC_D" 13 74 "0x03"
D G "LTC2656_DAC_E" 13 75 "0x04"
D G "LTC2656_DAC_F" 13 76 "0x05"
D G "LTC2656_DAC_G" 13 77 "0x06"
D G "LTC2656_DAC_H" 13 78 "0x07"
D G "LTC2656_DAC_ALL" 13 79 "0x0F"
V G "LTC2656_offset" 13 82 "float[8]" "DAC offset"
V G "LTC2656_lsb" 13 83 "float[8]" "The LTC2656 lsb"
V L "dac_command" 13 85 "int16"
V L "dac_address" 13 85 "int8"
V L "dac_code" 13 85 "int16"
F G "LTC2656_write" 13 85 "void(int16 dac_command,int8 dac_address,int16 dac_code)" "Write the 16-bit dac_code to the LTC2656"
V L "command_byte" 13 88 "int8"
V L "data" 13 89 "{int8[2] b,int16 w}"
C L "LTC2656_write" 13 1 1 "FUNCTION"
C L "LTC2656_write" 13 1 1 "FUNCTION"
C L "LTC2656_write" 13 1 1 "FUNCTION"
C L "LTC2656_write" 13 1 1 "FUNCTION"
C L "LTC2656_write" 13 1 1 "FUNCTION"
C L "LTC2656_write" 13 1 1 "FUNCTION"
C L "LTC2656_write" 13 1 1 "FUNCTION"
V L "dac_voltage" 13 99 "float"
V L "dac_address" 13 99 "int8"
F G "LTC2656_code" 13 99 "int16(float dac_voltage,int8 dac_address)" "Calculate a LTC2656 DAC code given the desired output voltage and DAC address (0-7)"
V L "dac_code" 13 102 "int16"
V L "float_code" 13 103 "float"
C L "LTC2656_code" 13 1 1 "FUNCTION"
C L "LTC2656_code" 13 1 1 "FUNCTION"
C L "LTC2656_code" 13 1 1 "FUNCTION"
C L "LTC2656_code" 13 1 1 "FUNCTION"
V L "dac_code" 13 112 "int16"
V L "dac_address" 13 112 "int8"
F G "LTC2656_voltage" 13 112 "float(int16 dac_code,int8 dac_address)" "Calculate the LTC2656 DAC output voltage given the DAC code and DAC address (0-7)"
V L "dac_voltage" 13 115 "float"
C L "LTC2656_voltage" 13 1 1 "FUNCTION"
C L "LTC2656_voltage" 13 1 1 "FUNCTION"
V L "dac_code1" 13 122 "int16"
V L "dac_code2" 13 122 "int16"
V L "voltage1" 13 122 "float"
V L "voltage2" 13 122 "float"
V L "dac_address" 13 122 "int8"
F G "LTC2656_calibrate" 13 122 "void(int16 dac_code1,int16 dac_code2,float voltage1,float voltage2,int8 dac_address)" "Calculate the LTC2656 offset and LSB voltage given two measured voltages and their corresponding codes"
C L "LTC2656_calibrate" 13 1 1 "FUNCTION"
C L "LTC2656_calibrate" 13 1 1 "FUNCTION"
C L "LTC2656_calibrate" 13 1 1 "FUNCTION"
D G "LTC2657_h" 14 49 ""
D G "LTC2657_I2C_ADDRESS" 14 57 "0x20" "GND       GND       GND"
D G "LTC2657_cmd_write" 14 87 "0x00" "Write to input register n"
D G "LTC2657_cmd_update" 14 88 "0x10" "Update (power up) DAC register n"
D G "LTC2657_cmd_write_update" 14 89 "0x30" "Write to input register n, update (power-up) all"
D G "LTC2657_cmd_power_down" 14 90 "0x40" "Power down n"
D G "LTC2657_cmd_power_down_all" 14 91 "0x50" "Power down chip (all DAC's and reference)"
D G "LTC2657_cmd_internal_reference" 14 92 "0x60" "Select internal reference (power-up reference)"
D G "LTC2657_cmd_external_reference" 14 93 "0x70" "Select external reference (power-down internal reference)"
D G "LTC2657_cmd_no_operation" 14 94 "0xF0" "No operation"
D G "LTC2657_DAC_A" 14 97 "0x00"
D G "LTC2657_DAC_B" 14 98 "0x01"
D G "LTC2657_DAC_C" 14 99 "0x02"
D G "LTC2657_DAC_D" 14 100 "0x03"
D G "LTC2657_DAC_E" 14 101 "0x04"
D G "LTC2657_DAC_F" 14 102 "0x05"
D G "LTC2657_DAC_G" 14 103 "0x06"
D G "LTC2657_DAC_H" 14 104 "0x07"
D G "LTC2657_DAC_ALL" 14 105 "0x0F"
V G "LTC2657_offset" 14 108 "float[8]" "DAC offset"
V G "LTC2657_lsb" 14 109 "float[8]" "The LTC2657 lsb"
V L "i2c_address" 14 111 "int8"
V L "dac_command" 14 111 "int8"
V L "dac_address" 14 111 "int8"
V L "dac_code" 14 111 "int16"
F G "LTC2657_write" 14 111 "int8(int8 i2c_address,int8 dac_command,int8 dac_address,int16 dac_code)" "Write a 16-bit dac_code to the LTC2657."
C L "LTC2657_write" 14 1 1 "FUNCTION"
V L "ack" 14 115 "int8"
V L "command_byte" 14 116 "int8"
V L "data" 14 117 "{int8[2] b,int16 w}"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
C L "LTC2657_write" 14 1 1 "FUNCTION"
V L "dac_voltage" 14 132 "float"
V L "dac_address" 14 132 "int8"
F G "LTC2657_code" 14 132 "int16(float dac_voltage,int8 dac_address)" "Calculate a LTC2657 DAC code given the desired output voltage and DAC address (0-7)"
V L "dac_code" 14 135 "int16"
V L "float_code" 14 136 "float"
C L "LTC2657_code" 14 1 1 "FUNCTION"
C L "LTC2657_code" 14 1 1 "FUNCTION"
C L "LTC2657_code" 14 1 1 "FUNCTION"
C L "LTC2657_code" 14 1 1 "FUNCTION"
V L "dac_code" 14 145 "int16"
V L "dac_address" 14 145 "int8"
F G "LTC2657_voltage" 14 145 "float(int16 dac_code,int8 dac_address)" "Calculate the LTC2657 DAC output voltage given the DAC code and DAC address (0-7)"
V L "dac_voltage" 14 148 "float"
C L "LTC2657_voltage" 14 1 1 "FUNCTION"
C L "LTC2657_voltage" 14 1 1 "FUNCTION"
V L "dac_code1" 14 155 "int16"
V L "dac_code2" 14 155 "int16"
V L "voltage1" 14 155 "float"
V L "voltage2" 14 155 "float"
V L "dac_address" 14 155 "int8"
F G "LTC2657_calibrate" 14 155 "void(int16 dac_code1,int16 dac_code2,float voltage1,float voltage2,int8 dac_address)" "Calculate the LTC2657 offset and LSB voltage given two measured voltages and their corresponding codes"
C L "LTC2657_calibrate" 14 1 1 "FUNCTION"
C L "LTC2657_calibrate" 14 1 1 "FUNCTION"
C L "LTC2657_calibrate" 14 1 1 "FUNCTION"
D G "LTC2945_h" 15 58 ""
D G "LTC2945_I2C_ADDRESS" 15 74 "0xDE" "Low       Low"
D G "LTC2945_I2C_MASS_WRITE" 15 76 "0xCC"
D G "LTC2945_I2C_ALERT_RESPONSE" 15 77 "0x19"
D G "LTC2945_CONTROL_REG" 15 80 "0x00"
D G "LTC2945_ALERT_REG" 15 81 "0x01"
D G "LTC2945_STATUS_REG" 15 82 "0x02"
D G "LTC2945_FAULT_REG" 15 83 "0x03"
D G "LTC2945_FAULT_CoR_REG" 15 84 "0x04"
D G "LTC2945_POWER_MSB2_REG" 15 86 "0x05"
D G "LTC2945_POWER_MSB1_REG" 15 87 "0x06"
D G "LTC2945_POWER_LSB_REG" 15 88 "0x07"
D G "LTC2945_MAX_POWER_MSB2_REG" 15 89 "0x08"
D G "LTC2945_MAX_POWER_MSB1_REG" 15 90 "0x09"
D G "LTC2945_MAX_POWER_LSB_REG" 15 91 "0x0A"
D G "LTC2945_MIN_POWER_MSB2_REG" 15 92 "0x0B"
D G "LTC2945_MIN_POWER_MSB1_REG" 15 93 "0x0C"
D G "LTC2945_MIN_POWER_LSB_REG" 15 94 "0x0D"
D G "LTC2945_MAX_POWER_THRESHOLD_MSB2_REG" 15 95 "0x0E"
D G "LTC2945_MAX_POWER_THRESHOLD_MSB1_REG" 15 96 "0x0F"
D G "LTC2945_MAX_POWER_THRESHOLD_LSB_REG" 15 97 "0x10"
D G "LTC2945_MIN_POWER_THRESHOLD_MSB2_REG" 15 98 "0x11"
D G "LTC2945_MIN_POWER_THRESHOLD_MSB1_REG" 15 99 "0x12"
D G "LTC2945_MIN_POWER_THRESHOLD_LSB_REG" 15 100 "0x13"
D G "LTC2945_DELTA_SENSE_MSB_REG" 15 102 "0x14"
D G "LTC2945_DELTA_SENSE_LSB_REG" 15 103 "0x15"
D G "LTC2945_MAX_DELTA_SENSE_MSB_REG" 15 104 "0x16"
D G "LTC2945_MAX_DELTA_SENSE_LSB_REG" 15 105 "0x17"
D G "LTC2945_MIN_DELTA_SENSE_MSB_REG" 15 106 "0x18"
D G "LTC2945_MIN_DELTA_SENSE_LSB_REG" 15 107 "0x19"
D G "LTC2945_MAX_DELTA_SENSE_THRESHOLD_MSB_REG" 15 108 "0x1A"
D G "LTC2945_MAX_DELTA_SENSE_THRESHOLD_LSB_REG" 15 109 "0x1B"
D G "LTC2945_MIN_DELTA_SENSE_THRESHOLD_MSB_REG" 15 110 "0x1C"
D G "LTC2945_MIN_DELTA_SENSE_THRESHOLD_LSB_REG" 15 111 "0x1D"
D G "LTC2945_VIN_MSB_REG" 15 113 "0x1E"
D G "LTC2945_VIN_LSB_REG" 15 114 "0x1F"
D G "LTC2945_MAX_VIN_MSB_REG" 15 115 "0x20"
D G "LTC2945_MAX_VIN_LSB_REG" 15 116 "0x21"
D G "LTC2945_MIN_VIN_MSB_REG" 15 117 "0x22"
D G "LTC2945_MIN_VIN_LSB_REG" 15 118 "0x23"
D G "LTC2945_MAX_VIN_THRESHOLD_MSB_REG" 15 119 "0x24"
D G "LTC2945_MAX_VIN_THRESHOLD_LSB_REG" 15 120 "0x25"
D G "LTC2945_MIN_VIN_THRESHOLD_MSB_REG" 15 121 "0x26"
D G "LTC2945_MIN_VIN_THRESHOLD_LSB_REG" 15 122 "0x27"
D G "LTC2945_ADIN_MSB_REG" 15 124 "0x28"
D G "LTC2945_ADIN_LSB_REG_REG" 15 125 "0x29"
D G "LTC2945_MAX_ADIN_MSB_REG" 15 126 "0x2A"
D G "LTC2945_MAX_ADIN_LSB_REG" 15 127 "0x2B"
D G "LTC2945_MIN_ADIN_MSB_REG" 15 128 "0x2C"
D G "LTC2945_MIN_ADIN_LSB_REG" 15 129 "0x2D"
D G "LTC2945_MAX_ADIN_THRESHOLD_MSB_REG" 15 130 "0x2E"
D G "LTC2945_MAX_ADIN_THRESHOLD_LSB_REG" 15 131 "0x2F"
D G "LTC2945_MIN_ADIN_THRESHOLD_MSB_REG" 15 132 "0x30"
D G "LTC2945_MIN_ADIN_THRESHOLD_LSB_REG" 15 133 "0x31"
D G "LTC2945_DELTA_SENSE_SNAPSHOT" 15 136 "0x80"
D G "LTC2945_VIN_SNAPSHOT" 15 137 "0xA0"
D G "LTC2945_ADIN_SNAPSHOT" 15 138 "0xC0"
D G "LTC2945_CONTINUOUS_MODE" 15 141 "0x00"
D G "LTC2945_SHUTDOWN_MODE" 15 142 "0x02"
D G "LTC2945_TEST_MODE" 15 143 "0x10"
D G "LTC2945_RESET_ALL_FAULTS" 15 144 "0x00"
D G "LTC2945_SENSE_MULTIPLIER" 15 145 "0x01"
D G "LTC2945_SENSE_MONITOR" 15 146 "0x04"
D G "LTC2945_MAX_POWER_MSB2_RESET" 15 148 "0x00"
D G "LTC2945_MIN_POWER_MSB2_RESET" 15 149 "0xFFFFFF"
D G "LTC2945_MAX_DELTA_SENSE_MSB_RESET" 15 150 "0x00"
D G "LTC2945_MIN_DELTA_SENSE_MSB_RESET" 15 151 "0xFFFF"
D G "LTC2945_MAX_VIN_MSB_RESET" 15 152 "0x00"
D G "LTC2945_MIN_VIN_MSB_RESET" 15 153 "0xFFFF"
D G "LTC2945_MAX_ADIN_MSB_RESET" 15 154 "0x00"
D G "LTC2945_MIN_ADIN_MSB_RESET" 15 155 "0xFFFF"
D G "LTC2945_ENABLE_MAX_POWER_ALERT" 15 157 "0x80"
D G "LTC2945_ENABLE_MIN_POWER_ALERT" 15 158 "0x40"
D G "LTC2945_DISABLE_MAX_POWER_ALERT" 15 159 "0x7F"
D G "LTC2945_DISABLE_MIN_POWER_ALERT" 15 160 "0xBF"
D G "LTC2945_ENABLE_MAX_DELTA_SENSE_ALERT" 15 162 "0x20"
D G "LTC2945_ENABLE_MIN_DELTA_SENSE_ALERT" 15 163 "0x10"
D G "LTC2945_DISABLE_MAX_DELTA_SENSE_ALERT" 15 164 "0xDF"
D G "LTC2945_DISABLE_MIN_DELTA_SENSE_ALERT" 15 165 "0xEF"
D G "LTC2945_ENABLE_MAX_VIN_ALERT" 15 167 "0x08"
D G "LTC2945_ENABLE_MIN_VIN_ALERT" 15 168 "0x04"
D G "LTC2945_DISABLE_MAX_VIN_ALERT" 15 169 "0xF7"
D G "LTC2945_DISABLE_MIN_VIN_ALERT" 15 170 "0xFB"
D G "LTC2945_ENABLE_MAX_ADIN_ALERT" 15 172 "0x02"
D G "LTC2945_ENABLE_MIN_ADIN_ALERT" 15 173 "0x01"
D G "LTC2945_DISABLE_MAX_ADIN_ALERT" 15 174 "0xFD"
D G "LTC2945_DISABLE_MIN_ADIN_ALERT" 15 175 "0xFE"
V G "LTC2945_ADIN_lsb" 15 178 "float"
V G "LTC2945_DELTA_SENSE_lsb" 15 179 "float"
V G "LTC2945_VIN_lsb" 15 180 "float"
V G "LTC2945_Power_lsb" 15 181 "float"
V G "LTC2945_ADIN_DELTA_SENSE_lsb" 15 182 "float"
C L "LTC2945_write" 15 1 1 "FUNCTION"
V L "i2c_address" 15 184 "int8"
V L "command" 15 184 "int8"
V L "code" 15 184 "int8"
F G "LTC2945_write" 15 184 "int8(int8 i2c_address,int8 command,int8 code)" "Write a 8-bit code to the LTC2945."
C L "LTC2945_write" 15 1 1 "FUNCTION"
V L "ack" 15 188 "int8"
C L "LTC2945_write" 15 1 1 "FUNCTION"
C L "LTC2945_write" 15 1 1 "FUNCTION"
C L "LTC2945_write" 15 1 1 "FUNCTION"
C L "LTC2945_write" 15 1 1 "FUNCTION"
C L "LTC2945_write" 15 1 1 "FUNCTION"
C L "LTC2945_write" 15 1 1 "FUNCTION"
V L "i2c_address" 15 200 "int8"
V L "command" 15 200 "int8"
V L "code" 15 200 "int16"
F G "LTC2945_write_16_bits" 15 200 "int8(int8 i2c_address,int8 command,int16 code)" "Write a 16-bit code to the LTC2945."
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
V L "ack" 15 204 "int8"
V L "data" 15 205 "{int8[2] b,int32 w}"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_16_bits" 15 1 1 "FUNCTION"
V L "i2c_address" 15 219 "int8"
V L "command" 15 219 "int8"
V L "code" 15 219 "int32"
F G "LTC2945_write_24_bits" 15 219 "int8(int8 i2c_address,int8 command,int32 code)" "Write a 24-bit code to the LTC2945."
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
V L "ack" 15 223 "int8"
V L "data" 15 224 "{int8[3] b,int32 w}"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_write_24_bits" 15 1 1 "FUNCTION"
V L "i2c_address" 15 239 "int8"
V L "command" 15 239 "int8"
V L "code" 15 239 "int8"
F G "LTC2945_read" 15 239 "int8(int8 i2c_address,int8 command,int8 code)" "Reads a 8-bit code from LTC2945"
V L "ack" 15 242 "int8"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
C L "LTC2945_read" 15 1 1 "FUNCTION"
V L "i2c_address" 15 253 "int8"
V L "command" 15 253 "int8"
V L "code" 15 253 "int32"
F G "LTC2945_read_12_bits" 15 253 "int8(int8 i2c_address,int8 command,int32 code)" "Reads a 12-bit code from LTC2945"
V L "ack" 15 256 "int8"
V L "data" 15 257 "{int8[2] b,int32 w}" "Combines bytes"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_12_bits" 15 1 1 "FUNCTION"
V L "i2c_address" 15 270 "int8"
V L "command" 15 270 "int8"
V L "code" 15 270 "int16"
F G "LTC2945_read_16_bits" 15 270 "int8(int8 i2c_address,int8 command,int16 code)" "Reads a 16-bit code from LTC2945"
V L "ack" 15 273 "int8"
V L "data" 15 274 "{int8[2] b,int32 w}" "Combines bytes"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_16_bits" 15 1 1 "FUNCTION"
V L "i2c_address" 15 287 "int8"
V L "command" 15 287 "int8"
V L "code" 15 287 "int32"
F G "LTC2945_read_24_bits" 15 287 "int8(int8 i2c_address,int8 command,int32 code)" "Reads a 24-bit code from LTC2945"
V L "ack" 15 290 "int8"
V L "data" 15 291 "{int8[4] b,int32 w}" "Combines bytes"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
C L "LTC2945_read_24_bits" 15 1 1 "FUNCTION"
V L "adc_code" 15 305 "int32"
F G "LTC2945_VIN_voltage" 15 305 "float(int32 adc_code)" "Calculate the LTC2945 VIN voltage"
V L "voltage" 15 308 "float"
V L "adc_code" 15 313 "int32"
F G "LTC2945_ADIN_voltage" 15 313 "float(int32 adc_code)" "Calculate the LTC2945 ADIN voltage"
V L "adc_voltage" 15 316 "float"
V L "adc_code" 15 321 "int32"
V L "resistor" 15 321 "float"
F G "LTC2945_current" 15 321 "float(int32 adc_code,float resistor)" "Calculate the LTC2945 current with a sense resitor"
V L "voltage" 15 324 "float"
V L "current" 15 324 "float"
V L "adc_code" 15 330 "int32"
V L "resistor" 15 330 "float"
F G "LTC2945_power" 15 330 "float(int32 adc_code,float resistor)" "Calculate the LTC2945 power"
V L "voltage" 15 333 "float"
V L "power" 15 333 "float"
C L "LTC2945_power" 15 1 1 "FUNCTION"
V L "adc_code" 15 339 "int32"
V L "resistor" 15 339 "float"
F G "LTC2945_ADIN_power" 15 339 "float(int32 adc_code,float resistor)" "Calculate the LTC2945 power with the ADIN"
V L "voltage" 15 342 "float"
V L "power" 15 342 "float"
C L "LTC2945_ADIN_power" 15 1 1 "FUNCTION"
D G "LTC2991_h" 16 63 ""
D G "LTC2991_I2C_ADDRESS" 16 71 "0x90" "Low       Low       Low"
D G "LTC2991_STATUS_LOW_REG" 16 83 "0x00" "Data_Valid Bits(V1 Through V8)"
D G "LTC2991_CHANNEL_ENABLE_REG" 16 84 "0x01" "Channel Enable,Vcc, T_internal Conversion Status, Trigger"
D G "LTC2991_CONTROL_V1234_REG" 16 85 "0x06" "V1, V2, V3, and V4 Control Register"
D G "LTC2991_CONTROL_V5678_REG" 16 86 "0x07" "V5, V6, V7, AND V8 Control Register"
D G "LTC2991_PWM_THRESHOLD_Tinternal_REG" 16 87 "0x08" "PWM Threshold and T_internal Control Register"
D G "LTC2991_PWM_THRESHOLD_MSB_REG" 16 88 "0x09" "PWM Threshold"
D G "LTC2991_V1_MSB_REG" 16 89 "0x0A" "V1, or T_R1 T MSB"
D G "LTC2991_V1_LSB_REG" 16 90 "0x0B" "V1, or T_R1 T LSB"
D G "LTC2991_V2_MSB_REG" 16 91 "0x0C" "V2, V1-V2, or T_R2 Voltage MSB"
D G "LTC2991_V2_LSB_REG" 16 92 "0x0D" "V2, V1-V2, or T_R2 Voltage LSB"
D G "LTC2991_V3_MSB_REG" 16 93 "0x0E" "V3, or T_R2 T MSB"
D G "LTC2991_V3_LSB_REG" 16 94 "0x0F" "V3, or T_R2 T LSB"
D G "LTC2991_V4_MSB_REG" 16 95 "0x10" "V4,V3-V4, or T_R2 Voltage MSB"
D G "LTC2991_V4_LSB_REG" 16 96 "0x11" "V4,V3-V4, or T_R2 Voltage LSB"
D G "LTC2991_V5_MSB_REG" 16 97 "0x12" "V5, or T_R3 T MSB"
D G "LTC2991_V5_LSB_REG" 16 98 "0x13" "V5, or T_R3 T LSB"
D G "LTC2991_V6_MSB_REG" 16 99 "0x14" "V6, V5-V6, or T_R3 Voltage MSB"
D G "LTC2991_V6_LSB_REG" 16 100 "0x15" "V6, V5-V6, or T_R3 Voltage LSB"
D G "LTC2991_V7_MSB_REG" 16 101 "0x16" "V7, or T_R4 T MSB"
D G "LTC2991_V7_LSB_REG" 16 102 "0x17" "V7, or T_R4 T LSB"
D G "LTC2991_V8_MSB_REG" 16 103 "0x18" "V8,V7-V8, or T_R4 Voltage MSB"
D G "LTC2991_V8_LSB_REG" 16 104 "0x19" "V8,V7-V8, or T_R4 Voltage LSB"
D G "LTC2991_T_Internal_MSB_REG" 16 105 "0x1A" "T_Internal MSB"
D G "LTC2991_T_Internal_LSB_REG" 16 106 "0x1B" "T_Internal LSB"
D G "LTC2991_Vcc_MSB_REG" 16 107 "0x1C" "Vcc MSB"
D G "LTC2991_Vcc_LSB_REG" 16 108 "0x1D" "Vcc LSB"
D G "LTC2991_ENABLE_ALL_CHANNELS" 16 111 "0xF8"
D G "LTC2991_REPEAT_MODE" 16 112 "0x10"
D G "LTC2991_DIFFERENTIAL_ENABLE" 16 113 "0x11"
D G "LTC2991_PWM_DISABLE" 16 115 "0x10"
D G "LTC2991_PWM_ENABLE" 16 116 "0x30"
D G "LTC2991_PWM_INVERT" 16 117 "0x40"
D G "LTC2991_INT_FILTER_ENABLE" 16 119 "0x08"
D G "LTC2991_V1_V2_FILTER_ENABLE" 16 120 "0x08"
D G "LTC2991_V3_V4_FILTER_ENABLE" 16 121 "0x80"
D G "LTC2991_V5_V6_FILTER_ENABLE" 16 122 "0x08"
D G "LTC2991_V7_V8_FILTER_ENABLE" 16 123 "0x80"
D G "LTC2991_INT_KELVIN_ENABLE" 16 125 "0x04"
D G "LTC2991_V1_V2_KELVIN_ENABLE" 16 126 "0x04"
D G "LTC2991_V3_V4_KELVIN_ENABLE" 16 127 "0x40"
D G "LTC2991_V5_V6_KELVIN_ENABLE" 16 128 "0x04"
D G "LTC2991_V7_V8_KELVIN_ENABLE" 16 129 "0x40"
D G "LTC2991_V1_V2_TEMP_ENABLE" 16 131 "0x02"
D G "LTC2991_V3_V4_TEMP_ENABLE" 16 132 "0x20"
D G "LTC2991_V5_V6_TEMP_ENABLE" 16 133 "0x02"
D G "LTC2991_V7_V8_TEMP_ENABLE" 16 134 "0x20"
V G "LTC2991_Single_Ended_lsb" 16 137 "float"
V G "LTC2991_Differential_lsb" 16 138 "float"
V G "LTC2991_Vcc_lsb" 16 139 "float"
V G "LTC2991_Temperature_lsb" 16 140 "float"
V G "LTC2991_Diode_Voltage_lsb" 16 141 "float"
C L "LTC2991_write" 16 1 1 "FUNCTION"
V L "i2c_address" 16 143 "int8"
V L "command" 16 143 "int8"
V L "code" 16 143 "int8"
F G "LTC2991_write" 16 143 "int8(int8 i2c_address,int8 command,int8 code)" "Write a 8-bit code to the LTC2991."
C L "LTC2991_write" 16 1 1 "FUNCTION"
V L "ack" 16 148 "int8"
C L "LTC2991_write" 16 1 1 "FUNCTION"
C L "LTC2991_write" 16 1 1 "FUNCTION"
C L "LTC2991_write" 16 1 1 "FUNCTION"
C L "LTC2991_write" 16 1 1 "FUNCTION"
C L "LTC2991_write" 16 1 1 "FUNCTION"
C L "LTC2991_write" 16 1 1 "FUNCTION"
V L "i2c_address" 16 160 "int8"
V L "command" 16 160 "int8"
V L "code" 16 160 "int16"
F G "LTC2991_read" 16 160 "int8(int8 i2c_address,int8 command,int16 code)" "Reads a 16-bit code from LTC2991"
V L "ack" 16 163 "int16"
V L "data" 16 164 "{int8[2] b,int32 w}" "Combines bytes"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
C L "LTC2991_read" 16 1 1 "FUNCTION"
V L "code" 16 187 "int32"
F G "LTC2991_voltage_Single_Ended" 16 187 "float(int32 code)" "Calculate the LTC2991 input voltage and calculates Vcc"
V L "voltage" 16 190 "float"
V L "sign" 16 191 "int16"
C L "LTC2991_voltage_Single_Ended" 16 1 1 "FUNCTION"
V L "code" 16 201 "int32"
F G "LTC2991_Vcc" 16 201 "float(int32 code)" "Calculate the LTC2991 input voltage and calculates Vcc"
V L "voltage" 16 204 "float"
V L "sign" 16 205 "int16"
C L "LTC2991_Vcc" 16 1 1 "FUNCTION"
V L "code" 16 214 "int32"
F G "LTC2991_voltage_Differential" 16 214 "float(int32 code)" "Calculate the LTC2991 input voltage."
V L "voltage" 16 217 "float"
V L "sign" 16 218 "int16"
C L "LTC2991_voltage_Differential" 16 1 1 "FUNCTION"
V L "code" 16 227 "int32"
F G "LTC2991_Temperature" 16 227 "float(int32 code)"
V L "temperature" 16 229 "float"
C L "LTC2991_Temperature" 16 1 1 "FUNCTION"
V L "code" 16 234 "int32"
F G "LTC2991_Diode_Voltage" 16 234 "float(int32 code)"
V L "voltage" 16 236 "float"
C L "LTC2991_Diode_Voltage" 16 1 1 "FUNCTION"
D G "LTC4151_h" 17 55 ""
D G "LTC4151_I2C_ADDRESS" 17 71 "0xDE" "Low       Low"
D G "LTC4151_SENSE_MSB_REG" 17 76 "0x00" "ADC Current Sense Voltage Data (8 MSB) **"
D G "LTC4151_SENSE_LSB_REG" 17 77 "0x01" "ADC Current Sense Voltage Data (4 LSB) **"
D G "LTC4151_VIN_MSB_REG" 17 78 "0x02" "ADC V_IN Voltage Data (8 MSB) **"
D G "LTC4151_VIN_LSB_REG" 17 79 "0x03" "ADC V_IN Voltage Data (4 LSB) **"
D G "LTC4151_ADIN_MSB_REG" 17 80 "0x04" "ADC ADIN Voltage Data (8 MSB) **"
D G "LTC4151_ADIN_LSB_REG" 17 81 "0x05" "ADC ADIN Voltage Data (4 LSB) **"
D G "LTC4151_CONTROL_REG" 17 82 "0x06" "Controls ADC Operation Mode and Test Mode"
D G "LTC4151_SENSE_CHANNEL_REG" 17 85 "0x00" "ADC Sense Channel For Snapshot Mode"
D G "LTC4151_VIN_CHANNEL_REG" 17 86 "0x20" "ADC V_IN Channel For Snapshot Mode"
D G "LTC4151_ADIN_CHANNEL_REG" 17 87 "0x40" "ADC ADIN Channel For Snapshot Mode"
D G "LTC4151_CONTINUOUS_MODE" 17 90 "0x00"
D G "LTC4151_SNAPSHOT_MODE" 17 91 "0x80"
V G "LTC4151_sense_lsb" 17 93 "float"
V G "LTC4151_vin_lsb" 17 94 "float"
V G "LTC4151_adin_lsb" 17 95 "float"
V L "i2c_address" 17 97 "int8"
V L "command" 17 97 "int8"
V L "code" 17 97 "int8"
F G "LTC4151_write" 17 97 "int8(int8 i2c_address,int8 command,int8 code)" "Write a 8-bit code to the LTC4151."
C L "LTC4151_write" 17 84 1 "FUNCTION"
V L "ack" 17 101 "int8"
C L "LTC4151_write" 17 84 1 "FUNCTION"
C L "LTC4151_write" 17 84 1 "FUNCTION"
C L "LTC4151_write" 17 84 1 "FUNCTION"
C L "LTC4151_write" 17 84 1 "FUNCTION"
C L "LTC4151_write" 17 84 1 "FUNCTION"
C L "LTC4151_write" 17 84 1 "FUNCTION"
V L "i2c_address" 17 113 "int8"
V L "command" 17 113 "int8"
V L "code" 17 113 "int16"
F G "LTC4151_read" 17 113 "int8(int8 i2c_address,int8 command,int16 code)" "Reads a 16-bit code from LTC4151"
V L "ack" 17 116 "int16"
V L "data" 17 117 "{int8[2] b,int32 w}" "Combines bytes"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
C L "LTC4151_read" 17 84 1 "FUNCTION"
V L "code" 17 136 "int32"
V L "resistor" 17 136 "float"
F G "LTC4151_sense_Current" 17 136 "float(int32 code,float resistor)" "Calculates the LTC4151 sense current in mA with resistor"
V L "voltage" 17 139 "float"
V L "current" 17 139 "float"
V L "code" 17 145 "int32"
F G "LTC4151_Vin_voltage" 17 145 "float(int32 code)" "Calculates the LTC4151 V_IN voltage"
V L "voltage" 17 148 "float"
V L "code" 17 153 "int32"
F G "LTC4151_ADIN_voltage" 17 153 "float(int32 code)" "Calculates the LTC4151 ADIN in mV"
V L "voltage" 17 156 "float"
F G "MAIN" 0 20 "void()"
V L "adc_code" 0 22 "int16"
V L "adc_code_2" 0 23 "int32"
V L "adc_reading" 0 24 "int32"
V L "adc_command" 0 25 "int8"
V L "adc_command_2" 0 26 "int16"
V L "code" 0 27 "int8"
V L "command" 0 28 "int8"
V L "dac_command" 0 29 "int8"
V L "dac_address" 0 30 "int8"
V L "dac_code" 0 31 "int16"
V L "i2c_address" 0 32 "int8"
V L "ack" 0 33 "int8"
V L "overrange" 0 34 "int8"
V L "result" 0 35 "float"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 4 0
F B "write_program_memory8" 4 0
F B "read_program_memory" 4 0
F B "read_program_memory8" 4 0
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 0
F B "set_pwm2_duty" 1 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "i2c_read" 0 2
F B "i2c_write" 1 2
F B "i2c_start" 0 2
F B "i2c_stop" 0 1
F B "i2c_isr_state" 0 1
