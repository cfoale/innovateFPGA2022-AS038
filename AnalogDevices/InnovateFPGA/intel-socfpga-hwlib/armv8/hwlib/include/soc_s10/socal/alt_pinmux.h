/***********************************************************************************
*                                                                                  *
* Copyright 2013-2015 Altera Corporation. All Rights Reserved.                     *
*                                                                                  *
* Redistribution and use in source and binary forms, with or without               *
* modification, are permitted provided that the following conditions are met:      *
*                                                                                  *
* 1. Redistributions of source code must retain the above copyright notice,        *
*    this list of conditions and the following disclaimer.                         *
*                                                                                  *
* 2. Redistributions in binary form must reproduce the above copyright notice,     *
*    this list of conditions and the following disclaimer in the documentation     *
*    and/or other materials provided with the distribution.                        *
*                                                                                  *
* 3. Neither the name of the copyright holder nor the names of its contributors    *
*    may be used to endorse or promote products derived from this software without *
*    specific prior written permission.                                            *
*                                                                                  *
* THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"      *
* AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE        *
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE       *
* ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE        *
* LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR              *
* CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF             *
* SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS         *
* INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN          *
* CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)          *
* ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE       *
* POSSIBILITY OF SUCH DAMAGE.                                                      *
*                                                                                  *
***********************************************************************************/

/* Altera - ALT_PINMUX */

#ifndef __ALT_SOCAL_PINMUX_H__
#define __ALT_SOCAL_PINMUX_H__

#ifndef __ASSEMBLY__
#ifdef __cplusplus
#include <cstdint>
extern "C"
{
#else   /* __cplusplus */
#include <stdint.h>
#endif  /* __cplusplus */
#endif  /* __ASSEMBLY__ */

/*
 * Component : HPS PinmuxCSR - PINMUX
 * HPS PinmuxCSR
 * 
 * HPS Pinmux CSR.
 * 
 */
/*
 * Register : HPS Pinmux Select Register 0 - pin0sel
 * 
 * HPS Pinmux Select for IO0
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO0. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.cclk
 * 
 * 0001 (1) -- Pin connected to usb0.clk
 * 
 * 0010 (2) -- Pin connected to trace.d10
 * 
 * 0011 (3) -- Pin connected to nand.adq0
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart0.cts_n
 * 
 * 0110 (6) -- Pin connected to spis0.clk
 * 
 * 0111 (7) -- Pin connected to spim0.ss1_n
 * 
 * 1000 (8) -- Pin connected to gpio0.io0
 * 
 * 1001 (9) -- Pin connected to loan.io1
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN0SEL_VAL register field. */
#define ALT_PINMUX_PIN0SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN0SEL_VAL register field. */
#define ALT_PINMUX_PIN0SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN0SEL_VAL register field. */
#define ALT_PINMUX_PIN0SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN0SEL_VAL register field value. */
#define ALT_PINMUX_PIN0SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN0SEL_VAL register field value. */
#define ALT_PINMUX_PIN0SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN0SEL_VAL register field. */
#define ALT_PINMUX_PIN0SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN0SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN0SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN0SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN0SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN0SEL.
 */
struct ALT_PINMUX_PIN0SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN0SEL. */
typedef struct ALT_PINMUX_PIN0SEL_s  ALT_PINMUX_PIN0SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN0SEL register. */
#define ALT_PINMUX_PIN0SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN0SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN0SEL_OFST        0x0

/*
 * Register : HPS Pinmux Select Register 1 - pin1sel
 * 
 * HPS Pinmux Select for IO1
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO1. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * Pin connected to sdmmc.cmd
 * 
 * 0001 (1) -- Pin connected to usb0.stp
 * 
 * 0010 (2) -- Pin connected to trace.d9
 * 
 * 0011 (3) -- Pin connected to nand.adq1
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart0.rts_n
 * 
 * 0110 (6) -- Pin connected to spis0.mosi
 * 
 * 0111 (7) -- Pin connected to spim1.ss1_n
 * 
 * 1000 (8) -- Pin connected to gpio0.io1
 * 
 * 1001 (9) -- Pin connected to loan.io0
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN1SEL_VAL register field. */
#define ALT_PINMUX_PIN1SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN1SEL_VAL register field. */
#define ALT_PINMUX_PIN1SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN1SEL_VAL register field. */
#define ALT_PINMUX_PIN1SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN1SEL_VAL register field value. */
#define ALT_PINMUX_PIN1SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN1SEL_VAL register field value. */
#define ALT_PINMUX_PIN1SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN1SEL_VAL register field. */
#define ALT_PINMUX_PIN1SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN1SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN1SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN1SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN1SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN1SEL.
 */
struct ALT_PINMUX_PIN1SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN1SEL. */
typedef struct ALT_PINMUX_PIN1SEL_s  ALT_PINMUX_PIN1SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN1SEL register. */
#define ALT_PINMUX_PIN1SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN1SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN1SEL_OFST        0x4

/*
 * Register : HPS Pinmux Select Register 2 - pin2sel
 * 
 * HPS Pinmux Select for IO2
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO2. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data0
 * 
 * 0001 (1) -- Pin connected to usb0.dir
 * 
 * 0010 (2) -- Pin connected to trace.d8
 * 
 * 0011 (3) -- Pin connected to nand.we_n
 * 
 * 0100 (4) -- Pin connected to i2c1.sda
 * 
 * 0101 (5) -- Pin connected to uart0.tx
 * 
 * 0110 (6) -- Pin connected to spis0.ss0_n
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io2
 * 
 * 1001 (9) -- Pin connected to loan.io4
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN2SEL_VAL register field. */
#define ALT_PINMUX_PIN2SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN2SEL_VAL register field. */
#define ALT_PINMUX_PIN2SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN2SEL_VAL register field. */
#define ALT_PINMUX_PIN2SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN2SEL_VAL register field value. */
#define ALT_PINMUX_PIN2SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN2SEL_VAL register field value. */
#define ALT_PINMUX_PIN2SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN2SEL_VAL register field. */
#define ALT_PINMUX_PIN2SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN2SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN2SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN2SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN2SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN2SEL.
 */
struct ALT_PINMUX_PIN2SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN2SEL. */
typedef struct ALT_PINMUX_PIN2SEL_s  ALT_PINMUX_PIN2SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN2SEL register. */
#define ALT_PINMUX_PIN2SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN2SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN2SEL_OFST        0x8

/*
 * Register : HPS Pinmux Select Register 3 - pin3sel
 * 
 * HPS Pinmux Select for IO3
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO3. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data1
 * 
 * 0001 (1) -- Pin connected to usb0.data0
 * 
 * 0010 (2) -- Pin connected to trace.d7
 * 
 * 0011 (3) -- Pin connected to nand.re_n
 * 
 * 0100 (4) -- Pin connected to i2c1.scl
 * 
 * 0101 (5) -- Pin connected to uart0.rx
 * 
 * 0110 (6) -- Pin connected to spis0.miso
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io3
 * 
 * 1001 (9) -- Pin connected to loan.io3
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN3SEL_VAL register field. */
#define ALT_PINMUX_PIN3SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN3SEL_VAL register field. */
#define ALT_PINMUX_PIN3SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN3SEL_VAL register field. */
#define ALT_PINMUX_PIN3SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN3SEL_VAL register field value. */
#define ALT_PINMUX_PIN3SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN3SEL_VAL register field value. */
#define ALT_PINMUX_PIN3SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN3SEL_VAL register field. */
#define ALT_PINMUX_PIN3SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN3SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN3SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN3SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN3SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN3SEL.
 */
struct ALT_PINMUX_PIN3SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN3SEL. */
typedef struct ALT_PINMUX_PIN3SEL_s  ALT_PINMUX_PIN3SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN3SEL register. */
#define ALT_PINMUX_PIN3SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN3SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN3SEL_OFST        0xc

/*
 * Register : HPS Pinmux Select Register 4 - pin4sel
 * 
 * HPS Pinmux Select for IO4
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO4. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data2
 * 
 * 0001 (1) -- Pin connected to usb0.data1
 * 
 * 0010 (2) -- Pin connected to trace.d6
 * 
 * 0011 (3) -- Pin connected to nand.wp_n
 * 
 * 0100 (4) -- Pin connected to i2c0.sda
 * 
 * 0101 (5) -- Pin connected to uart1.cts_n
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- Pin connected to spim0.clk
 * 
 * 1000 (8) -- Pin connected to gpio0.io4
 * 
 * 1001 (9) -- Pin connected to loan.io2
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN4SEL_VAL register field. */
#define ALT_PINMUX_PIN4SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN4SEL_VAL register field. */
#define ALT_PINMUX_PIN4SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN4SEL_VAL register field. */
#define ALT_PINMUX_PIN4SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN4SEL_VAL register field value. */
#define ALT_PINMUX_PIN4SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN4SEL_VAL register field value. */
#define ALT_PINMUX_PIN4SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN4SEL_VAL register field. */
#define ALT_PINMUX_PIN4SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN4SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN4SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN4SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN4SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN4SEL.
 */
struct ALT_PINMUX_PIN4SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN4SEL. */
typedef struct ALT_PINMUX_PIN4SEL_s  ALT_PINMUX_PIN4SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN4SEL register. */
#define ALT_PINMUX_PIN4SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN4SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN4SEL_OFST        0x10

/*
 * Register : HPS Pinmux Select Register 5 - pin5sel
 * 
 * HPS Pinmux Select for IO5
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO5. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data3
 * 
 * 0001 (1) -- Pin connected to usb0.nxt
 * 
 * 0010 (2) -- Pin connected to trace.d5
 * 
 * 0011 (3) -- Pin connected to nand.adq2
 * 
 * 0100 (4) -- Pin connected to i2c0.scl
 * 
 * 0101 (5) -- Pin connected to uart1.rts_n
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- Pin connected to spim0.mosi
 * 
 * 1000 (8) -- Pin connected to gpio0.io5
 * 
 * 1001 (9) -- Pin connected to loan.io5
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN5SEL_VAL register field. */
#define ALT_PINMUX_PIN5SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN5SEL_VAL register field. */
#define ALT_PINMUX_PIN5SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN5SEL_VAL register field. */
#define ALT_PINMUX_PIN5SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN5SEL_VAL register field value. */
#define ALT_PINMUX_PIN5SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN5SEL_VAL register field value. */
#define ALT_PINMUX_PIN5SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN5SEL_VAL register field. */
#define ALT_PINMUX_PIN5SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN5SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN5SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN5SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN5SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN5SEL.
 */
struct ALT_PINMUX_PIN5SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN5SEL. */
typedef struct ALT_PINMUX_PIN5SEL_s  ALT_PINMUX_PIN5SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN5SEL register. */
#define ALT_PINMUX_PIN5SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN5SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN5SEL_OFST        0x14

/*
 * Register : HPS Pinmux Select Register 6 - pin6sel
 * 
 * HPS Pinmux Select for IO6
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO6. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data4
 * 
 * 0001 (1) -- Pin connected to usb0.data2
 * 
 * 0010 (2) -- Pin connected to trace.d4
 * 
 * 0011 (3) -- Pin connected to nand.adq3
 * 
 * 0100 (4) -- Pin connected to i2c_emac2.sda
 * 
 * 0101 (5) -- Pin connected to uart1.tx
 * 
 * 0110 (6) -- Pin connected to mdio2.mdio
 * 
 * 0111 (7) -- Pin connected to spim0.miso
 * 
 * 1000 (8) -- Pin connected to gpio0.io6
 * 
 * 1001 (9) -- Pin connected to loan.io6
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN6SEL_VAL register field. */
#define ALT_PINMUX_PIN6SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN6SEL_VAL register field. */
#define ALT_PINMUX_PIN6SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN6SEL_VAL register field. */
#define ALT_PINMUX_PIN6SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN6SEL_VAL register field value. */
#define ALT_PINMUX_PIN6SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN6SEL_VAL register field value. */
#define ALT_PINMUX_PIN6SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN6SEL_VAL register field. */
#define ALT_PINMUX_PIN6SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN6SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN6SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN6SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN6SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN6SEL.
 */
struct ALT_PINMUX_PIN6SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN6SEL. */
typedef struct ALT_PINMUX_PIN6SEL_s  ALT_PINMUX_PIN6SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN6SEL register. */
#define ALT_PINMUX_PIN6SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN6SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN6SEL_OFST        0x18

/*
 * Register : HPS Pinmux Select Register 7 - pin7sel
 * 
 * HPS Pinmux Select for IO7
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO7. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data5
 * 
 * 0001 (1) -- Pin connected to usb0.data3
 * 
 * 0010 (2) -- Pin connected to trace.d15
 * 
 * 0011 (3) -- Pin connected to nand.cle
 * 
 * 0100 (4) -- Pin connected to i2c_emac2.scl
 * 
 * 0101 (5) -- Pin connected to uart1.rx
 * 
 * 0110 (6) -- Pin connected to mdio2.mdc
 * 
 * 0111 (7) -- Pin connected to spim0.ss0_n
 * 
 * 1000 (8) -- Pin connected to gpio0.io7
 * 
 * 1001 (9) -- Pin connected to loan.io8
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN7SEL_VAL register field. */
#define ALT_PINMUX_PIN7SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN7SEL_VAL register field. */
#define ALT_PINMUX_PIN7SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN7SEL_VAL register field. */
#define ALT_PINMUX_PIN7SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN7SEL_VAL register field value. */
#define ALT_PINMUX_PIN7SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN7SEL_VAL register field value. */
#define ALT_PINMUX_PIN7SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN7SEL_VAL register field. */
#define ALT_PINMUX_PIN7SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN7SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN7SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN7SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN7SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN7SEL.
 */
struct ALT_PINMUX_PIN7SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN7SEL. */
typedef struct ALT_PINMUX_PIN7SEL_s  ALT_PINMUX_PIN7SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN7SEL register. */
#define ALT_PINMUX_PIN7SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN7SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN7SEL_OFST        0x1c

/*
 * Register : HPS Pinmux Select Register 8 - pin8sel
 * 
 * HPS Pinmux Select for IO8
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO8. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data6
 * 
 * 0001 (1) -- Pin connected to usb0.data4
 * 
 * 0010 (2) -- Pin connected to trace.d14
 * 
 * 0011 (3) -- Pin connected to nand.adq4
 * 
 * 0100 (4) -- Pin connected to i2c_emac1.sda
 * 
 * 0101 (5) -- Pin connected to mdio1.mdio
 * 
 * 0110 (6) -- Pin connected to spis1.clk
 * 
 * 0111 (7) -- Pin connected to spim1.clk
 * 
 * 1000 (8) -- Pin connected to gpio0.io8
 * 
 * 1001 (9) -- Pin connected to loan.io7
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN8SEL_VAL register field. */
#define ALT_PINMUX_PIN8SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN8SEL_VAL register field. */
#define ALT_PINMUX_PIN8SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN8SEL_VAL register field. */
#define ALT_PINMUX_PIN8SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN8SEL_VAL register field value. */
#define ALT_PINMUX_PIN8SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN8SEL_VAL register field value. */
#define ALT_PINMUX_PIN8SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN8SEL_VAL register field. */
#define ALT_PINMUX_PIN8SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN8SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN8SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN8SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN8SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN8SEL.
 */
struct ALT_PINMUX_PIN8SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN8SEL. */
typedef struct ALT_PINMUX_PIN8SEL_s  ALT_PINMUX_PIN8SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN8SEL register. */
#define ALT_PINMUX_PIN8SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN8SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN8SEL_OFST        0x20

/*
 * Register : HPS Pinmux Select Register 9 - pin9sel
 * 
 * HPS Pinmux Select for IO9
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO9. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.data7
 * 
 * 0001 (1) -- Pin connected to usb0.data5
 * 
 * 0010 (2) -- Pin connected to trace.d13
 * 
 * 0011 (3) -- Pin connected to nand.adq5
 * 
 * 0100 (4) -- Pin connected to i2c_emac1.scl
 * 
 * 0101 (5) -- Pin connected to mdio1.mdc
 * 
 * 0110 (6) -- Pin connected to spis1.mosi
 * 
 * 0111 (7) -- Pin connected to spim1.mosi
 * 
 * 1000 (8) -- Pin connected to gpio0.io9
 * 
 * 1001 (9) -- Pin connected to loan.io10
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN9SEL_VAL register field. */
#define ALT_PINMUX_PIN9SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN9SEL_VAL register field. */
#define ALT_PINMUX_PIN9SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN9SEL_VAL register field. */
#define ALT_PINMUX_PIN9SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN9SEL_VAL register field value. */
#define ALT_PINMUX_PIN9SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN9SEL_VAL register field value. */
#define ALT_PINMUX_PIN9SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN9SEL_VAL register field. */
#define ALT_PINMUX_PIN9SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN9SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN9SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN9SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN9SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN9SEL.
 */
struct ALT_PINMUX_PIN9SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN9SEL. */
typedef struct ALT_PINMUX_PIN9SEL_s  ALT_PINMUX_PIN9SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN9SEL register. */
#define ALT_PINMUX_PIN9SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN9SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN9SEL_OFST        0x24

/*
 * Register : HPS Pinmux Select Register 10 - pin10sel
 * 
 * HPS Pinmux Select for IO10
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO10. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to sdmmc.pwr_en
 * 
 * 0001 (1) -- Pin connected to usb0.data6
 * 
 * 0010 (2) -- Pin connected to trace.d12
 * 
 * 0011 (3) -- Pin connected to nand.adq6
 * 
 * 0100 (4) -- Pin connected to i2c_emac0.sda
 * 
 * 0101 (5) -- Pin connected to mdio0.mdio
 * 
 * 0110 (6) -- Pin connected to spis1.ss0_n
 * 
 * 0111 (7) -- Pin connected to spim1.miso
 * 
 * 1000 (8) -- Pin connected to gpio0.io10
 * 
 * 1001 (9) -- Pin connected to loan.io9
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN10SEL_VAL register field. */
#define ALT_PINMUX_PIN10SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN10SEL_VAL register field. */
#define ALT_PINMUX_PIN10SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN10SEL_VAL register field. */
#define ALT_PINMUX_PIN10SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN10SEL_VAL register field value. */
#define ALT_PINMUX_PIN10SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN10SEL_VAL register field value. */
#define ALT_PINMUX_PIN10SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN10SEL_VAL register field. */
#define ALT_PINMUX_PIN10SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN10SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN10SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN10SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN10SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN10SEL.
 */
struct ALT_PINMUX_PIN10SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN10SEL. */
typedef struct ALT_PINMUX_PIN10SEL_s  ALT_PINMUX_PIN10SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN10SEL register. */
#define ALT_PINMUX_PIN10SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN10SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN10SEL_OFST        0x28

/*
 * Register : HPS Pinmux Select Register 11 - pin11sel
 * 
 * HPS Pinmux Select for IO11
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO11. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- NA
 * 
 * 0001 (1) -- Pin connected to usb0.data7
 * 
 * 0010 (2) -- Pin connected to trace.d11
 * 
 * 0011 (3) -- Pin connected to nand.adq7
 * 
 * 0100 (4) -- Pin connected to i2c_emac0.scl
 * 
 * 0101 (5) -- Pin connected to mdio0.mdc
 * 
 * 0110 (6) -- Pin connected to spis1.miso
 * 
 * 0111 (7) -- Pin connected to spim1.ss0_n
 * 
 * 1000 (8) -- Pin connected to gpio0.io11
 * 
 * 1001 (9) -- Pin connected to loan.io11
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN11SEL_VAL register field. */
#define ALT_PINMUX_PIN11SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN11SEL_VAL register field. */
#define ALT_PINMUX_PIN11SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN11SEL_VAL register field. */
#define ALT_PINMUX_PIN11SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN11SEL_VAL register field value. */
#define ALT_PINMUX_PIN11SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN11SEL_VAL register field value. */
#define ALT_PINMUX_PIN11SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN11SEL_VAL register field. */
#define ALT_PINMUX_PIN11SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN11SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN11SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN11SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN11SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN11SEL.
 */
struct ALT_PINMUX_PIN11SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN11SEL. */
typedef struct ALT_PINMUX_PIN11SEL_s  ALT_PINMUX_PIN11SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN11SEL register. */
#define ALT_PINMUX_PIN11SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN11SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN11SEL_OFST        0x2c

/*
 * Register : HPS Pinmux Select Register 12 - pin12sel
 * 
 * HPS Pinmux Select for IO12
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO12. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.tx_clk
 * 
 * 0001 (1) -- Pin connected to usb1.clk
 * 
 * 0010 (2) -- Pin connected to trace.d10
 * 
 * 0011 (3) -- Pin connected to nand.ale
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io12
 * 
 * 1001 (9) -- Pin connected to loan.io13
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN12SEL_VAL register field. */
#define ALT_PINMUX_PIN12SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN12SEL_VAL register field. */
#define ALT_PINMUX_PIN12SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN12SEL_VAL register field. */
#define ALT_PINMUX_PIN12SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN12SEL_VAL register field value. */
#define ALT_PINMUX_PIN12SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN12SEL_VAL register field value. */
#define ALT_PINMUX_PIN12SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN12SEL_VAL register field. */
#define ALT_PINMUX_PIN12SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN12SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN12SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN12SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN12SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN12SEL.
 */
struct ALT_PINMUX_PIN12SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN12SEL. */
typedef struct ALT_PINMUX_PIN12SEL_s  ALT_PINMUX_PIN12SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN12SEL register. */
#define ALT_PINMUX_PIN12SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN12SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN12SEL_OFST        0x30

/*
 * Register : HPS Pinmux Select Register 13 - pin13sel
 * 
 * HPS Pinmux Select for IO13
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO13. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.tx_ctl
 * 
 * 0001 (1) -- Pin connected to usb1.stp
 * 
 * 0010 (2) -- Pin connected to trace.d9
 * 
 * 0011 (3) -- Pin connected to nand.rb
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io13
 * 
 * 1001 (9) -- Pin connected to loan.io14
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN13SEL_VAL register field. */
#define ALT_PINMUX_PIN13SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN13SEL_VAL register field. */
#define ALT_PINMUX_PIN13SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN13SEL_VAL register field. */
#define ALT_PINMUX_PIN13SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN13SEL_VAL register field value. */
#define ALT_PINMUX_PIN13SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN13SEL_VAL register field value. */
#define ALT_PINMUX_PIN13SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN13SEL_VAL register field. */
#define ALT_PINMUX_PIN13SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN13SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN13SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN13SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN13SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN13SEL.
 */
struct ALT_PINMUX_PIN13SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN13SEL. */
typedef struct ALT_PINMUX_PIN13SEL_s  ALT_PINMUX_PIN13SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN13SEL register. */
#define ALT_PINMUX_PIN13SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN13SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN13SEL_OFST        0x34

/*
 * Register : HPS Pinmux Select Register 14 - pin14sel
 * 
 * HPS Pinmux Select for IO14
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO14. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.rx_clk
 * 
 * 0001 (1) -- Pin connected to usb1.dir
 * 
 * 0010 (2) -- Pin connected to trace.d8
 * 
 * 0011 (3) -- Pin connected to nand.ce_n
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io14
 * 
 * 1001 (9) -- Pin connected to loan.io12
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN14SEL_VAL register field. */
#define ALT_PINMUX_PIN14SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN14SEL_VAL register field. */
#define ALT_PINMUX_PIN14SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN14SEL_VAL register field. */
#define ALT_PINMUX_PIN14SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN14SEL_VAL register field value. */
#define ALT_PINMUX_PIN14SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN14SEL_VAL register field value. */
#define ALT_PINMUX_PIN14SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN14SEL_VAL register field. */
#define ALT_PINMUX_PIN14SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN14SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN14SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN14SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN14SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN14SEL.
 */
struct ALT_PINMUX_PIN14SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN14SEL. */
typedef struct ALT_PINMUX_PIN14SEL_s  ALT_PINMUX_PIN14SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN14SEL register. */
#define ALT_PINMUX_PIN14SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN14SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN14SEL_OFST        0x38

/*
 * Register : HPS Pinmux Select Register 15 - pin15sel
 * 
 * HPS Pinmux Select for IO15
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO15. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.rx_ctl
 * 
 * 0001 (1) -- Pin connected to usb1.data0
 * 
 * 0010 (2) -- Pin connected to trace.d7
 * 
 * 0011 (3) -- NA
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io15
 * 
 * 1001 (9) -- Pin connected to loan.io15
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN15SEL_VAL register field. */
#define ALT_PINMUX_PIN15SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN15SEL_VAL register field. */
#define ALT_PINMUX_PIN15SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN15SEL_VAL register field. */
#define ALT_PINMUX_PIN15SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN15SEL_VAL register field value. */
#define ALT_PINMUX_PIN15SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN15SEL_VAL register field value. */
#define ALT_PINMUX_PIN15SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN15SEL_VAL register field. */
#define ALT_PINMUX_PIN15SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN15SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN15SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN15SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN15SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN15SEL.
 */
struct ALT_PINMUX_PIN15SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN15SEL. */
typedef struct ALT_PINMUX_PIN15SEL_s  ALT_PINMUX_PIN15SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN15SEL register. */
#define ALT_PINMUX_PIN15SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN15SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN15SEL_OFST        0x3c

/*
 * Register : HPS Pinmux Select Register 16 - pin16sel
 * 
 * HPS Pinmux Select for IO16
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO16. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.txd0
 * 
 * 0001 (1) -- Pin connected to usb1.data1
 * 
 * 0010 (2) -- Pin connected to trace.d6
 * 
 * 0011 (3) -- Pin connected to nand.adq8
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io16
 * 
 * 1001 (9) -- Pin connected to loan.io16
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN16SEL_VAL register field. */
#define ALT_PINMUX_PIN16SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN16SEL_VAL register field. */
#define ALT_PINMUX_PIN16SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN16SEL_VAL register field. */
#define ALT_PINMUX_PIN16SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN16SEL_VAL register field value. */
#define ALT_PINMUX_PIN16SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN16SEL_VAL register field value. */
#define ALT_PINMUX_PIN16SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN16SEL_VAL register field. */
#define ALT_PINMUX_PIN16SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN16SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN16SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN16SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN16SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN16SEL.
 */
struct ALT_PINMUX_PIN16SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN16SEL. */
typedef struct ALT_PINMUX_PIN16SEL_s  ALT_PINMUX_PIN16SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN16SEL register. */
#define ALT_PINMUX_PIN16SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN16SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN16SEL_OFST        0x40

/*
 * Register : HPS Pinmux Select Register 17 - pin17sel
 * 
 * HPS Pinmux Select for IO17
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO17. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.txd1
 * 
 * 0001 (1) -- Pin connected to usb1.nxt
 * 
 * 0010 (2) -- Pin connected to trace.d5
 * 
 * 0011 (3) -- Pin connected to nand.adq9
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io17
 * 
 * 1001 (9) -- Pin connected to loan.io18
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN17SEL_VAL register field. */
#define ALT_PINMUX_PIN17SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN17SEL_VAL register field. */
#define ALT_PINMUX_PIN17SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN17SEL_VAL register field. */
#define ALT_PINMUX_PIN17SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN17SEL_VAL register field value. */
#define ALT_PINMUX_PIN17SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN17SEL_VAL register field value. */
#define ALT_PINMUX_PIN17SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN17SEL_VAL register field. */
#define ALT_PINMUX_PIN17SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN17SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN17SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN17SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN17SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN17SEL.
 */
struct ALT_PINMUX_PIN17SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN17SEL. */
typedef struct ALT_PINMUX_PIN17SEL_s  ALT_PINMUX_PIN17SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN17SEL register. */
#define ALT_PINMUX_PIN17SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN17SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN17SEL_OFST        0x44

/*
 * Register : HPS Pinmux Select Register 18 - pin18sel
 * 
 * HPS Pinmux Select for IO18
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO18. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.rxd0
 * 
 * 0001 (1) -- Pin connected to usb1.data2
 * 
 * 0010 (2) -- Pin connected to trace.d4
 * 
 * 0011 (3) -- Pin connected to nand.adq10
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio0.io18
 * 
 * 1001 (9) -- Pin connected to loan.io17
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN18SEL_VAL register field. */
#define ALT_PINMUX_PIN18SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN18SEL_VAL register field. */
#define ALT_PINMUX_PIN18SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN18SEL_VAL register field. */
#define ALT_PINMUX_PIN18SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN18SEL_VAL register field value. */
#define ALT_PINMUX_PIN18SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN18SEL_VAL register field value. */
#define ALT_PINMUX_PIN18SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN18SEL_VAL register field. */
#define ALT_PINMUX_PIN18SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN18SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN18SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN18SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN18SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN18SEL.
 */
struct ALT_PINMUX_PIN18SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN18SEL. */
typedef struct ALT_PINMUX_PIN18SEL_s  ALT_PINMUX_PIN18SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN18SEL register. */
#define ALT_PINMUX_PIN18SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN18SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN18SEL_OFST        0x48

/*
 * Register : HPS Pinmux Select Register 19 - pin19sel
 * 
 * HPS Pinmux Select for IO19
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO19. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.rxd1
 * 
 * 0001 (1) -- Pin connected to usb1.data3
 * 
 * 0010 (2) -- Pin connected to trace.clk
 * 
 * 0011 (3) -- Pin connected to nand.adq11
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- Pin connected to spim1.ss1_n
 * 
 * 1000 (8) -- Pin connected to gpio0.io19
 * 
 * 1001 (9) -- Pin connected to loan.io19
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN19SEL_VAL register field. */
#define ALT_PINMUX_PIN19SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN19SEL_VAL register field. */
#define ALT_PINMUX_PIN19SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN19SEL_VAL register field. */
#define ALT_PINMUX_PIN19SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN19SEL_VAL register field value. */
#define ALT_PINMUX_PIN19SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN19SEL_VAL register field value. */
#define ALT_PINMUX_PIN19SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN19SEL_VAL register field. */
#define ALT_PINMUX_PIN19SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN19SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN19SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN19SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN19SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN19SEL.
 */
struct ALT_PINMUX_PIN19SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN19SEL. */
typedef struct ALT_PINMUX_PIN19SEL_s  ALT_PINMUX_PIN19SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN19SEL register. */
#define ALT_PINMUX_PIN19SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN19SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN19SEL_OFST        0x4c

/*
 * Register : HPS Pinmux Select Register 20 - pin20sel
 * 
 * HPS Pinmux Select for IO20
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO20. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.txd2
 * 
 * 0001 (1) -- Pin connected to usb1.data4
 * 
 * 0010 (2) -- Pin connected to trace.d0
 * 
 * 0011 (3) -- Pin connected to nand.adq12
 * 
 * 0100 (4) -- Pin connected to i2c1.sda
 * 
 * 0101 (5) -- Pin connected to uart0.cts_n
 * 
 * 0110 (6) -- Pin connected to spis0.clk
 * 
 * 0111 (7) -- Pin connected to spim1.clk
 * 
 * 1000 (8) -- Pin connected to gpio0.io20
 * 
 * 1001 (9) -- Pin connected to loan.io20
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN20SEL_VAL register field. */
#define ALT_PINMUX_PIN20SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN20SEL_VAL register field. */
#define ALT_PINMUX_PIN20SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN20SEL_VAL register field. */
#define ALT_PINMUX_PIN20SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN20SEL_VAL register field value. */
#define ALT_PINMUX_PIN20SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN20SEL_VAL register field value. */
#define ALT_PINMUX_PIN20SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN20SEL_VAL register field. */
#define ALT_PINMUX_PIN20SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN20SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN20SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN20SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN20SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN20SEL.
 */
struct ALT_PINMUX_PIN20SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN20SEL. */
typedef struct ALT_PINMUX_PIN20SEL_s  ALT_PINMUX_PIN20SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN20SEL register. */
#define ALT_PINMUX_PIN20SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN20SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN20SEL_OFST        0x50

/*
 * Register : HPS Pinmux Select Register 21 - pin21sel
 * 
 * HPS Pinmux Select for IO21
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO21. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.txd3
 * 
 * 0001 (1) -- Pin connected to usb1.data5
 * 
 * 0010 (2) -- Pin connected to trace.d1
 * 
 * 0011 (3) -- Pin connected to nand.adq13
 * 
 * 0100 (4) -- Pin connected to i2c1.scl
 * 
 * 0101 (5) -- Pin connected to uart0.rts_n
 * 
 * 0110 (6) -- Pin connected to spis0.mosi
 * 
 * 0111 (7) -- Pin connected to spim1.mosi
 * 
 * 1000 (8) -- Pin connected to gpio0.io21
 * 
 * 1001 (9) -- Pin connected to loan.io21
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN21SEL_VAL register field. */
#define ALT_PINMUX_PIN21SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN21SEL_VAL register field. */
#define ALT_PINMUX_PIN21SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN21SEL_VAL register field. */
#define ALT_PINMUX_PIN21SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN21SEL_VAL register field value. */
#define ALT_PINMUX_PIN21SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN21SEL_VAL register field value. */
#define ALT_PINMUX_PIN21SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN21SEL_VAL register field. */
#define ALT_PINMUX_PIN21SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN21SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN21SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN21SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN21SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN21SEL.
 */
struct ALT_PINMUX_PIN21SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN21SEL. */
typedef struct ALT_PINMUX_PIN21SEL_s  ALT_PINMUX_PIN21SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN21SEL register. */
#define ALT_PINMUX_PIN21SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN21SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN21SEL_OFST        0x54

/*
 * Register : HPS Pinmux Select Register 22 - pin22sel
 * 
 * HPS Pinmux Select for IO22
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO22. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.rxd2
 * 
 * 0001 (1) -- Pin connected to usb1.data6
 * 
 * 0010 (2) -- Pin connected to trace.d2
 * 
 * 0011 (3) -- Pin connected to nand.adq14
 * 
 * 0100 (4) -- Pin connected to i2c0.sda
 * 
 * 0101 (5) -- Pin connected to uart0.tx
 * 
 * 0110 (6) -- Pin connected to spis0.ss0_n
 * 
 * 0111 (7) -- Pin connected to spim1.miso
 * 
 * 1000 (8) -- Pin connected to gpio0.io22
 * 
 * 1001 (9) -- Pin connected to loan.io22
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN22SEL_VAL register field. */
#define ALT_PINMUX_PIN22SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN22SEL_VAL register field. */
#define ALT_PINMUX_PIN22SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN22SEL_VAL register field. */
#define ALT_PINMUX_PIN22SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN22SEL_VAL register field value. */
#define ALT_PINMUX_PIN22SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN22SEL_VAL register field value. */
#define ALT_PINMUX_PIN22SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN22SEL_VAL register field. */
#define ALT_PINMUX_PIN22SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN22SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN22SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN22SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN22SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN22SEL.
 */
struct ALT_PINMUX_PIN22SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN22SEL. */
typedef struct ALT_PINMUX_PIN22SEL_s  ALT_PINMUX_PIN22SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN22SEL register. */
#define ALT_PINMUX_PIN22SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN22SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN22SEL_OFST        0x58

/*
 * Register : HPS Pinmux Select Register 23 - pin23sel
 * 
 * HPS Pinmux Select for IO23
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO23. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac0.rxd3
 * 
 * 0001 (1) -- Pin connected to usb1.data7
 * 
 * 0010 (2) -- Pin connected to trace.d3
 * 
 * 0011 (3) -- Pin connected to nand.adq15
 * 
 * 0100 (4) -- Pin connected to i2c0.scl
 * 
 * 0101 (5) -- Pin connected to uart0.rx
 * 
 * 0110 (6) -- Pin connected to spis0.miso
 * 
 * 0111 (7) -- Pin connected to spim1.ss0_n
 * 
 * 1000 (8) -- Pin connected to gpio0.io23
 * 
 * 1001 (9) -- Pin connected to loan.io23
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN23SEL_VAL register field. */
#define ALT_PINMUX_PIN23SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN23SEL_VAL register field. */
#define ALT_PINMUX_PIN23SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN23SEL_VAL register field. */
#define ALT_PINMUX_PIN23SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN23SEL_VAL register field value. */
#define ALT_PINMUX_PIN23SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN23SEL_VAL register field value. */
#define ALT_PINMUX_PIN23SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN23SEL_VAL register field. */
#define ALT_PINMUX_PIN23SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN23SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN23SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN23SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN23SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN23SEL.
 */
struct ALT_PINMUX_PIN23SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN23SEL. */
typedef struct ALT_PINMUX_PIN23SEL_s  ALT_PINMUX_PIN23SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN23SEL register. */
#define ALT_PINMUX_PIN23SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN23SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN23SEL_OFST        0x5c

/*
 * Register : HPS Pinmux Select Register 0 - pin24sel
 * 
 * HPS Pinmux Select for IO0
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO0. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.tx_clk
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d10
 * 
 * 0011 (3) -- Pin connected to nand.adq0
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart0.cts_n
 * 
 * 0110 (6) -- Pin connected to cm.pll_clk0
 * 
 * 0111 (7) -- Pin connected to spim1.clk
 * 
 * 1000 (8) -- Pin connected to gpio1.io0
 * 
 * 1001 (9) -- Pin connected to loan.io25
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN24SEL_VAL register field. */
#define ALT_PINMUX_PIN24SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN24SEL_VAL register field. */
#define ALT_PINMUX_PIN24SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN24SEL_VAL register field. */
#define ALT_PINMUX_PIN24SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN24SEL_VAL register field value. */
#define ALT_PINMUX_PIN24SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN24SEL_VAL register field value. */
#define ALT_PINMUX_PIN24SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN24SEL_VAL register field. */
#define ALT_PINMUX_PIN24SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN24SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN24SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN24SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN24SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN24SEL.
 */
struct ALT_PINMUX_PIN24SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN24SEL. */
typedef struct ALT_PINMUX_PIN24SEL_s  ALT_PINMUX_PIN24SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN24SEL register. */
#define ALT_PINMUX_PIN24SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN24SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN24SEL_OFST        0x60

/*
 * Register : HPS Pinmux Select Register 1 - pin25sel
 * 
 * HPS Pinmux Select for IO1
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO1. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.tx_ctl
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d9
 * 
 * 0011 (3) -- Pin connected to nand.adq1
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart0.rts_n
 * 
 * 0110 (6) -- Pin connected to cm.pll_clk1
 * 
 * 0111 (7) -- Pin connected to spim1.mosi
 * 
 * 1000 (8) -- Pin connected to gpio1.io1
 * 
 * 1001 (9) -- Pin connected to loan.io24
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN25SEL_VAL register field. */
#define ALT_PINMUX_PIN25SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN25SEL_VAL register field. */
#define ALT_PINMUX_PIN25SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN25SEL_VAL register field. */
#define ALT_PINMUX_PIN25SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN25SEL_VAL register field value. */
#define ALT_PINMUX_PIN25SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN25SEL_VAL register field value. */
#define ALT_PINMUX_PIN25SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN25SEL_VAL register field. */
#define ALT_PINMUX_PIN25SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN25SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN25SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN25SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN25SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN25SEL.
 */
struct ALT_PINMUX_PIN25SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN25SEL. */
typedef struct ALT_PINMUX_PIN25SEL_s  ALT_PINMUX_PIN25SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN25SEL register. */
#define ALT_PINMUX_PIN25SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN25SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN25SEL_OFST        0x64

/*
 * Register : HPS Pinmux Select Register 2 - pin26sel
 * 
 * HPS Pinmux Select for IO2
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO2. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.rx_clk
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d8
 * 
 * 0011 (3) -- Pin connected to nand.we_n
 * 
 * 0100 (4) -- Pin connected to i2c0.sda
 * 
 * 0101 (5) -- Pin connected to uart0.tx
 * 
 * 0110 (6) -- Pin connected to cm.pll_clk2
 * 
 * 0111 (7) -- Pin connected to spim1.miso
 * 
 * 1000 (8) -- Pin connected to gpio1.io2
 * 
 * 1001 (9) -- Pin connected to loan.io28
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN26SEL_VAL register field. */
#define ALT_PINMUX_PIN26SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN26SEL_VAL register field. */
#define ALT_PINMUX_PIN26SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN26SEL_VAL register field. */
#define ALT_PINMUX_PIN26SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN26SEL_VAL register field value. */
#define ALT_PINMUX_PIN26SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN26SEL_VAL register field value. */
#define ALT_PINMUX_PIN26SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN26SEL_VAL register field. */
#define ALT_PINMUX_PIN26SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN26SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN26SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN26SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN26SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN26SEL.
 */
struct ALT_PINMUX_PIN26SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN26SEL. */
typedef struct ALT_PINMUX_PIN26SEL_s  ALT_PINMUX_PIN26SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN26SEL register. */
#define ALT_PINMUX_PIN26SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN26SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN26SEL_OFST        0x68

/*
 * Register : HPS Pinmux Select Register 3 - pin27sel
 * 
 * HPS Pinmux Select for IO3
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO3. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.rx_ctl
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d7
 * 
 * 0011 (3) -- Pin connected to nand.re_n
 * 
 * 0100 (4) -- Pin connected to i2c0.scl
 * 
 * 0101 (5) -- Pin connected to uart0.rx
 * 
 * 0110 (6) -- Pin connected to cm.pll_clk3
 * 
 * 0111 (7) -- Pin connected to spim1.ss0_n
 * 
 * 1000 (8) -- Pin connected to gpio1.io3
 * 
 * 1001 (9) -- Pin connected to loan.io27
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN27SEL_VAL register field. */
#define ALT_PINMUX_PIN27SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN27SEL_VAL register field. */
#define ALT_PINMUX_PIN27SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN27SEL_VAL register field. */
#define ALT_PINMUX_PIN27SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN27SEL_VAL register field value. */
#define ALT_PINMUX_PIN27SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN27SEL_VAL register field value. */
#define ALT_PINMUX_PIN27SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN27SEL_VAL register field. */
#define ALT_PINMUX_PIN27SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN27SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN27SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN27SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN27SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN27SEL.
 */
struct ALT_PINMUX_PIN27SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN27SEL. */
typedef struct ALT_PINMUX_PIN27SEL_s  ALT_PINMUX_PIN27SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN27SEL register. */
#define ALT_PINMUX_PIN27SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN27SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN27SEL_OFST        0x6c

/*
 * Register : HPS Pinmux Select Register 4 - pin28sel
 * 
 * HPS Pinmux Select for IO4
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO4. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.txd0
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d6
 * 
 * 0011 (3) -- Pin connected to nand.wp_n
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart1.cts_n
 * 
 * 0110 (6) -- Pin connected to spis1.clk
 * 
 * 0111 (7) -- Pin connected to spim1.ss1_n
 * 
 * 1000 (8) -- Pin connected to gpio1.io4
 * 
 * 1001 (9) -- Pin connected to loan.io26
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN28SEL_VAL register field. */
#define ALT_PINMUX_PIN28SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN28SEL_VAL register field. */
#define ALT_PINMUX_PIN28SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN28SEL_VAL register field. */
#define ALT_PINMUX_PIN28SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN28SEL_VAL register field value. */
#define ALT_PINMUX_PIN28SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN28SEL_VAL register field value. */
#define ALT_PINMUX_PIN28SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN28SEL_VAL register field. */
#define ALT_PINMUX_PIN28SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN28SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN28SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN28SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN28SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN28SEL.
 */
struct ALT_PINMUX_PIN28SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN28SEL. */
typedef struct ALT_PINMUX_PIN28SEL_s  ALT_PINMUX_PIN28SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN28SEL register. */
#define ALT_PINMUX_PIN28SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN28SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN28SEL_OFST        0x70

/*
 * Register : HPS Pinmux Select Register 5 - pin29sel
 * 
 * HPS Pinmux Select for IO5
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO5. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.txd1
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d5
 * 
 * 0011 (3) -- Pin connected to nand.adq2
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart1.rts_n
 * 
 * 0110 (6) -- Pin connected to spis1.mosi
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io5
 * 
 * 1001 (9) -- Pin connected to loan.io29
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN29SEL_VAL register field. */
#define ALT_PINMUX_PIN29SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN29SEL_VAL register field. */
#define ALT_PINMUX_PIN29SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN29SEL_VAL register field. */
#define ALT_PINMUX_PIN29SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN29SEL_VAL register field value. */
#define ALT_PINMUX_PIN29SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN29SEL_VAL register field value. */
#define ALT_PINMUX_PIN29SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN29SEL_VAL register field. */
#define ALT_PINMUX_PIN29SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN29SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN29SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN29SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN29SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN29SEL.
 */
struct ALT_PINMUX_PIN29SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN29SEL. */
typedef struct ALT_PINMUX_PIN29SEL_s  ALT_PINMUX_PIN29SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN29SEL register. */
#define ALT_PINMUX_PIN29SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN29SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN29SEL_OFST        0x74

/*
 * Register : HPS Pinmux Select Register 6 - pin30sel
 * 
 * HPS Pinmux Select for IO6
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO6. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.rxd0
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d4
 * 
 * 0011 (3) -- Pin connected to nand.adq3
 * 
 * 0100 (4) -- Pin connected to i2c1.sda
 * 
 * 0101 (5) -- Pin connected to uart1.tx
 * 
 * 0110 (6) -- Pin connected to spis1.ss0_n
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io6
 * 
 * 1001 (9) -- Pin connected to loan.io30
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN30SEL_VAL register field. */
#define ALT_PINMUX_PIN30SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN30SEL_VAL register field. */
#define ALT_PINMUX_PIN30SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN30SEL_VAL register field. */
#define ALT_PINMUX_PIN30SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN30SEL_VAL register field value. */
#define ALT_PINMUX_PIN30SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN30SEL_VAL register field value. */
#define ALT_PINMUX_PIN30SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN30SEL_VAL register field. */
#define ALT_PINMUX_PIN30SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN30SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN30SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN30SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN30SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN30SEL.
 */
struct ALT_PINMUX_PIN30SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN30SEL. */
typedef struct ALT_PINMUX_PIN30SEL_s  ALT_PINMUX_PIN30SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN30SEL register. */
#define ALT_PINMUX_PIN30SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN30SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN30SEL_OFST        0x78

/*
 * Register : HPS Pinmux Select Register 7 - pin31sel
 * 
 * HPS Pinmux Select for IO7
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO7. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.rxd1
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d15
 * 
 * 0011 (3) -- Pin connected to nand.cle
 * 
 * 0100 (4) -- Pin connected to i2c1.scl
 * 
 * 0101 (5) -- Pin connected to uart1.rx
 * 
 * 0110 (6) -- Pin connected to spis1.miso
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io7
 * 
 * 1001 (9) -- Pin connected to loan.io32
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN31SEL_VAL register field. */
#define ALT_PINMUX_PIN31SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN31SEL_VAL register field. */
#define ALT_PINMUX_PIN31SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN31SEL_VAL register field. */
#define ALT_PINMUX_PIN31SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN31SEL_VAL register field value. */
#define ALT_PINMUX_PIN31SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN31SEL_VAL register field value. */
#define ALT_PINMUX_PIN31SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN31SEL_VAL register field. */
#define ALT_PINMUX_PIN31SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN31SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN31SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN31SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN31SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN31SEL.
 */
struct ALT_PINMUX_PIN31SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN31SEL. */
typedef struct ALT_PINMUX_PIN31SEL_s  ALT_PINMUX_PIN31SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN31SEL register. */
#define ALT_PINMUX_PIN31SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN31SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN31SEL_OFST        0x7c

/*
 * Register : HPS Pinmux Select Register 8 - pin32sel
 * 
 * HPS Pinmux Select for IO8
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO8. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.txd2
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d14
 * 
 * 0011 (3) -- Pin connected to nand.adq4
 * 
 * 0100 (4) -- Pin connected to i2c_emac2.sda
 * 
 * 0101 (5) -- Pin connected to mdio2.mdio
 * 
 * 0110 (6) -- Pin connected to spis0.clk
 * 
 * 0111 (7) -- Pin connected to jtag.tck
 * 
 * 1000 (8) -- Pin connected to gpio1.io8
 * 
 * 1001 (9) -- Pin connected to loan.io31
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN32SEL_VAL register field. */
#define ALT_PINMUX_PIN32SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN32SEL_VAL register field. */
#define ALT_PINMUX_PIN32SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN32SEL_VAL register field. */
#define ALT_PINMUX_PIN32SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN32SEL_VAL register field value. */
#define ALT_PINMUX_PIN32SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN32SEL_VAL register field value. */
#define ALT_PINMUX_PIN32SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN32SEL_VAL register field. */
#define ALT_PINMUX_PIN32SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN32SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN32SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN32SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN32SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN32SEL.
 */
struct ALT_PINMUX_PIN32SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN32SEL. */
typedef struct ALT_PINMUX_PIN32SEL_s  ALT_PINMUX_PIN32SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN32SEL register. */
#define ALT_PINMUX_PIN32SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN32SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN32SEL_OFST        0x80

/*
 * Register : HPS Pinmux Select Register 9 - pin33sel
 * 
 * HPS Pinmux Select for IO9
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO9. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.txd3
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d13
 * 
 * 0011 (3) -- Pin connected to nand.adq5
 * 
 * 0100 (4) -- Pin connected to i2c_emac2.scl
 * 
 * 0101 (5) -- Pin connected to mdio2.mdc
 * 
 * 0110 (6) -- Pin connected to spis0.mosi
 * 
 * 0111 (7) -- Pin connected to jtag.tms
 * 
 * 1000 (8) -- Pin connected to gpio1.io9
 * 
 * 1001 (9) -- Pin connected to loan.io34
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN33SEL_VAL register field. */
#define ALT_PINMUX_PIN33SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN33SEL_VAL register field. */
#define ALT_PINMUX_PIN33SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN33SEL_VAL register field. */
#define ALT_PINMUX_PIN33SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN33SEL_VAL register field value. */
#define ALT_PINMUX_PIN33SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN33SEL_VAL register field value. */
#define ALT_PINMUX_PIN33SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN33SEL_VAL register field. */
#define ALT_PINMUX_PIN33SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN33SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN33SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN33SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN33SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN33SEL.
 */
struct ALT_PINMUX_PIN33SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN33SEL. */
typedef struct ALT_PINMUX_PIN33SEL_s  ALT_PINMUX_PIN33SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN33SEL register. */
#define ALT_PINMUX_PIN33SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN33SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN33SEL_OFST        0x84

/*
 * Register : HPS Pinmux Select Register 10 - pin34sel
 * 
 * HPS Pinmux Select for IO10
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO10. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.rxd2
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d12
 * 
 * 0011 (3) -- Pin connected to nand.adq6
 * 
 * 0100 (4) -- Pin connected to i2c_emac0.sda
 * 
 * 0101 (5) -- Pin connected to mdio0.mdio
 * 
 * 0110 (6) -- Pin connected to spis0.ss0_n
 * 
 * 0111 (7) -- Pin connected to jtag.tdo
 * 
 * 1000 (8) -- Pin connected to gpio1.io10
 * 
 * 1001 (9) -- Pin connected to loan.io33
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN34SEL_VAL register field. */
#define ALT_PINMUX_PIN34SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN34SEL_VAL register field. */
#define ALT_PINMUX_PIN34SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN34SEL_VAL register field. */
#define ALT_PINMUX_PIN34SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN34SEL_VAL register field value. */
#define ALT_PINMUX_PIN34SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN34SEL_VAL register field value. */
#define ALT_PINMUX_PIN34SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN34SEL_VAL register field. */
#define ALT_PINMUX_PIN34SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN34SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN34SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN34SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN34SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN34SEL.
 */
struct ALT_PINMUX_PIN34SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN34SEL. */
typedef struct ALT_PINMUX_PIN34SEL_s  ALT_PINMUX_PIN34SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN34SEL register. */
#define ALT_PINMUX_PIN34SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN34SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN34SEL_OFST        0x88

/*
 * Register : HPS Pinmux Select Register 11 - pin35sel
 * 
 * HPS Pinmux Select for IO11
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO11. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac1.rxd3
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d11
 * 
 * 0011 (3) -- Pin connected to nand.adq7
 * 
 * 0100 (4) -- Pin connected to i2c_emac0.scl
 * 
 * 0101 (5) -- Pin connected to mdio0.mdc
 * 
 * 0110 (6) -- Pin connected to spis0.miso
 * 
 * 0111 (7) -- Pin connected to jtag.tdi
 * 
 * 1000 (8) -- Pin connected to gpio1.io11
 * 
 * 1001 (9) -- Pin connected to loan.io35
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN35SEL_VAL register field. */
#define ALT_PINMUX_PIN35SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN35SEL_VAL register field. */
#define ALT_PINMUX_PIN35SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN35SEL_VAL register field. */
#define ALT_PINMUX_PIN35SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN35SEL_VAL register field value. */
#define ALT_PINMUX_PIN35SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN35SEL_VAL register field value. */
#define ALT_PINMUX_PIN35SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN35SEL_VAL register field. */
#define ALT_PINMUX_PIN35SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN35SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN35SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN35SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN35SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN35SEL.
 */
struct ALT_PINMUX_PIN35SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN35SEL. */
typedef struct ALT_PINMUX_PIN35SEL_s  ALT_PINMUX_PIN35SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN35SEL register. */
#define ALT_PINMUX_PIN35SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN35SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN35SEL_OFST        0x8c

/*
 * Register : HPS Pinmux Select Register 12 - pin36sel
 * 
 * HPS Pinmux Select for IO12
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO12. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.tx_clk
 * 
 * 0001 (1) -- Pin connected to sdmmc.data0
 * 
 * 0010 (2) -- Pin connected to trace.d10
 * 
 * 0011 (3) -- Pin connected to nand.ale
 * 
 * 0100 (4) -- Pin connected to i2c1.sda
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io12
 * 
 * 1001 (9) -- Pin connected to loan.io37
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN36SEL_VAL register field. */
#define ALT_PINMUX_PIN36SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN36SEL_VAL register field. */
#define ALT_PINMUX_PIN36SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN36SEL_VAL register field. */
#define ALT_PINMUX_PIN36SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN36SEL_VAL register field value. */
#define ALT_PINMUX_PIN36SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN36SEL_VAL register field value. */
#define ALT_PINMUX_PIN36SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN36SEL_VAL register field. */
#define ALT_PINMUX_PIN36SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN36SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN36SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN36SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN36SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN36SEL.
 */
struct ALT_PINMUX_PIN36SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN36SEL. */
typedef struct ALT_PINMUX_PIN36SEL_s  ALT_PINMUX_PIN36SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN36SEL register. */
#define ALT_PINMUX_PIN36SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN36SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN36SEL_OFST        0x90

/*
 * Register : HPS Pinmux Select Register 13 - pin37sel
 * 
 * HPS Pinmux Select for IO13
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO13. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.tx_ctl
 * 
 * 0001 (1) -- Pin connected to sdmmc.cmd
 * 
 * 0010 (2) -- Pin connected to trace.d9
 * 
 * 0011 (3) -- Pin connected to nand.rb
 * 
 * 0100 (4) -- Pin connected to i2c1.scl
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io13
 * 
 * 1001 (9) -- Pin connected to loan.io38
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN37SEL_VAL register field. */
#define ALT_PINMUX_PIN37SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN37SEL_VAL register field. */
#define ALT_PINMUX_PIN37SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN37SEL_VAL register field. */
#define ALT_PINMUX_PIN37SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN37SEL_VAL register field value. */
#define ALT_PINMUX_PIN37SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN37SEL_VAL register field value. */
#define ALT_PINMUX_PIN37SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN37SEL_VAL register field. */
#define ALT_PINMUX_PIN37SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN37SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN37SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN37SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN37SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN37SEL.
 */
struct ALT_PINMUX_PIN37SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN37SEL. */
typedef struct ALT_PINMUX_PIN37SEL_s  ALT_PINMUX_PIN37SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN37SEL register. */
#define ALT_PINMUX_PIN37SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN37SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN37SEL_OFST        0x94

/*
 * Register : HPS Pinmux Select Register 14 - pin38sel
 * 
 * HPS Pinmux Select for IO14
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO14. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.rx_clk
 * 
 * 0001 (1) -- Pin connected to sdmmc.cclk
 * 
 * 0010 (2) -- Pin connected to trace.d8
 * 
 * 0011 (3) -- Pin connected to nand.ce_n
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart1.tx
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io14
 * 
 * 1001 (9) -- Pin connected to loan.io36
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN38SEL_VAL register field. */
#define ALT_PINMUX_PIN38SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN38SEL_VAL register field. */
#define ALT_PINMUX_PIN38SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN38SEL_VAL register field. */
#define ALT_PINMUX_PIN38SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN38SEL_VAL register field value. */
#define ALT_PINMUX_PIN38SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN38SEL_VAL register field value. */
#define ALT_PINMUX_PIN38SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN38SEL_VAL register field. */
#define ALT_PINMUX_PIN38SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN38SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN38SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN38SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN38SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN38SEL.
 */
struct ALT_PINMUX_PIN38SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN38SEL. */
typedef struct ALT_PINMUX_PIN38SEL_s  ALT_PINMUX_PIN38SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN38SEL register. */
#define ALT_PINMUX_PIN38SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN38SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN38SEL_OFST        0x98

/*
 * Register : HPS Pinmux Select Register 15 - pin39sel
 * 
 * HPS Pinmux Select for IO15
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO15. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.rx_ctl
 * 
 * 0001 (1) -- Pin connected to sdmmc.data1
 * 
 * 0010 (2) -- Pin connected to trace.d7
 * 
 * 0011 (3) -- NA
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart1.rx
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io15
 * 
 * 1001 (9) -- Pin connected to loan.io39
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN39SEL_VAL register field. */
#define ALT_PINMUX_PIN39SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN39SEL_VAL register field. */
#define ALT_PINMUX_PIN39SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN39SEL_VAL register field. */
#define ALT_PINMUX_PIN39SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN39SEL_VAL register field value. */
#define ALT_PINMUX_PIN39SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN39SEL_VAL register field value. */
#define ALT_PINMUX_PIN39SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN39SEL_VAL register field. */
#define ALT_PINMUX_PIN39SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN39SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN39SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN39SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN39SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN39SEL.
 */
struct ALT_PINMUX_PIN39SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN39SEL. */
typedef struct ALT_PINMUX_PIN39SEL_s  ALT_PINMUX_PIN39SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN39SEL register. */
#define ALT_PINMUX_PIN39SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN39SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN39SEL_OFST        0x9c

/*
 * Register : HPS Pinmux Select Register 16 - pin40sel
 * 
 * HPS Pinmux Select for IO16
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO16. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.txd0
 * 
 * 0001 (1) -- Pin connected to sdmmc.data2
 * 
 * 0010 (2) -- Pin connected to trace.d6
 * 
 * 0011 (3) -- Pin connected to nand.adq8
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart1.cts_n
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- NA
 * 
 * 1000 (8) -- Pin connected to gpio1.io16
 * 
 * 1001 (9) -- Pin connected to loan.io40
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN40SEL_VAL register field. */
#define ALT_PINMUX_PIN40SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN40SEL_VAL register field. */
#define ALT_PINMUX_PIN40SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN40SEL_VAL register field. */
#define ALT_PINMUX_PIN40SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN40SEL_VAL register field value. */
#define ALT_PINMUX_PIN40SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN40SEL_VAL register field value. */
#define ALT_PINMUX_PIN40SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN40SEL_VAL register field. */
#define ALT_PINMUX_PIN40SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN40SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN40SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN40SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN40SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN40SEL.
 */
struct ALT_PINMUX_PIN40SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN40SEL. */
typedef struct ALT_PINMUX_PIN40SEL_s  ALT_PINMUX_PIN40SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN40SEL register. */
#define ALT_PINMUX_PIN40SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN40SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN40SEL_OFST        0x100

/*
 * Register : HPS Pinmux Select Register 17 - pin41sel
 * 
 * HPS Pinmux Select for IO17
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO17. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.txd1
 * 
 * 0001 (1) -- Pin connected to sdmmc.data3
 * 
 * 0010 (2) -- Pin connected to trace.d5
 * 
 * 0011 (3) -- Pin connected to nand.adq9
 * 
 * 0100 (4) -- NA
 * 
 * 0101 (5) -- Pin connected to uart1.rts_n
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- Pin connected to spim0.ss1_n
 * 
 * 1000 (8) -- Pin connected to gpio1.io17
 * 
 * 1001 (9) -- Pin connected to loan.io42
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN41SEL_VAL register field. */
#define ALT_PINMUX_PIN41SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN41SEL_VAL register field. */
#define ALT_PINMUX_PIN41SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN41SEL_VAL register field. */
#define ALT_PINMUX_PIN41SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN41SEL_VAL register field value. */
#define ALT_PINMUX_PIN41SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN41SEL_VAL register field value. */
#define ALT_PINMUX_PIN41SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN41SEL_VAL register field. */
#define ALT_PINMUX_PIN41SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN41SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN41SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN41SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN41SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN41SEL.
 */
struct ALT_PINMUX_PIN41SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN41SEL. */
typedef struct ALT_PINMUX_PIN41SEL_s  ALT_PINMUX_PIN41SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN41SEL register. */
#define ALT_PINMUX_PIN41SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN41SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN41SEL_OFST        0x104

/*
 * Register : HPS Pinmux Select Register 18 - pin42sel
 * 
 * HPS Pinmux Select for IO18
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO18. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.rxd0
 * 
 * 0001 (1) -- Pin connected to sdmmc.data4
 * 
 * 0010 (2) -- Pin connected to trace.d4
 * 
 * 0011 (3) -- Pin connected to nand.adq10
 * 
 * 0100 (4) -- Pin connected to i2c_emac1.sda
 * 
 * 0101 (5) -- Pin connected to mdio1.mdio
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- Pin connected to spim0.miso
 * 
 * 1000 (8) -- Pin connected to gpio1.io18
 * 
 * 1001 (9) -- Pin connected to loan.io41
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN42SEL_VAL register field. */
#define ALT_PINMUX_PIN42SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN42SEL_VAL register field. */
#define ALT_PINMUX_PIN42SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN42SEL_VAL register field. */
#define ALT_PINMUX_PIN42SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN42SEL_VAL register field value. */
#define ALT_PINMUX_PIN42SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN42SEL_VAL register field value. */
#define ALT_PINMUX_PIN42SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN42SEL_VAL register field. */
#define ALT_PINMUX_PIN42SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN42SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN42SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN42SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN42SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN42SEL.
 */
struct ALT_PINMUX_PIN42SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN42SEL. */
typedef struct ALT_PINMUX_PIN42SEL_s  ALT_PINMUX_PIN42SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN42SEL register. */
#define ALT_PINMUX_PIN42SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN42SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN42SEL_OFST        0x108

/*
 * Register : HPS Pinmux Select Register 19 - pin43sel
 * 
 * HPS Pinmux Select for IO19
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO19. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.rxd1
 * 
 * 0001 (1) -- Pin connected to sdmmc.data5
 * 
 * 0010 (2) -- Pin connected to trace.clk
 * 
 * 0011 (3) -- Pin connected to nand.adq11
 * 
 * 0100 (4) -- Pin connected to i2c_emac1.scl
 * 
 * 0101 (5) -- Pin connected to mdio1.mdc
 * 
 * 0110 (6) -- NA
 * 
 * 0111 (7) -- Pin connected to spim0.ss0_n
 * 
 * 1000 (8) -- Pin connected to gpio1.io19
 * 
 * 1001 (9) -- Pin connected to loan.io43
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN43SEL_VAL register field. */
#define ALT_PINMUX_PIN43SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN43SEL_VAL register field. */
#define ALT_PINMUX_PIN43SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN43SEL_VAL register field. */
#define ALT_PINMUX_PIN43SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN43SEL_VAL register field value. */
#define ALT_PINMUX_PIN43SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN43SEL_VAL register field value. */
#define ALT_PINMUX_PIN43SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN43SEL_VAL register field. */
#define ALT_PINMUX_PIN43SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN43SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN43SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN43SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN43SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN43SEL.
 */
struct ALT_PINMUX_PIN43SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN43SEL. */
typedef struct ALT_PINMUX_PIN43SEL_s  ALT_PINMUX_PIN43SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN43SEL register. */
#define ALT_PINMUX_PIN43SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN43SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN43SEL_OFST        0x10c

/*
 * Register : HPS Pinmux Select Register 20 - pin44sel
 * 
 * HPS Pinmux Select for IO20
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO20. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.txd2
 * 
 * 0001 (1) -- Pin connected to sdmmc.data6
 * 
 * 0010 (2) -- Pin connected to trace.d0
 * 
 * 0011 (3) -- Pin connected to nand.adq12
 * 
 * 0100 (4) -- Pin connected to i2c_emac2.sda
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- Pin connected to spis1.clk
 * 
 * 0111 (7) -- Pin connected to spim0.clk
 * 
 * 1000 (8) -- Pin connected to gpio1.io20
 * 
 * 1001 (9) -- Pin connected to loan.io44
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN44SEL_VAL register field. */
#define ALT_PINMUX_PIN44SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN44SEL_VAL register field. */
#define ALT_PINMUX_PIN44SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN44SEL_VAL register field. */
#define ALT_PINMUX_PIN44SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN44SEL_VAL register field value. */
#define ALT_PINMUX_PIN44SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN44SEL_VAL register field value. */
#define ALT_PINMUX_PIN44SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN44SEL_VAL register field. */
#define ALT_PINMUX_PIN44SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN44SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN44SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN44SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN44SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN44SEL.
 */
struct ALT_PINMUX_PIN44SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN44SEL. */
typedef struct ALT_PINMUX_PIN44SEL_s  ALT_PINMUX_PIN44SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN44SEL register. */
#define ALT_PINMUX_PIN44SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN44SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN44SEL_OFST        0x110

/*
 * Register : HPS Pinmux Select Register 21 - pin45sel
 * 
 * HPS Pinmux Select for IO21
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO21. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.txd3
 * 
 * 0001 (1) -- Pin connected to sdmmc.data7
 * 
 * 0010 (2) -- Pin connected to trace.d1
 * 
 * 0011 (3) -- Pin connected to nand.adq13
 * 
 * 0100 (4) -- Pin connected to i2c_emac2.scl
 * 
 * 0101 (5) -- NA
 * 
 * 0110 (6) -- Pin connected to spis1.mosi
 * 
 * 0111 (7) -- Pin connected to spim0.mosi
 * 
 * 1000 (8) -- Pin connected to gpio1.io21
 * 
 * 1001 (9) -- Pin connected to loan.io45
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN45SEL_VAL register field. */
#define ALT_PINMUX_PIN45SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN45SEL_VAL register field. */
#define ALT_PINMUX_PIN45SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN45SEL_VAL register field. */
#define ALT_PINMUX_PIN45SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN45SEL_VAL register field value. */
#define ALT_PINMUX_PIN45SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN45SEL_VAL register field value. */
#define ALT_PINMUX_PIN45SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN45SEL_VAL register field. */
#define ALT_PINMUX_PIN45SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN45SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN45SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN45SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN45SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN45SEL.
 */
struct ALT_PINMUX_PIN45SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN45SEL. */
typedef struct ALT_PINMUX_PIN45SEL_s  ALT_PINMUX_PIN45SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN45SEL register. */
#define ALT_PINMUX_PIN45SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN45SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN45SEL_OFST        0x114

/*
 * Register : HPS Pinmux Select Register 22 - pin46sel
 * 
 * HPS Pinmux Select for IO22
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO22. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.rxd2
 * 
 * 0001 (1) -- Pin connected to sdmmc.pwr_en
 * 
 * 0010 (2) -- Pin connected to trace.d2
 * 
 * 0011 (3) -- Pin connected to nand.adq14
 * 
 * 0100 (4) -- Pin connected to i2c_emac0.sda
 * 
 * 0101 (5) -- Pin connected to mdio0.mdio
 * 
 * 0110 (6) -- Pin connected to spis1.ss0_n
 * 
 * 0111 (7) -- Pin connected to spim0.miso
 * 
 * 1000 (8) -- Pin connected to gpio1.io22
 * 
 * 1001 (9) -- Pin connected to loan.io46
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN46SEL_VAL register field. */
#define ALT_PINMUX_PIN46SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN46SEL_VAL register field. */
#define ALT_PINMUX_PIN46SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN46SEL_VAL register field. */
#define ALT_PINMUX_PIN46SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN46SEL_VAL register field value. */
#define ALT_PINMUX_PIN46SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN46SEL_VAL register field value. */
#define ALT_PINMUX_PIN46SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN46SEL_VAL register field. */
#define ALT_PINMUX_PIN46SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN46SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN46SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN46SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN46SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN46SEL.
 */
struct ALT_PINMUX_PIN46SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN46SEL. */
typedef struct ALT_PINMUX_PIN46SEL_s  ALT_PINMUX_PIN46SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN46SEL register. */
#define ALT_PINMUX_PIN46SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN46SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN46SEL_OFST        0x118

/*
 * Register : HPS Pinmux Select Register 23 - pin47sel
 * 
 * HPS Pinmux Select for IO23
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [3:0]  | RW     | 0x9   | Enable     
 *  [31:4] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - val
 * 
 * Select value determines which interface has been selected for IO23. It also
 * detemines the output_enable for the respective interface. Its value can range
 * from 0 to 9.
 * 
 * 0000 (0) -- Pin connected to emac2.rxd3
 * 
 * 0001 (1) -- NA
 * 
 * 0010 (2) -- Pin connected to trace.d3
 * 
 * 0011 (3) -- Pin connected to nand.adq15
 * 
 * 0100 (4) -- Pin connected to i2c_emac0.scl
 * 
 * 0101 (5) -- Pin connected to mdio0.mdc
 * 
 * 0110 (6) -- Pin connected to spis1.miso
 * 
 * 0111 (7) -- Pin connected to spim0.ss0_n
 * 
 * 1000 (8) -- Pin connected to gpio1.io23
 * 
 * 1001 (9) -- Pin connected to loan.io47
 * 
 * Field Access Macros:
 * 
 */
/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PIN47SEL_VAL register field. */
#define ALT_PINMUX_PIN47SEL_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PIN47SEL_VAL register field. */
#define ALT_PINMUX_PIN47SEL_VAL_MSB        3
/* The width in bits of the ALT_PINMUX_PIN47SEL_VAL register field. */
#define ALT_PINMUX_PIN47SEL_VAL_WIDTH      4
/* The mask used to set the ALT_PINMUX_PIN47SEL_VAL register field value. */
#define ALT_PINMUX_PIN47SEL_VAL_SET_MSK    0x0000000f
/* The mask used to clear the ALT_PINMUX_PIN47SEL_VAL register field value. */
#define ALT_PINMUX_PIN47SEL_VAL_CLR_MSK    0xfffffff0
/* The reset value of the ALT_PINMUX_PIN47SEL_VAL register field. */
#define ALT_PINMUX_PIN47SEL_VAL_RESET      0x9
/* Extracts the ALT_PINMUX_PIN47SEL_VAL field value from a register. */
#define ALT_PINMUX_PIN47SEL_VAL_GET(value) (((value) & 0x0000000f) >> 0)
/* Produces a ALT_PINMUX_PIN47SEL_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_PIN47SEL_VAL_SET(value) (((value) << 0) & 0x0000000f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PIN47SEL.
 */
struct ALT_PINMUX_PIN47SEL_s
{
    volatile uint32_t  val :  4;  /* Enable */
    uint32_t               : 28;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PIN47SEL. */
typedef struct ALT_PINMUX_PIN47SEL_s  ALT_PINMUX_PIN47SEL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PIN47SEL register. */
#define ALT_PINMUX_PIN47SEL_RESET       0x00000009
/* The byte offset of the ALT_PINMUX_PIN47SEL register from the beginning of the component. */
#define ALT_PINMUX_PIN47SEL_OFST        0x11c

/*
 * Register : HPS Pinmux Control Register 0 - io0ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO0
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO0CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO0CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_RPCDN register field. */
#define ALT_PINMUX_IO0CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_RPCDN register field. */
#define ALT_PINMUX_IO0CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO0CTRL_RPCDN register field. */
#define ALT_PINMUX_IO0CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO0CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO0CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO0CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO0CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO0CTRL_RPCDN register field. */
#define ALT_PINMUX_IO0CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO0CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO0CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO0CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO0
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO0CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO0CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_RPCDP register field. */
#define ALT_PINMUX_IO0CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_RPCDP register field. */
#define ALT_PINMUX_IO0CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO0CTRL_RPCDP register field. */
#define ALT_PINMUX_IO0CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO0CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO0CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO0CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO0CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO0CTRL_RPCDP register field. */
#define ALT_PINMUX_IO0CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO0CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO0CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO0CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO0
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO0CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO0CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO0CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO0CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO0CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO0CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO0CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO0CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO0CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO0CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO0
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO0CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO0CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO0CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO0CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO0CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO0CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO0CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO0CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO0CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO0CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO0
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO0CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO0CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO0CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO0CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO0CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO0CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO0CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO0CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO0. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO0CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO0CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO0CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO0CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO0CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO0CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO0CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO0CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO0CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO0CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO0. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.  NOTE: Only one of them can be active at
 * a time. Both cannot be enabled or disabled.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO0CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO0CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO0CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO0CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO0CTRL.
 */
struct ALT_PINMUX_IO0CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO0CTRL. */
typedef struct ALT_PINMUX_IO0CTRL_s  ALT_PINMUX_IO0CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO0CTRL register. */
#define ALT_PINMUX_IO0CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO0CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO0CTRL_OFST        0x130

/*
 * Register : HPS Pinmux Control Register 1 - io1ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO1
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO1CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO1CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_RPCDN register field. */
#define ALT_PINMUX_IO1CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_RPCDN register field. */
#define ALT_PINMUX_IO1CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO1CTRL_RPCDN register field. */
#define ALT_PINMUX_IO1CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO1CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO1CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO1CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO1CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO1CTRL_RPCDN register field. */
#define ALT_PINMUX_IO1CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO1CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO1CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO1CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO1
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO1CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO1CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_RPCDP register field. */
#define ALT_PINMUX_IO1CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_RPCDP register field. */
#define ALT_PINMUX_IO1CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO1CTRL_RPCDP register field. */
#define ALT_PINMUX_IO1CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO1CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO1CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO1CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO1CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO1CTRL_RPCDP register field. */
#define ALT_PINMUX_IO1CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO1CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO1CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO1CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO1
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO1CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO1CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO1CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO1CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO1CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO1CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO1CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO1CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO1CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO1CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO1
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO1CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO1CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO1CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO1CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO1CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO1CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO1CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO1CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO1CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO1CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO1
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO1CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO1CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO1CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO1CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO1CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO1CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO1CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO1CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO1. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO1CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO1CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO1CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO1CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO1CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO1CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO1CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO1CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO1CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO1CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO1. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO1CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO1CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO1CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO1CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO1CTRL.
 */
struct ALT_PINMUX_IO1CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO1CTRL. */
typedef struct ALT_PINMUX_IO1CTRL_s  ALT_PINMUX_IO1CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO1CTRL register. */
#define ALT_PINMUX_IO1CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO1CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO1CTRL_OFST        0x134

/*
 * Register : HPS Pinmux Control Register 2 - io2ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO2
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO2CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO2CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_RPCDN register field. */
#define ALT_PINMUX_IO2CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_RPCDN register field. */
#define ALT_PINMUX_IO2CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO2CTRL_RPCDN register field. */
#define ALT_PINMUX_IO2CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO2CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO2CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO2CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO2CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO2CTRL_RPCDN register field. */
#define ALT_PINMUX_IO2CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO2CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO2CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO2CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO2
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO2CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO2CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_RPCDP register field. */
#define ALT_PINMUX_IO2CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_RPCDP register field. */
#define ALT_PINMUX_IO2CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO2CTRL_RPCDP register field. */
#define ALT_PINMUX_IO2CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO2CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO2CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO2CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO2CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO2CTRL_RPCDP register field. */
#define ALT_PINMUX_IO2CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO2CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO2CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO2CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO2
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO2CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO2CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO2CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO2CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO2CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO2CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO2CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO2CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO2CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO2CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO2
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO2CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO2CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO2CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO2CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO2CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO2CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO2CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO2CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO2CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO2CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO2
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO2CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO2CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO2CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO2CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO2CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO2CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO2CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO2CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO2. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO2CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO2CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO2CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO2CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO2CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO2CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO2CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO2CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO2CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO2CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO2. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO2CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO2CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO2CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO2CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO2CTRL.
 */
struct ALT_PINMUX_IO2CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO2CTRL. */
typedef struct ALT_PINMUX_IO2CTRL_s  ALT_PINMUX_IO2CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO2CTRL register. */
#define ALT_PINMUX_IO2CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO2CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO2CTRL_OFST        0x138

/*
 * Register : HPS Pinmux Control Register 3 - io3ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO3
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO3CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO3CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_RPCDN register field. */
#define ALT_PINMUX_IO3CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_RPCDN register field. */
#define ALT_PINMUX_IO3CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO3CTRL_RPCDN register field. */
#define ALT_PINMUX_IO3CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO3CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO3CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO3CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO3CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO3CTRL_RPCDN register field. */
#define ALT_PINMUX_IO3CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO3CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO3CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO3CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO3
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO3CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO3CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_RPCDP register field. */
#define ALT_PINMUX_IO3CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_RPCDP register field. */
#define ALT_PINMUX_IO3CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO3CTRL_RPCDP register field. */
#define ALT_PINMUX_IO3CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO3CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO3CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO3CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO3CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO3CTRL_RPCDP register field. */
#define ALT_PINMUX_IO3CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO3CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO3CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO3CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO3
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO3CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO3CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO3CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO3CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO3CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO3CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO3CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO3CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO3CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO3CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO3
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO3CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO3CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO3CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO3CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO3CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO3CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO3CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO3CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO3CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO3CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO3
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO3CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO3CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO3CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO3CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO3CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO3CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO3CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO3CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO3. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO3CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO3CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO3CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO3CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO3CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO3CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO3CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO3CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO3CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO3CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO3. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO3CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO3CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO3CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO3CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO3CTRL.
 */
struct ALT_PINMUX_IO3CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO3CTRL. */
typedef struct ALT_PINMUX_IO3CTRL_s  ALT_PINMUX_IO3CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO3CTRL register. */
#define ALT_PINMUX_IO3CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO3CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO3CTRL_OFST        0x13c

/*
 * Register : HPS Pinmux Control Register 4 - io4ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO4
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO4CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO4CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_RPCDN register field. */
#define ALT_PINMUX_IO4CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_RPCDN register field. */
#define ALT_PINMUX_IO4CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO4CTRL_RPCDN register field. */
#define ALT_PINMUX_IO4CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO4CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO4CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO4CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO4CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO4CTRL_RPCDN register field. */
#define ALT_PINMUX_IO4CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO4CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO4CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO4CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO4
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO4CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO4CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_RPCDP register field. */
#define ALT_PINMUX_IO4CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_RPCDP register field. */
#define ALT_PINMUX_IO4CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO4CTRL_RPCDP register field. */
#define ALT_PINMUX_IO4CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO4CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO4CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO4CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO4CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO4CTRL_RPCDP register field. */
#define ALT_PINMUX_IO4CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO4CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO4CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO4CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO4
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO4CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO4CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO4CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO4CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO4CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO4CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO4CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO4CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO4CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO4CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO4
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO4CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO4CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO4CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO4CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO4CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO4CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO4CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO4CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO4CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO4CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO4
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO4CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO4CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO4CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO4CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO4CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO4CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO4CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO4CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO4. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO4CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO4CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO4CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO4CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO4CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO4CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO4CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO4CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO4CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO4CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO4. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO4CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO4CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO4CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO4CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO4CTRL.
 */
struct ALT_PINMUX_IO4CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO4CTRL. */
typedef struct ALT_PINMUX_IO4CTRL_s  ALT_PINMUX_IO4CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO4CTRL register. */
#define ALT_PINMUX_IO4CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO4CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO4CTRL_OFST        0x140

/*
 * Register : HPS Pinmux Control Register 5 - io5ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO5
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO5CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO5CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_RPCDN register field. */
#define ALT_PINMUX_IO5CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_RPCDN register field. */
#define ALT_PINMUX_IO5CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO5CTRL_RPCDN register field. */
#define ALT_PINMUX_IO5CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO5CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO5CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO5CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO5CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO5CTRL_RPCDN register field. */
#define ALT_PINMUX_IO5CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO5CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO5CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO5CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO5
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO5CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO5CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_RPCDP register field. */
#define ALT_PINMUX_IO5CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_RPCDP register field. */
#define ALT_PINMUX_IO5CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO5CTRL_RPCDP register field. */
#define ALT_PINMUX_IO5CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO5CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO5CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO5CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO5CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO5CTRL_RPCDP register field. */
#define ALT_PINMUX_IO5CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO5CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO5CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO5CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO5
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO5CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO5CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO5CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO5CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO5CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO5CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO5CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO5CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO5CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO5CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO5
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO5CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO5CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO5CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO5CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO5CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO5CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO5CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO5CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO5CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO5CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO5
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO5CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO5CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO5CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO5CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO5CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO5CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO5CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO5CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO5. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO5CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO5CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO5CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO5CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO5CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO5CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO5CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO5CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO5CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO5CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO5. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO5CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO5CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO5CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO5CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO5CTRL.
 */
struct ALT_PINMUX_IO5CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO5CTRL. */
typedef struct ALT_PINMUX_IO5CTRL_s  ALT_PINMUX_IO5CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO5CTRL register. */
#define ALT_PINMUX_IO5CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO5CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO5CTRL_OFST        0x144

/*
 * Register : HPS Pinmux Control Register 6 - io6ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO6
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO6CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO6CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_RPCDN register field. */
#define ALT_PINMUX_IO6CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_RPCDN register field. */
#define ALT_PINMUX_IO6CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO6CTRL_RPCDN register field. */
#define ALT_PINMUX_IO6CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO6CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO6CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO6CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO6CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO6CTRL_RPCDN register field. */
#define ALT_PINMUX_IO6CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO6CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO6CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO6CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO6
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO6CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO6CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_RPCDP register field. */
#define ALT_PINMUX_IO6CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_RPCDP register field. */
#define ALT_PINMUX_IO6CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO6CTRL_RPCDP register field. */
#define ALT_PINMUX_IO6CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO6CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO6CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO6CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO6CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO6CTRL_RPCDP register field. */
#define ALT_PINMUX_IO6CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO6CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO6CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO6CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO6
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO6CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO6CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO6CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO6CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO6CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO6CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO6CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO6CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO6CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO6CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO6
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO6CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO6CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO6CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO6CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO6CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO6CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO6CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO6CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO6CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO6CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO6
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO6CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO6CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO6CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO6CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO6CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO6CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO6CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO6CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO6. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO6CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO6CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO6CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO6CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO6CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO6CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO6CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO6CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO6CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO6CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO6. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO6CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO6CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO6CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO6CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO6CTRL.
 */
struct ALT_PINMUX_IO6CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO6CTRL. */
typedef struct ALT_PINMUX_IO6CTRL_s  ALT_PINMUX_IO6CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO6CTRL register. */
#define ALT_PINMUX_IO6CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO6CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO6CTRL_OFST        0x148

/*
 * Register : HPS Pinmux Control Register 7 - io7ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO7
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO7CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO7CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_RPCDN register field. */
#define ALT_PINMUX_IO7CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_RPCDN register field. */
#define ALT_PINMUX_IO7CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO7CTRL_RPCDN register field. */
#define ALT_PINMUX_IO7CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO7CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO7CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO7CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO7CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO7CTRL_RPCDN register field. */
#define ALT_PINMUX_IO7CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO7CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO7CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO7CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO7
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO7CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO7CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_RPCDP register field. */
#define ALT_PINMUX_IO7CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_RPCDP register field. */
#define ALT_PINMUX_IO7CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO7CTRL_RPCDP register field. */
#define ALT_PINMUX_IO7CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO7CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO7CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO7CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO7CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO7CTRL_RPCDP register field. */
#define ALT_PINMUX_IO7CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO7CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO7CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO7CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO7
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO7CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO7CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO7CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO7CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO7CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO7CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO7CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO7CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO7CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO7CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO7
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO7CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO7CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO7CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO7CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO7CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO7CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO7CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO7CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO7CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO7CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO7
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO7CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO7CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO7CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO7CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO7CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO7CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO7CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO7CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO7. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO7CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO7CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO7CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO7CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO7CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO7CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO7CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO7CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO7CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO7CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO7. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO7CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO7CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO7CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO7CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO7CTRL.
 */
struct ALT_PINMUX_IO7CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO7CTRL. */
typedef struct ALT_PINMUX_IO7CTRL_s  ALT_PINMUX_IO7CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO7CTRL register. */
#define ALT_PINMUX_IO7CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO7CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO7CTRL_OFST        0x14c

/*
 * Register : HPS Pinmux Control Register 8 - io8ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO8
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO8CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO8CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_RPCDN register field. */
#define ALT_PINMUX_IO8CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_RPCDN register field. */
#define ALT_PINMUX_IO8CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO8CTRL_RPCDN register field. */
#define ALT_PINMUX_IO8CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO8CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO8CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO8CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO8CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO8CTRL_RPCDN register field. */
#define ALT_PINMUX_IO8CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO8CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO8CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO8CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO8
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO8CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO8CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_RPCDP register field. */
#define ALT_PINMUX_IO8CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_RPCDP register field. */
#define ALT_PINMUX_IO8CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO8CTRL_RPCDP register field. */
#define ALT_PINMUX_IO8CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO8CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO8CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO8CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO8CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO8CTRL_RPCDP register field. */
#define ALT_PINMUX_IO8CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO8CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO8CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO8CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO8
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO8CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO8CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO8CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO8CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO8CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO8CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO8CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO8CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO8CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO8CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO8
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO8CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO8CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO8CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO8CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO8CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO8CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO8CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO8CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO8CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO8CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO8
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO8CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO8CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO8CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO8CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO8CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO8CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO8CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO8CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO8. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO8CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO8CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO8CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO8CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO8CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO8CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO8CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO8CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO8CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO8CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO8. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO8CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO8CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO8CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO8CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO8CTRL.
 */
struct ALT_PINMUX_IO8CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO8CTRL. */
typedef struct ALT_PINMUX_IO8CTRL_s  ALT_PINMUX_IO8CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO8CTRL register. */
#define ALT_PINMUX_IO8CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO8CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO8CTRL_OFST        0x150

/*
 * Register : HPS Pinmux Control Register 9 - io9ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO9
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description             
 * :---------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO9CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO9CTRL_RPCDN_E_PD_DRV_STRG  0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_RPCDN register field. */
#define ALT_PINMUX_IO9CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_RPCDN register field. */
#define ALT_PINMUX_IO9CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO9CTRL_RPCDN register field. */
#define ALT_PINMUX_IO9CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO9CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO9CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO9CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO9CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO9CTRL_RPCDN register field. */
#define ALT_PINMUX_IO9CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO9CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO9CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO9CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO9
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description           
 * :---------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO9CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO9CTRL_RPCDP_E_PU_DRV_STRG  0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_RPCDP register field. */
#define ALT_PINMUX_IO9CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_RPCDP register field. */
#define ALT_PINMUX_IO9CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO9CTRL_RPCDP register field. */
#define ALT_PINMUX_IO9CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO9CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO9CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO9CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO9CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO9CTRL_RPCDP register field. */
#define ALT_PINMUX_IO9CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO9CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO9CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO9CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO9
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description                 
 * :---------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO9CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO9CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO9CTRL_RSLEWN_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO9CTRL_RSLEWN_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO9CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO9CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO9CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO9CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO9CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO9CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO9
 * 
 * Field Enumeration Values:
 * 
 *  Enum                             | Value | Description               
 * :---------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO9CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO9CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO9CTRL_RSLEWP_E_FAST    0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO9CTRL_RSLEWP_E_SLOW    0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO9CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO9CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO9CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO9CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO9CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO9CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO9
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                   | Value | Description        
 * :---------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO9CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO9CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_E_DISABLED  0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_E_ENABLED   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO9CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO9CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO9CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO9CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO9CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO9CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO9. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description                                     
 * :-----------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO9CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO9CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                               |       | source.                                         
 *  ALT_PINMUX_IO9CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                               |       | reset value.                                    
 *  ALT_PINMUX_IO9CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_E_TTL              0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_E_STTL             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_E_DEFAULT_SCHMITT  0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_E_SCHMITT          0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO9CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO9CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO9CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO9CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO9CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO9CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO9. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description            
 * :------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_E_PULL_DN   0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO9CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_E_PULL_UP   0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO9CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO9CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO9CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO9CTRL.
 */
struct ALT_PINMUX_IO9CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO9CTRL. */
typedef struct ALT_PINMUX_IO9CTRL_s  ALT_PINMUX_IO9CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO9CTRL register. */
#define ALT_PINMUX_IO9CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO9CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO9CTRL_OFST        0x154

/*
 * Register : HPS Pinmux Control Register 10 - io10ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO10
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO10CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO10CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_RPCDN register field. */
#define ALT_PINMUX_IO10CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_RPCDN register field. */
#define ALT_PINMUX_IO10CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO10CTRL_RPCDN register field. */
#define ALT_PINMUX_IO10CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO10CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO10CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO10CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO10CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO10CTRL_RPCDN register field. */
#define ALT_PINMUX_IO10CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO10CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO10CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO10CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO10
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO10CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO10CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_RPCDP register field. */
#define ALT_PINMUX_IO10CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_RPCDP register field. */
#define ALT_PINMUX_IO10CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO10CTRL_RPCDP register field. */
#define ALT_PINMUX_IO10CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO10CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO10CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO10CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO10CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO10CTRL_RPCDP register field. */
#define ALT_PINMUX_IO10CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO10CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO10CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO10CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO10
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO10CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO10CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO10CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO10CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO10CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO10CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO10CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO10CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO10CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO10CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO10
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO10CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO10CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO10CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO10CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO10CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO10CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO10CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO10CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO10CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO10CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO10
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO10CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO10CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO10CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO10CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO10CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO10CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO10CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO10CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO10. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO10CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO10CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO10CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO10CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO10CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO10CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO10CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO10CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO10CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO10CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO10. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO10CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO10CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO10CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO10CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO10CTRL.
 */
struct ALT_PINMUX_IO10CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO10CTRL. */
typedef struct ALT_PINMUX_IO10CTRL_s  ALT_PINMUX_IO10CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO10CTRL register. */
#define ALT_PINMUX_IO10CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO10CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO10CTRL_OFST        0x158

/*
 * Register : HPS Pinmux Control Register 11 - io11ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO11
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO11CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO11CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_RPCDN register field. */
#define ALT_PINMUX_IO11CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_RPCDN register field. */
#define ALT_PINMUX_IO11CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO11CTRL_RPCDN register field. */
#define ALT_PINMUX_IO11CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO11CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO11CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO11CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO11CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO11CTRL_RPCDN register field. */
#define ALT_PINMUX_IO11CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO11CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO11CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO11CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO11
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO11CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO11CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_RPCDP register field. */
#define ALT_PINMUX_IO11CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_RPCDP register field. */
#define ALT_PINMUX_IO11CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO11CTRL_RPCDP register field. */
#define ALT_PINMUX_IO11CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO11CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO11CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO11CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO11CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO11CTRL_RPCDP register field. */
#define ALT_PINMUX_IO11CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO11CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO11CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO11CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO11
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO11CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO11CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO11CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO11CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO11CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO11CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO11CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO11CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO11CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO11CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO11
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO11CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO11CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO11CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO11CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO11CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO11CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO11CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO11CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO11CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO11CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO11
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO11CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO11CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO11CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO11CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO11CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO11CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO11CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO11CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO11. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO11CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO11CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO11CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO11CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO11CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO11CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO11CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO11CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO11CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO11CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO11. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO11CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO11CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO11CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO11CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO11CTRL.
 */
struct ALT_PINMUX_IO11CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO11CTRL. */
typedef struct ALT_PINMUX_IO11CTRL_s  ALT_PINMUX_IO11CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO11CTRL register. */
#define ALT_PINMUX_IO11CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO11CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO11CTRL_OFST        0x15c

/*
 * Register : HPS Pinmux Control Register 12 - io12ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO12
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO12CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO12CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_RPCDN register field. */
#define ALT_PINMUX_IO12CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_RPCDN register field. */
#define ALT_PINMUX_IO12CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO12CTRL_RPCDN register field. */
#define ALT_PINMUX_IO12CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO12CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO12CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO12CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO12CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO12CTRL_RPCDN register field. */
#define ALT_PINMUX_IO12CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO12CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO12CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO12CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO12
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO12CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO12CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_RPCDP register field. */
#define ALT_PINMUX_IO12CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_RPCDP register field. */
#define ALT_PINMUX_IO12CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO12CTRL_RPCDP register field. */
#define ALT_PINMUX_IO12CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO12CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO12CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO12CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO12CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO12CTRL_RPCDP register field. */
#define ALT_PINMUX_IO12CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO12CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO12CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO12CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO12
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO12CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO12CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO12CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO12CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO12CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO12CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO12CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO12CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO12CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO12CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO12
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO12CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO12CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO12CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO12CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO12CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO12CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO12CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO12CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO12CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO12CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO12
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO12CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO12CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO12CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO12CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO12CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO12CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO12CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO12CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO12. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO12CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO12CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO12CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO12CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO12CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO12CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO12CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO12CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO12CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO12CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO12. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO12CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO12CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO12CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO12CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO12CTRL.
 */
struct ALT_PINMUX_IO12CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO12CTRL. */
typedef struct ALT_PINMUX_IO12CTRL_s  ALT_PINMUX_IO12CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO12CTRL register. */
#define ALT_PINMUX_IO12CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO12CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO12CTRL_OFST        0x160

/*
 * Register : HPS Pinmux Control Register 13 - io13ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO13
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO13CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO13CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_RPCDN register field. */
#define ALT_PINMUX_IO13CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_RPCDN register field. */
#define ALT_PINMUX_IO13CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO13CTRL_RPCDN register field. */
#define ALT_PINMUX_IO13CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO13CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO13CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO13CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO13CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO13CTRL_RPCDN register field. */
#define ALT_PINMUX_IO13CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO13CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO13CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO13CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO13
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO13CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO13CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_RPCDP register field. */
#define ALT_PINMUX_IO13CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_RPCDP register field. */
#define ALT_PINMUX_IO13CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO13CTRL_RPCDP register field. */
#define ALT_PINMUX_IO13CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO13CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO13CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO13CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO13CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO13CTRL_RPCDP register field. */
#define ALT_PINMUX_IO13CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO13CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO13CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO13CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO13
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO13CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO13CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO13CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO13CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO13CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO13CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO13CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO13CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO13CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO13CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO13
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO13CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO13CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO13CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO13CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO13CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO13CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO13CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO13CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO13CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO13CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO13
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO13CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO13CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO13CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO13CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO13CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO13CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO13CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO13CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO13. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO13CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO13CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO13CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO13CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO13CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO13CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO13CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO13CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO13CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO13CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO13. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO13CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO13CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO13CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO13CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO13CTRL.
 */
struct ALT_PINMUX_IO13CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO13CTRL. */
typedef struct ALT_PINMUX_IO13CTRL_s  ALT_PINMUX_IO13CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO13CTRL register. */
#define ALT_PINMUX_IO13CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO13CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO13CTRL_OFST        0x164

/*
 * Register : HPS Pinmux Control Register 14 - io14ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO14
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO14CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO14CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_RPCDN register field. */
#define ALT_PINMUX_IO14CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_RPCDN register field. */
#define ALT_PINMUX_IO14CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO14CTRL_RPCDN register field. */
#define ALT_PINMUX_IO14CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO14CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO14CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO14CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO14CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO14CTRL_RPCDN register field. */
#define ALT_PINMUX_IO14CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO14CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO14CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO14CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO14
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO14CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO14CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_RPCDP register field. */
#define ALT_PINMUX_IO14CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_RPCDP register field. */
#define ALT_PINMUX_IO14CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO14CTRL_RPCDP register field. */
#define ALT_PINMUX_IO14CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO14CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO14CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO14CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO14CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO14CTRL_RPCDP register field. */
#define ALT_PINMUX_IO14CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO14CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO14CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO14CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO14
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO14CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO14CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO14CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO14CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO14CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO14CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO14CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO14CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO14CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO14CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO14
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO14CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO14CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO14CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO14CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO14CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO14CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO14CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO14CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO14CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO14CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO14
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO14CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO14CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO14CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO14CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO14CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO14CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO14CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO14CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO14. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO14CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO14CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO14CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO14CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO14CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO14CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO14CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO14CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO14CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO14CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO14. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO14CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO14CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO14CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO14CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO14CTRL.
 */
struct ALT_PINMUX_IO14CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO14CTRL. */
typedef struct ALT_PINMUX_IO14CTRL_s  ALT_PINMUX_IO14CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO14CTRL register. */
#define ALT_PINMUX_IO14CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO14CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO14CTRL_OFST        0x168

/*
 * Register : HPS Pinmux Control Register 15 - io15ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO15
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO15CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO15CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_RPCDN register field. */
#define ALT_PINMUX_IO15CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_RPCDN register field. */
#define ALT_PINMUX_IO15CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO15CTRL_RPCDN register field. */
#define ALT_PINMUX_IO15CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO15CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO15CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO15CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO15CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO15CTRL_RPCDN register field. */
#define ALT_PINMUX_IO15CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO15CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO15CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO15CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO15
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO15CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO15CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_RPCDP register field. */
#define ALT_PINMUX_IO15CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_RPCDP register field. */
#define ALT_PINMUX_IO15CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO15CTRL_RPCDP register field. */
#define ALT_PINMUX_IO15CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO15CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO15CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO15CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO15CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO15CTRL_RPCDP register field. */
#define ALT_PINMUX_IO15CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO15CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO15CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO15CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO15
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO15CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO15CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO15CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO15CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO15CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO15CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO15CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO15CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO15CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO15CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO15
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO15CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO15CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO15CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO15CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO15CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO15CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO15CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO15CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO15CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO15CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO15
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO15CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO15CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO15CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO15CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO15CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO15CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO15CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO15CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO15. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO15CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO15CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO15CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO15CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO15CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO15CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO15CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO15CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO15CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO15CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO15. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO15CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO15CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO15CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO15CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO15CTRL.
 */
struct ALT_PINMUX_IO15CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO15CTRL. */
typedef struct ALT_PINMUX_IO15CTRL_s  ALT_PINMUX_IO15CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO15CTRL register. */
#define ALT_PINMUX_IO15CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO15CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO15CTRL_OFST        0x16c

/*
 * Register : HPS Pinmux Control Register 16 - io16ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO16
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO16CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO16CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_RPCDN register field. */
#define ALT_PINMUX_IO16CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_RPCDN register field. */
#define ALT_PINMUX_IO16CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO16CTRL_RPCDN register field. */
#define ALT_PINMUX_IO16CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO16CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO16CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO16CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO16CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO16CTRL_RPCDN register field. */
#define ALT_PINMUX_IO16CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO16CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO16CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO16CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO16
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO16CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO16CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_RPCDP register field. */
#define ALT_PINMUX_IO16CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_RPCDP register field. */
#define ALT_PINMUX_IO16CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO16CTRL_RPCDP register field. */
#define ALT_PINMUX_IO16CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO16CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO16CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO16CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO16CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO16CTRL_RPCDP register field. */
#define ALT_PINMUX_IO16CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO16CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO16CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO16CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO16
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO16CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO16CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO16CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO16CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO16CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO16CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO16CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO16CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO16CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO16CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO16
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO16CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO16CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO16CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO16CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO16CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO16CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO16CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO16CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO16CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO16CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO16
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO16CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO16CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO16CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO16CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO16CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO16CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO16CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO16CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO16. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO16CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO16CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO16CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO16CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO16CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO16CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO16CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO16CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO16CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO16CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO16. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO16CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO16CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO16CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO16CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO16CTRL.
 */
struct ALT_PINMUX_IO16CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO16CTRL. */
typedef struct ALT_PINMUX_IO16CTRL_s  ALT_PINMUX_IO16CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO16CTRL register. */
#define ALT_PINMUX_IO16CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO16CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO16CTRL_OFST        0x170

/*
 * Register : HPS Pinmux Control Register 17 - io17ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO17
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO17CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO17CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_RPCDN register field. */
#define ALT_PINMUX_IO17CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_RPCDN register field. */
#define ALT_PINMUX_IO17CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO17CTRL_RPCDN register field. */
#define ALT_PINMUX_IO17CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO17CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO17CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO17CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO17CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO17CTRL_RPCDN register field. */
#define ALT_PINMUX_IO17CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO17CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO17CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO17CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO17
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO17CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO17CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_RPCDP register field. */
#define ALT_PINMUX_IO17CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_RPCDP register field. */
#define ALT_PINMUX_IO17CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO17CTRL_RPCDP register field. */
#define ALT_PINMUX_IO17CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO17CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO17CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO17CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO17CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO17CTRL_RPCDP register field. */
#define ALT_PINMUX_IO17CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO17CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO17CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO17CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO17
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO17CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO17CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO17CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO17CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO17CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO17CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO17CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO17CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO17CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO17CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO17
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO17CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO17CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO17CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO17CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO17CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO17CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO17CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO17CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO17CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO17CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO17
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO17CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO17CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO17CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO17CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO17CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO17CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO17CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO17CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO17. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO17CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO17CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO17CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO17CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO17CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO17CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO17CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO17CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO17CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO17CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO17. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO17CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO17CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO17CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO17CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO17CTRL.
 */
struct ALT_PINMUX_IO17CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO17CTRL. */
typedef struct ALT_PINMUX_IO17CTRL_s  ALT_PINMUX_IO17CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO17CTRL register. */
#define ALT_PINMUX_IO17CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO17CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO17CTRL_OFST        0x174

/*
 * Register : HPS Pinmux Control Register 18 - io18ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO18
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO18CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO18CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_RPCDN register field. */
#define ALT_PINMUX_IO18CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_RPCDN register field. */
#define ALT_PINMUX_IO18CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO18CTRL_RPCDN register field. */
#define ALT_PINMUX_IO18CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO18CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO18CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO18CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO18CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO18CTRL_RPCDN register field. */
#define ALT_PINMUX_IO18CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO18CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO18CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO18CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO18
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO18CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO18CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_RPCDP register field. */
#define ALT_PINMUX_IO18CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_RPCDP register field. */
#define ALT_PINMUX_IO18CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO18CTRL_RPCDP register field. */
#define ALT_PINMUX_IO18CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO18CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO18CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO18CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO18CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO18CTRL_RPCDP register field. */
#define ALT_PINMUX_IO18CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO18CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO18CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO18CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO18
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO18CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO18CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO18CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO18CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO18CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO18CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO18CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO18CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO18CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO18CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO18
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO18CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO18CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO18CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO18CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO18CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO18CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO18CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO18CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO18CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO18CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO18
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO18CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO18CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO18CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO18CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO18CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO18CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO18CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO18CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO18. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO18CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO18CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO18CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO18CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO18CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO18CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO18CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO18CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO18CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO18CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO18. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO18CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO18CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO18CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO18CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO18CTRL.
 */
struct ALT_PINMUX_IO18CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO18CTRL. */
typedef struct ALT_PINMUX_IO18CTRL_s  ALT_PINMUX_IO18CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO18CTRL register. */
#define ALT_PINMUX_IO18CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO18CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO18CTRL_OFST        0x178

/*
 * Register : HPS Pinmux Control Register 19 - io19ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO19
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO19CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO19CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_RPCDN register field. */
#define ALT_PINMUX_IO19CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_RPCDN register field. */
#define ALT_PINMUX_IO19CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO19CTRL_RPCDN register field. */
#define ALT_PINMUX_IO19CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO19CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO19CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO19CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO19CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO19CTRL_RPCDN register field. */
#define ALT_PINMUX_IO19CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO19CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO19CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO19CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO19
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO19CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO19CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_RPCDP register field. */
#define ALT_PINMUX_IO19CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_RPCDP register field. */
#define ALT_PINMUX_IO19CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO19CTRL_RPCDP register field. */
#define ALT_PINMUX_IO19CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO19CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO19CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO19CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO19CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO19CTRL_RPCDP register field. */
#define ALT_PINMUX_IO19CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO19CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO19CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO19CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO19
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO19CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO19CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO19CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO19CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO19CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO19CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO19CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO19CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO19CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO19CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO19
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO19CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO19CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO19CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO19CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO19CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO19CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO19CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO19CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO19CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO19CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO19
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO19CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO19CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO19CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO19CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO19CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO19CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO19CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO19CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO19. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO19CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO19CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO19CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO19CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO19CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO19CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO19CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO19CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO19CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO19CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO19. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO19CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO19CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO19CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO19CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO19CTRL.
 */
struct ALT_PINMUX_IO19CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO19CTRL. */
typedef struct ALT_PINMUX_IO19CTRL_s  ALT_PINMUX_IO19CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO19CTRL register. */
#define ALT_PINMUX_IO19CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO19CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO19CTRL_OFST        0x17c

/*
 * Register : HPS Pinmux Control Register 20 - io20ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO20
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO20CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO20CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_RPCDN register field. */
#define ALT_PINMUX_IO20CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_RPCDN register field. */
#define ALT_PINMUX_IO20CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO20CTRL_RPCDN register field. */
#define ALT_PINMUX_IO20CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO20CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO20CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO20CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO20CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO20CTRL_RPCDN register field. */
#define ALT_PINMUX_IO20CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO20CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO20CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO20CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO20
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO20CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO20CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_RPCDP register field. */
#define ALT_PINMUX_IO20CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_RPCDP register field. */
#define ALT_PINMUX_IO20CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO20CTRL_RPCDP register field. */
#define ALT_PINMUX_IO20CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO20CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO20CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO20CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO20CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO20CTRL_RPCDP register field. */
#define ALT_PINMUX_IO20CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO20CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO20CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO20CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO20
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO20CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO20CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO20CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO20CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO20CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO20CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO20CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO20CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO20CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO20CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO20
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO20CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO20CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO20CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO20CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO20CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO20CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO20CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO20CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO20CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO20CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO20
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO20CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO20CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO20CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO20CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO20CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO20CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO20CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO20CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO20. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO20CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO20CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO20CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO20CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO20CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO20CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO20CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO20CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO20CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO20CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO20. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO20CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO20CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO20CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO20CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO20CTRL.
 */
struct ALT_PINMUX_IO20CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO20CTRL. */
typedef struct ALT_PINMUX_IO20CTRL_s  ALT_PINMUX_IO20CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO20CTRL register. */
#define ALT_PINMUX_IO20CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO20CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO20CTRL_OFST        0x180

/*
 * Register : HPS Pinmux Control Register 21 - io21ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO21
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO21CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO21CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_RPCDN register field. */
#define ALT_PINMUX_IO21CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_RPCDN register field. */
#define ALT_PINMUX_IO21CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO21CTRL_RPCDN register field. */
#define ALT_PINMUX_IO21CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO21CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO21CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO21CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO21CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO21CTRL_RPCDN register field. */
#define ALT_PINMUX_IO21CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO21CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO21CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO21CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO21
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO21CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO21CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_RPCDP register field. */
#define ALT_PINMUX_IO21CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_RPCDP register field. */
#define ALT_PINMUX_IO21CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO21CTRL_RPCDP register field. */
#define ALT_PINMUX_IO21CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO21CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO21CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO21CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO21CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO21CTRL_RPCDP register field. */
#define ALT_PINMUX_IO21CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO21CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO21CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO21CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO21
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO21CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO21CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO21CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO21CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO21CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO21CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO21CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO21CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO21CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO21CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO21
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO21CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO21CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO21CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO21CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO21CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO21CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO21CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO21CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO21CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO21CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO21
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO21CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO21CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO21CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO21CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO21CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO21CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO21CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO21CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO21. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO21CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO21CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO21CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO21CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO21CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO21CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO21CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO21CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO21CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO21CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO21. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO21CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO21CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO21CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO21CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO21CTRL.
 */
struct ALT_PINMUX_IO21CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO21CTRL. */
typedef struct ALT_PINMUX_IO21CTRL_s  ALT_PINMUX_IO21CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO21CTRL register. */
#define ALT_PINMUX_IO21CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO21CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO21CTRL_OFST        0x184

/*
 * Register : HPS Pinmux Control Register 22 - io22ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO22
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO22CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO22CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_RPCDN register field. */
#define ALT_PINMUX_IO22CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_RPCDN register field. */
#define ALT_PINMUX_IO22CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO22CTRL_RPCDN register field. */
#define ALT_PINMUX_IO22CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO22CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO22CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO22CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO22CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO22CTRL_RPCDN register field. */
#define ALT_PINMUX_IO22CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO22CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO22CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO22CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO22
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO22CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO22CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_RPCDP register field. */
#define ALT_PINMUX_IO22CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_RPCDP register field. */
#define ALT_PINMUX_IO22CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO22CTRL_RPCDP register field. */
#define ALT_PINMUX_IO22CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO22CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO22CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO22CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO22CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO22CTRL_RPCDP register field. */
#define ALT_PINMUX_IO22CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO22CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO22CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO22CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO22
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO22CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO22CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO22CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO22CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO22CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO22CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO22CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO22CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO22CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO22CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO22
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO22CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO22CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO22CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO22CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO22CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO22CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO22CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO22CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO22CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO22CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO22
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO22CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO22CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO22CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO22CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO22CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO22CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO22CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO22CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO22. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO22CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO22CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO22CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO22CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO22CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO22CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO22CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO22CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO22CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO22CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO22. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO22CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO22CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO22CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO22CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO22CTRL.
 */
struct ALT_PINMUX_IO22CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO22CTRL. */
typedef struct ALT_PINMUX_IO22CTRL_s  ALT_PINMUX_IO22CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO22CTRL register. */
#define ALT_PINMUX_IO22CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO22CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO22CTRL_OFST        0x188

/*
 * Register : HPS Pinmux Control Register 23 - io23ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO23
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO23CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO23CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_RPCDN register field. */
#define ALT_PINMUX_IO23CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_RPCDN register field. */
#define ALT_PINMUX_IO23CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO23CTRL_RPCDN register field. */
#define ALT_PINMUX_IO23CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO23CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO23CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO23CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO23CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO23CTRL_RPCDN register field. */
#define ALT_PINMUX_IO23CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO23CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO23CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO23CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO23
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO23CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO23CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_RPCDP register field. */
#define ALT_PINMUX_IO23CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_RPCDP register field. */
#define ALT_PINMUX_IO23CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO23CTRL_RPCDP register field. */
#define ALT_PINMUX_IO23CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO23CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO23CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO23CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO23CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO23CTRL_RPCDP register field. */
#define ALT_PINMUX_IO23CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO23CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO23CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO23CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO23
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO23CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO23CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO23CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO23CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO23CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO23CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO23CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO23CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO23CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO23CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO23
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO23CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO23CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO23CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO23CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO23CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO23CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO23CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO23CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO23CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO23CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO23
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO23CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO23CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO23CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO23CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO23CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO23CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO23CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO23CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO23. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO23CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO23CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO23CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO23CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO23CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO23CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO23CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO23CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO23CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO23CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO23. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO23CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO23CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO23CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO23CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO23CTRL.
 */
struct ALT_PINMUX_IO23CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO23CTRL. */
typedef struct ALT_PINMUX_IO23CTRL_s  ALT_PINMUX_IO23CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO23CTRL register. */
#define ALT_PINMUX_IO23CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO23CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO23CTRL_OFST        0x18c

/*
 * Register : HPS Pinmux Control Register 24 - io24ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO24
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO24CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO24CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_RPCDN register field. */
#define ALT_PINMUX_IO24CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_RPCDN register field. */
#define ALT_PINMUX_IO24CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO24CTRL_RPCDN register field. */
#define ALT_PINMUX_IO24CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO24CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO24CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO24CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO24CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO24CTRL_RPCDN register field. */
#define ALT_PINMUX_IO24CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO24CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO24CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO24CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO24
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO24CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO24CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_RPCDP register field. */
#define ALT_PINMUX_IO24CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_RPCDP register field. */
#define ALT_PINMUX_IO24CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO24CTRL_RPCDP register field. */
#define ALT_PINMUX_IO24CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO24CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO24CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO24CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO24CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO24CTRL_RPCDP register field. */
#define ALT_PINMUX_IO24CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO24CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO24CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO24CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO24
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO24CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO24CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO24CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO24CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO24CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO24CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO24CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO24CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO24CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO24CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO24
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO24CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO24CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO24CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO24CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO24CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO24CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO24CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO24CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO24CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO24CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO24
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO24CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO24CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO24CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO24CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO24CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO24CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO24CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO24CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO24. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO24CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO24CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO24CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO24CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO24CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO24CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO24CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO24CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO24CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO24CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO24. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.  NOTE: Only one of them can be active at
 * a time. Both cannot be enabled or disabled.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO24CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO24CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO24CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO24CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO24CTRL.
 */
struct ALT_PINMUX_IO24CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO24CTRL. */
typedef struct ALT_PINMUX_IO24CTRL_s  ALT_PINMUX_IO24CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO24CTRL register. */
#define ALT_PINMUX_IO24CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO24CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO24CTRL_OFST        0x190

/*
 * Register : HPS Pinmux Control Register 25 - io25ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO25
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO25CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO25CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_RPCDN register field. */
#define ALT_PINMUX_IO25CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_RPCDN register field. */
#define ALT_PINMUX_IO25CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO25CTRL_RPCDN register field. */
#define ALT_PINMUX_IO25CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO25CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO25CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO25CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO25CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO25CTRL_RPCDN register field. */
#define ALT_PINMUX_IO25CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO25CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO25CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO25CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO25
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO25CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO25CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_RPCDP register field. */
#define ALT_PINMUX_IO25CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_RPCDP register field. */
#define ALT_PINMUX_IO25CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO25CTRL_RPCDP register field. */
#define ALT_PINMUX_IO25CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO25CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO25CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO25CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO25CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO25CTRL_RPCDP register field. */
#define ALT_PINMUX_IO25CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO25CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO25CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO25CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO25
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO25CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO25CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO25CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO25CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO25CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO25CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO25CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO25CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO25CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO25CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO25
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO25CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO25CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO25CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO25CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO25CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO25CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO25CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO25CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO25CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO25CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO25
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO25CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO25CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO25CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO25CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO25CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO25CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO25CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO25CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO25. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO25CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO25CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO25CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO25CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO25CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO25CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO25CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO25CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO25CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO25CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO25. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO25CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO25CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO25CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO25CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO25CTRL.
 */
struct ALT_PINMUX_IO25CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO25CTRL. */
typedef struct ALT_PINMUX_IO25CTRL_s  ALT_PINMUX_IO25CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO25CTRL register. */
#define ALT_PINMUX_IO25CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO25CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO25CTRL_OFST        0x194

/*
 * Register : HPS Pinmux Control Register 26 - io26ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO26
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO26CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO26CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_RPCDN register field. */
#define ALT_PINMUX_IO26CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_RPCDN register field. */
#define ALT_PINMUX_IO26CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO26CTRL_RPCDN register field. */
#define ALT_PINMUX_IO26CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO26CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO26CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO26CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO26CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO26CTRL_RPCDN register field. */
#define ALT_PINMUX_IO26CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO26CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO26CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO26CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO26
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO26CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO26CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_RPCDP register field. */
#define ALT_PINMUX_IO26CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_RPCDP register field. */
#define ALT_PINMUX_IO26CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO26CTRL_RPCDP register field. */
#define ALT_PINMUX_IO26CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO26CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO26CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO26CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO26CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO26CTRL_RPCDP register field. */
#define ALT_PINMUX_IO26CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO26CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO26CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO26CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO26
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO26CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO26CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO26CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO26CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO26CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO26CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO26CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO26CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO26CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO26CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO26
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO26CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO26CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO26CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO26CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO26CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO26CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO26CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO26CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO26CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO26CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO26
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO26CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO26CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO26CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO26CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO26CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO26CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO26CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO26CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO26. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO26CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO26CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO26CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO26CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO26CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO26CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO26CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO26CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO26CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO26CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO26. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO26CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO26CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO26CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO26CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO26CTRL.
 */
struct ALT_PINMUX_IO26CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO26CTRL. */
typedef struct ALT_PINMUX_IO26CTRL_s  ALT_PINMUX_IO26CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO26CTRL register. */
#define ALT_PINMUX_IO26CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO26CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO26CTRL_OFST        0x198

/*
 * Register : HPS Pinmux Control Register 27 - io27ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO27
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO27CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO27CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_RPCDN register field. */
#define ALT_PINMUX_IO27CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_RPCDN register field. */
#define ALT_PINMUX_IO27CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO27CTRL_RPCDN register field. */
#define ALT_PINMUX_IO27CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO27CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO27CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO27CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO27CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO27CTRL_RPCDN register field. */
#define ALT_PINMUX_IO27CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO27CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO27CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO27CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO27
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO27CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO27CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_RPCDP register field. */
#define ALT_PINMUX_IO27CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_RPCDP register field. */
#define ALT_PINMUX_IO27CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO27CTRL_RPCDP register field. */
#define ALT_PINMUX_IO27CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO27CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO27CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO27CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO27CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO27CTRL_RPCDP register field. */
#define ALT_PINMUX_IO27CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO27CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO27CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO27CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO27
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO27CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO27CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO27CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO27CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO27CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO27CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO27CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO27CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO27CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO27CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO27
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO27CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO27CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO27CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO27CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO27CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO27CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO27CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO27CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO27CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO27CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO27
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO27CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO27CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO27CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO27CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO27CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO27CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO27CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO27CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO27. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO27CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO27CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO27CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO27CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO27CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO27CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO27CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO27CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO27CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO27CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO27. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO27CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO27CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO27CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO27CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO27CTRL.
 */
struct ALT_PINMUX_IO27CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO27CTRL. */
typedef struct ALT_PINMUX_IO27CTRL_s  ALT_PINMUX_IO27CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO27CTRL register. */
#define ALT_PINMUX_IO27CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO27CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO27CTRL_OFST        0x19c

/*
 * Register : HPS Pinmux Control Register 28 - io28ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO28
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO28CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO28CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_RPCDN register field. */
#define ALT_PINMUX_IO28CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_RPCDN register field. */
#define ALT_PINMUX_IO28CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO28CTRL_RPCDN register field. */
#define ALT_PINMUX_IO28CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO28CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO28CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO28CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO28CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO28CTRL_RPCDN register field. */
#define ALT_PINMUX_IO28CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO28CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO28CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO28CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO28
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO28CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO28CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_RPCDP register field. */
#define ALT_PINMUX_IO28CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_RPCDP register field. */
#define ALT_PINMUX_IO28CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO28CTRL_RPCDP register field. */
#define ALT_PINMUX_IO28CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO28CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO28CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO28CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO28CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO28CTRL_RPCDP register field. */
#define ALT_PINMUX_IO28CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO28CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO28CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO28CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO28
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO28CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO28CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO28CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO28CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO28CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO28CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO28CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO28CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO28CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO28CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO28
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO28CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO28CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO28CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO28CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO28CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO28CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO28CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO28CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO28CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO28CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO28
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO28CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO28CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO28CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO28CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO28CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO28CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO28CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO28CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO28. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO28CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO28CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO28CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO28CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO28CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO28CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO28CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO28CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO28CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO28CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO28. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO28CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO28CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO28CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO28CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO28CTRL.
 */
struct ALT_PINMUX_IO28CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO28CTRL. */
typedef struct ALT_PINMUX_IO28CTRL_s  ALT_PINMUX_IO28CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO28CTRL register. */
#define ALT_PINMUX_IO28CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO28CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO28CTRL_OFST        0x200

/*
 * Register : HPS Pinmux Control Register 29 - io29ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO29
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO29CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO29CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_RPCDN register field. */
#define ALT_PINMUX_IO29CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_RPCDN register field. */
#define ALT_PINMUX_IO29CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO29CTRL_RPCDN register field. */
#define ALT_PINMUX_IO29CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO29CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO29CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO29CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO29CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO29CTRL_RPCDN register field. */
#define ALT_PINMUX_IO29CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO29CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO29CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO29CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO29
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO29CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO29CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_RPCDP register field. */
#define ALT_PINMUX_IO29CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_RPCDP register field. */
#define ALT_PINMUX_IO29CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO29CTRL_RPCDP register field. */
#define ALT_PINMUX_IO29CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO29CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO29CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO29CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO29CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO29CTRL_RPCDP register field. */
#define ALT_PINMUX_IO29CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO29CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO29CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO29CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO29
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO29CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO29CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO29CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO29CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO29CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO29CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO29CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO29CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO29CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO29CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO29
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO29CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO29CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO29CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO29CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO29CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO29CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO29CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO29CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO29CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO29CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO29
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO29CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO29CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO29CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO29CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO29CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO29CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO29CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO29CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO29. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO29CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO29CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO29CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO29CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO29CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO29CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO29CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO29CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO29CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO29CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO29. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO29CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO29CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO29CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO29CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO29CTRL.
 */
struct ALT_PINMUX_IO29CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO29CTRL. */
typedef struct ALT_PINMUX_IO29CTRL_s  ALT_PINMUX_IO29CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO29CTRL register. */
#define ALT_PINMUX_IO29CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO29CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO29CTRL_OFST        0x204

/*
 * Register : HPS Pinmux Control Register 30 - io30ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO30
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO30CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO30CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_RPCDN register field. */
#define ALT_PINMUX_IO30CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_RPCDN register field. */
#define ALT_PINMUX_IO30CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO30CTRL_RPCDN register field. */
#define ALT_PINMUX_IO30CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO30CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO30CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO30CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO30CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO30CTRL_RPCDN register field. */
#define ALT_PINMUX_IO30CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO30CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO30CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO30CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO30
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO30CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO30CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_RPCDP register field. */
#define ALT_PINMUX_IO30CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_RPCDP register field. */
#define ALT_PINMUX_IO30CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO30CTRL_RPCDP register field. */
#define ALT_PINMUX_IO30CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO30CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO30CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO30CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO30CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO30CTRL_RPCDP register field. */
#define ALT_PINMUX_IO30CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO30CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO30CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO30CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO30
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO30CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO30CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO30CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO30CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO30CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO30CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO30CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO30CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO30CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO30CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO30
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO30CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO30CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO30CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO30CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO30CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO30CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO30CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO30CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO30CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO30CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO30
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO30CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO30CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO30CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO30CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO30CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO30CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO30CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO30CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO30. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO30CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO30CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO30CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO30CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO30CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO30CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO30CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO30CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO30CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO30CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO30. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO30CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO30CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO30CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO30CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO30CTRL.
 */
struct ALT_PINMUX_IO30CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO30CTRL. */
typedef struct ALT_PINMUX_IO30CTRL_s  ALT_PINMUX_IO30CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO30CTRL register. */
#define ALT_PINMUX_IO30CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO30CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO30CTRL_OFST        0x208

/*
 * Register : HPS Pinmux Control Register 31 - io31ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO31
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO31CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO31CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_RPCDN register field. */
#define ALT_PINMUX_IO31CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_RPCDN register field. */
#define ALT_PINMUX_IO31CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO31CTRL_RPCDN register field. */
#define ALT_PINMUX_IO31CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO31CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO31CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO31CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO31CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO31CTRL_RPCDN register field. */
#define ALT_PINMUX_IO31CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO31CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO31CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO31CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO31
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO31CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO31CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_RPCDP register field. */
#define ALT_PINMUX_IO31CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_RPCDP register field. */
#define ALT_PINMUX_IO31CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO31CTRL_RPCDP register field. */
#define ALT_PINMUX_IO31CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO31CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO31CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO31CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO31CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO31CTRL_RPCDP register field. */
#define ALT_PINMUX_IO31CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO31CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO31CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO31CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO31
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO31CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO31CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO31CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO31CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO31CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO31CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO31CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO31CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO31CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO31CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO31
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO31CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO31CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO31CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO31CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO31CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO31CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO31CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO31CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO31CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO31CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO31
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO31CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO31CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO31CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO31CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO31CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO31CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO31CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO31CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO31. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO31CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO31CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO31CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO31CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO31CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO31CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO31CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO31CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO31CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO31CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO31. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO31CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO31CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO31CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO31CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO31CTRL.
 */
struct ALT_PINMUX_IO31CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO31CTRL. */
typedef struct ALT_PINMUX_IO31CTRL_s  ALT_PINMUX_IO31CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO31CTRL register. */
#define ALT_PINMUX_IO31CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO31CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO31CTRL_OFST        0x20c

/*
 * Register : HPS Pinmux Control Register 32 - io32ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO32
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO32CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO32CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_RPCDN register field. */
#define ALT_PINMUX_IO32CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_RPCDN register field. */
#define ALT_PINMUX_IO32CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO32CTRL_RPCDN register field. */
#define ALT_PINMUX_IO32CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO32CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO32CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO32CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO32CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO32CTRL_RPCDN register field. */
#define ALT_PINMUX_IO32CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO32CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO32CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO32CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO32
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO32CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO32CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_RPCDP register field. */
#define ALT_PINMUX_IO32CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_RPCDP register field. */
#define ALT_PINMUX_IO32CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO32CTRL_RPCDP register field. */
#define ALT_PINMUX_IO32CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO32CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO32CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO32CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO32CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO32CTRL_RPCDP register field. */
#define ALT_PINMUX_IO32CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO32CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO32CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO32CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO32
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO32CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO32CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO32CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO32CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO32CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO32CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO32CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO32CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO32CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO32CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO32
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO32CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO32CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO32CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO32CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO32CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO32CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO32CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO32CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO32CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO32CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO32
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO32CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO32CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO32CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO32CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO32CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO32CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO32CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO32CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO32. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO32CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO32CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO32CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO32CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO32CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO32CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO32CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO32CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO32CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO32CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO32. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO32CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO32CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO32CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO32CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO32CTRL.
 */
struct ALT_PINMUX_IO32CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO32CTRL. */
typedef struct ALT_PINMUX_IO32CTRL_s  ALT_PINMUX_IO32CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO32CTRL register. */
#define ALT_PINMUX_IO32CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO32CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO32CTRL_OFST        0x210

/*
 * Register : HPS Pinmux Control Register 33 - io33ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO33
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO33CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO33CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_RPCDN register field. */
#define ALT_PINMUX_IO33CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_RPCDN register field. */
#define ALT_PINMUX_IO33CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO33CTRL_RPCDN register field. */
#define ALT_PINMUX_IO33CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO33CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO33CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO33CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO33CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO33CTRL_RPCDN register field. */
#define ALT_PINMUX_IO33CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO33CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO33CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO33CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO33
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO33CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO33CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_RPCDP register field. */
#define ALT_PINMUX_IO33CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_RPCDP register field. */
#define ALT_PINMUX_IO33CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO33CTRL_RPCDP register field. */
#define ALT_PINMUX_IO33CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO33CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO33CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO33CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO33CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO33CTRL_RPCDP register field. */
#define ALT_PINMUX_IO33CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO33CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO33CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO33CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO33
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO33CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO33CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO33CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO33CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO33CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO33CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO33CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO33CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO33CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO33CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO33
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO33CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO33CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO33CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO33CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO33CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO33CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO33CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO33CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO33CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO33CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO33
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO33CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO33CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO33CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO33CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO33CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO33CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO33CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO33CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO33. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO33CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO33CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO33CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO33CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO33CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO33CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO33CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO33CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO33CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO33CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO33. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO33CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO33CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO33CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO33CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO33CTRL.
 */
struct ALT_PINMUX_IO33CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO33CTRL. */
typedef struct ALT_PINMUX_IO33CTRL_s  ALT_PINMUX_IO33CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO33CTRL register. */
#define ALT_PINMUX_IO33CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO33CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO33CTRL_OFST        0x214

/*
 * Register : HPS Pinmux Control Register 34 - io34ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO34
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO34CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO34CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_RPCDN register field. */
#define ALT_PINMUX_IO34CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_RPCDN register field. */
#define ALT_PINMUX_IO34CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO34CTRL_RPCDN register field. */
#define ALT_PINMUX_IO34CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO34CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO34CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO34CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO34CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO34CTRL_RPCDN register field. */
#define ALT_PINMUX_IO34CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO34CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO34CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO34CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO34
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO34CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO34CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_RPCDP register field. */
#define ALT_PINMUX_IO34CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_RPCDP register field. */
#define ALT_PINMUX_IO34CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO34CTRL_RPCDP register field. */
#define ALT_PINMUX_IO34CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO34CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO34CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO34CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO34CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO34CTRL_RPCDP register field. */
#define ALT_PINMUX_IO34CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO34CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO34CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO34CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO34
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO34CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO34CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO34CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO34CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO34CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO34CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO34CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO34CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO34CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO34CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO34
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO34CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO34CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO34CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO34CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO34CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO34CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO34CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO34CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO34CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO34CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO34
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO34CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO34CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO34CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO34CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO34CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO34CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO34CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO34CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO34. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO34CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO34CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO34CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO34CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO34CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO34CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO34CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO34CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO34CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO34CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO34. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO34CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO34CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO34CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO34CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO34CTRL.
 */
struct ALT_PINMUX_IO34CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO34CTRL. */
typedef struct ALT_PINMUX_IO34CTRL_s  ALT_PINMUX_IO34CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO34CTRL register. */
#define ALT_PINMUX_IO34CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO34CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO34CTRL_OFST        0x218

/*
 * Register : HPS Pinmux Control Register 35 - io35ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO35
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO35CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO35CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_RPCDN register field. */
#define ALT_PINMUX_IO35CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_RPCDN register field. */
#define ALT_PINMUX_IO35CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO35CTRL_RPCDN register field. */
#define ALT_PINMUX_IO35CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO35CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO35CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO35CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO35CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO35CTRL_RPCDN register field. */
#define ALT_PINMUX_IO35CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO35CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO35CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO35CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO35
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO35CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO35CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_RPCDP register field. */
#define ALT_PINMUX_IO35CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_RPCDP register field. */
#define ALT_PINMUX_IO35CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO35CTRL_RPCDP register field. */
#define ALT_PINMUX_IO35CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO35CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO35CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO35CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO35CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO35CTRL_RPCDP register field. */
#define ALT_PINMUX_IO35CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO35CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO35CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO35CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO35
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO35CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO35CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO35CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO35CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO35CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO35CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO35CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO35CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO35CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO35CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO35
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO35CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO35CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO35CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO35CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO35CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO35CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO35CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO35CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO35CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO35CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO35
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO35CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO35CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO35CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO35CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO35CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO35CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO35CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO35CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO35. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO35CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO35CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO35CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO35CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO35CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO35CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO35CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO35CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO35CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO35CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO35. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO35CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO35CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO35CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO35CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO35CTRL.
 */
struct ALT_PINMUX_IO35CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO35CTRL. */
typedef struct ALT_PINMUX_IO35CTRL_s  ALT_PINMUX_IO35CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO35CTRL register. */
#define ALT_PINMUX_IO35CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO35CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO35CTRL_OFST        0x21c

/*
 * Register : HPS Pinmux Control Register 36 - io36ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO36
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO36CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO36CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_RPCDN register field. */
#define ALT_PINMUX_IO36CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_RPCDN register field. */
#define ALT_PINMUX_IO36CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO36CTRL_RPCDN register field. */
#define ALT_PINMUX_IO36CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO36CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO36CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO36CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO36CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO36CTRL_RPCDN register field. */
#define ALT_PINMUX_IO36CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO36CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO36CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO36CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO36
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO36CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO36CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_RPCDP register field. */
#define ALT_PINMUX_IO36CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_RPCDP register field. */
#define ALT_PINMUX_IO36CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO36CTRL_RPCDP register field. */
#define ALT_PINMUX_IO36CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO36CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO36CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO36CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO36CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO36CTRL_RPCDP register field. */
#define ALT_PINMUX_IO36CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO36CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO36CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO36CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO36
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO36CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO36CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO36CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO36CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO36CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO36CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO36CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO36CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO36CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO36CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO36
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO36CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO36CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO36CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO36CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO36CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO36CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO36CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO36CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO36CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO36CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO36
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO36CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO36CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO36CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO36CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO36CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO36CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO36CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO36CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO36. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO36CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO36CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO36CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO36CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO36CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO36CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO36CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO36CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO36CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO36CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO36. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO36CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO36CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO36CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO36CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO36CTRL.
 */
struct ALT_PINMUX_IO36CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO36CTRL. */
typedef struct ALT_PINMUX_IO36CTRL_s  ALT_PINMUX_IO36CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO36CTRL register. */
#define ALT_PINMUX_IO36CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO36CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO36CTRL_OFST        0x220

/*
 * Register : HPS Pinmux Control Register 37 - io37ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO37
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO37CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO37CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_RPCDN register field. */
#define ALT_PINMUX_IO37CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_RPCDN register field. */
#define ALT_PINMUX_IO37CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO37CTRL_RPCDN register field. */
#define ALT_PINMUX_IO37CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO37CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO37CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO37CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO37CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO37CTRL_RPCDN register field. */
#define ALT_PINMUX_IO37CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO37CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO37CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO37CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO37
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO37CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO37CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_RPCDP register field. */
#define ALT_PINMUX_IO37CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_RPCDP register field. */
#define ALT_PINMUX_IO37CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO37CTRL_RPCDP register field. */
#define ALT_PINMUX_IO37CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO37CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO37CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO37CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO37CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO37CTRL_RPCDP register field. */
#define ALT_PINMUX_IO37CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO37CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO37CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO37CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO37
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO37CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO37CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO37CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO37CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO37CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO37CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO37CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO37CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO37CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO37CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO37
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO37CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO37CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO37CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO37CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO37CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO37CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO37CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO37CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO37CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO37CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO37
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO37CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO37CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO37CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO37CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO37CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO37CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO37CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO37CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO37. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO37CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO37CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO37CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO37CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO37CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO37CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO37CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO37CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO37CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO37CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO37. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO37CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO37CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO37CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO37CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO37CTRL.
 */
struct ALT_PINMUX_IO37CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO37CTRL. */
typedef struct ALT_PINMUX_IO37CTRL_s  ALT_PINMUX_IO37CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO37CTRL register. */
#define ALT_PINMUX_IO37CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO37CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO37CTRL_OFST        0x224

/*
 * Register : HPS Pinmux Control Register 38 - io38ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO38
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO38CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO38CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_RPCDN register field. */
#define ALT_PINMUX_IO38CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_RPCDN register field. */
#define ALT_PINMUX_IO38CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO38CTRL_RPCDN register field. */
#define ALT_PINMUX_IO38CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO38CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO38CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO38CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO38CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO38CTRL_RPCDN register field. */
#define ALT_PINMUX_IO38CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO38CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO38CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO38CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO38
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO38CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO38CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_RPCDP register field. */
#define ALT_PINMUX_IO38CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_RPCDP register field. */
#define ALT_PINMUX_IO38CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO38CTRL_RPCDP register field. */
#define ALT_PINMUX_IO38CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO38CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO38CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO38CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO38CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO38CTRL_RPCDP register field. */
#define ALT_PINMUX_IO38CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO38CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO38CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO38CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO38
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO38CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO38CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO38CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO38CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO38CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO38CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO38CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO38CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO38CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO38CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO38
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO38CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO38CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO38CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO38CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO38CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO38CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO38CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO38CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO38CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO38CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO38
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO38CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO38CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO38CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO38CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO38CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO38CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO38CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO38CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO38. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO38CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO38CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO38CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO38CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO38CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO38CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO38CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO38CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO38CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO38CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO38. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO38CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO38CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO38CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO38CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO38CTRL.
 */
struct ALT_PINMUX_IO38CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO38CTRL. */
typedef struct ALT_PINMUX_IO38CTRL_s  ALT_PINMUX_IO38CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO38CTRL register. */
#define ALT_PINMUX_IO38CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO38CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO38CTRL_OFST        0x228

/*
 * Register : HPS Pinmux Control Register 39 - io39ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO39
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO39CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO39CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_RPCDN register field. */
#define ALT_PINMUX_IO39CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_RPCDN register field. */
#define ALT_PINMUX_IO39CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO39CTRL_RPCDN register field. */
#define ALT_PINMUX_IO39CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO39CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO39CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO39CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO39CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO39CTRL_RPCDN register field. */
#define ALT_PINMUX_IO39CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO39CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO39CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO39CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO39
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO39CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO39CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_RPCDP register field. */
#define ALT_PINMUX_IO39CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_RPCDP register field. */
#define ALT_PINMUX_IO39CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO39CTRL_RPCDP register field. */
#define ALT_PINMUX_IO39CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO39CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO39CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO39CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO39CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO39CTRL_RPCDP register field. */
#define ALT_PINMUX_IO39CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO39CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO39CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO39CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO39
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO39CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO39CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO39CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO39CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO39CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO39CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO39CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO39CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO39CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO39CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO39
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO39CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO39CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO39CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO39CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO39CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO39CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO39CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO39CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO39CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO39CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO39
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO39CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO39CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO39CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO39CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO39CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO39CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO39CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO39CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO39. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO39CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO39CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO39CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO39CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO39CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO39CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO39CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO39CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO39CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO39CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO39. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO39CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO39CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO39CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO39CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO39CTRL.
 */
struct ALT_PINMUX_IO39CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO39CTRL. */
typedef struct ALT_PINMUX_IO39CTRL_s  ALT_PINMUX_IO39CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO39CTRL register. */
#define ALT_PINMUX_IO39CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO39CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO39CTRL_OFST        0x22c

/*
 * Register : HPS Pinmux Control Register 40 - io40ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO40
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO40CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO40CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_RPCDN register field. */
#define ALT_PINMUX_IO40CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_RPCDN register field. */
#define ALT_PINMUX_IO40CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO40CTRL_RPCDN register field. */
#define ALT_PINMUX_IO40CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO40CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO40CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO40CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO40CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO40CTRL_RPCDN register field. */
#define ALT_PINMUX_IO40CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO40CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO40CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO40CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO40
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO40CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO40CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_RPCDP register field. */
#define ALT_PINMUX_IO40CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_RPCDP register field. */
#define ALT_PINMUX_IO40CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO40CTRL_RPCDP register field. */
#define ALT_PINMUX_IO40CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO40CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO40CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO40CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO40CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO40CTRL_RPCDP register field. */
#define ALT_PINMUX_IO40CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO40CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO40CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO40CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO40
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO40CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO40CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO40CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO40CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO40CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO40CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO40CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO40CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO40CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO40CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO40
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO40CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO40CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO40CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO40CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO40CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO40CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO40CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO40CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO40CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO40CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO40
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO40CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO40CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO40CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO40CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO40CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO40CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO40CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO40CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO40. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO40CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO40CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO40CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO40CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO40CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO40CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO40CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO40CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO40CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO40CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO40. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO40CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO40CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO40CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO40CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO40CTRL.
 */
struct ALT_PINMUX_IO40CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO40CTRL. */
typedef struct ALT_PINMUX_IO40CTRL_s  ALT_PINMUX_IO40CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO40CTRL register. */
#define ALT_PINMUX_IO40CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO40CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO40CTRL_OFST        0x230

/*
 * Register : HPS Pinmux Control Register 41 - io41ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO41
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO41CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO41CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_RPCDN register field. */
#define ALT_PINMUX_IO41CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_RPCDN register field. */
#define ALT_PINMUX_IO41CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO41CTRL_RPCDN register field. */
#define ALT_PINMUX_IO41CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO41CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO41CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO41CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO41CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO41CTRL_RPCDN register field. */
#define ALT_PINMUX_IO41CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO41CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO41CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO41CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO41
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO41CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO41CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_RPCDP register field. */
#define ALT_PINMUX_IO41CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_RPCDP register field. */
#define ALT_PINMUX_IO41CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO41CTRL_RPCDP register field. */
#define ALT_PINMUX_IO41CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO41CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO41CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO41CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO41CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO41CTRL_RPCDP register field. */
#define ALT_PINMUX_IO41CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO41CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO41CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO41CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO41
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO41CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO41CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO41CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO41CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO41CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO41CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO41CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO41CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO41CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO41CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO41
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO41CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO41CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO41CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO41CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO41CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO41CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO41CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO41CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO41CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO41CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO41
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO41CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO41CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO41CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO41CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO41CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO41CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO41CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO41CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO41. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO41CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO41CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO41CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO41CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO41CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO41CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO41CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO41CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO41CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO41CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO41. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO41CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO41CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO41CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO41CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO41CTRL.
 */
struct ALT_PINMUX_IO41CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO41CTRL. */
typedef struct ALT_PINMUX_IO41CTRL_s  ALT_PINMUX_IO41CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO41CTRL register. */
#define ALT_PINMUX_IO41CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO41CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO41CTRL_OFST        0x234

/*
 * Register : HPS Pinmux Control Register 42 - io42ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO42
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO42CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO42CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_RPCDN register field. */
#define ALT_PINMUX_IO42CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_RPCDN register field. */
#define ALT_PINMUX_IO42CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO42CTRL_RPCDN register field. */
#define ALT_PINMUX_IO42CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO42CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO42CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO42CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO42CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO42CTRL_RPCDN register field. */
#define ALT_PINMUX_IO42CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO42CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO42CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO42CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO42
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO42CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO42CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_RPCDP register field. */
#define ALT_PINMUX_IO42CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_RPCDP register field. */
#define ALT_PINMUX_IO42CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO42CTRL_RPCDP register field. */
#define ALT_PINMUX_IO42CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO42CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO42CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO42CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO42CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO42CTRL_RPCDP register field. */
#define ALT_PINMUX_IO42CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO42CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO42CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO42CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO42
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO42CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO42CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO42CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO42CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO42CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO42CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO42CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO42CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO42CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO42CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO42
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO42CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO42CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO42CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO42CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO42CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO42CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO42CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO42CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO42CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO42CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO42
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO42CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO42CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO42CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO42CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO42CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO42CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO42CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO42CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO42. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO42CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO42CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO42CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO42CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO42CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO42CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO42CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO42CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO42CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO42CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO42. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO42CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO42CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO42CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO42CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO42CTRL.
 */
struct ALT_PINMUX_IO42CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO42CTRL. */
typedef struct ALT_PINMUX_IO42CTRL_s  ALT_PINMUX_IO42CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO42CTRL register. */
#define ALT_PINMUX_IO42CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO42CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO42CTRL_OFST        0x238

/*
 * Register : HPS Pinmux Control Register 43 - io43ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO43
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO43CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO43CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_RPCDN register field. */
#define ALT_PINMUX_IO43CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_RPCDN register field. */
#define ALT_PINMUX_IO43CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO43CTRL_RPCDN register field. */
#define ALT_PINMUX_IO43CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO43CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO43CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO43CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO43CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO43CTRL_RPCDN register field. */
#define ALT_PINMUX_IO43CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO43CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO43CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO43CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO43
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO43CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO43CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_RPCDP register field. */
#define ALT_PINMUX_IO43CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_RPCDP register field. */
#define ALT_PINMUX_IO43CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO43CTRL_RPCDP register field. */
#define ALT_PINMUX_IO43CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO43CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO43CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO43CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO43CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO43CTRL_RPCDP register field. */
#define ALT_PINMUX_IO43CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO43CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO43CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO43CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO43
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO43CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO43CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO43CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO43CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO43CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO43CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO43CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO43CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO43CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO43CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO43
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO43CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO43CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO43CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO43CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO43CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO43CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO43CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO43CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO43CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO43CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO43
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO43CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO43CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO43CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO43CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO43CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO43CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO43CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO43CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO43. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO43CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO43CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO43CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO43CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO43CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO43CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO43CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO43CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO43CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO43CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO43. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO43CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO43CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO43CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO43CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO43CTRL.
 */
struct ALT_PINMUX_IO43CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO43CTRL. */
typedef struct ALT_PINMUX_IO43CTRL_s  ALT_PINMUX_IO43CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO43CTRL register. */
#define ALT_PINMUX_IO43CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO43CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO43CTRL_OFST        0x23c

/*
 * Register : HPS Pinmux Control Register 44 - io44ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO44
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO44CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO44CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_RPCDN register field. */
#define ALT_PINMUX_IO44CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_RPCDN register field. */
#define ALT_PINMUX_IO44CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO44CTRL_RPCDN register field. */
#define ALT_PINMUX_IO44CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO44CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO44CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO44CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO44CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO44CTRL_RPCDN register field. */
#define ALT_PINMUX_IO44CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO44CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO44CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO44CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO44
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO44CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO44CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_RPCDP register field. */
#define ALT_PINMUX_IO44CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_RPCDP register field. */
#define ALT_PINMUX_IO44CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO44CTRL_RPCDP register field. */
#define ALT_PINMUX_IO44CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO44CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO44CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO44CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO44CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO44CTRL_RPCDP register field. */
#define ALT_PINMUX_IO44CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO44CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO44CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO44CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO44
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO44CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO44CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO44CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO44CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO44CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO44CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO44CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO44CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO44CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO44CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO44
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO44CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO44CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO44CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO44CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO44CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO44CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO44CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO44CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO44CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO44CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO44
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO44CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO44CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO44CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO44CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO44CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO44CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO44CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO44CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO44. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO44CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO44CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO44CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO44CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO44CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO44CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO44CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO44CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO44CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO44CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO44. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO44CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO44CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO44CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO44CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO44CTRL.
 */
struct ALT_PINMUX_IO44CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO44CTRL. */
typedef struct ALT_PINMUX_IO44CTRL_s  ALT_PINMUX_IO44CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO44CTRL register. */
#define ALT_PINMUX_IO44CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO44CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO44CTRL_OFST        0x240

/*
 * Register : HPS Pinmux Control Register 45 - io45ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO45
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO45CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO45CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_RPCDN register field. */
#define ALT_PINMUX_IO45CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_RPCDN register field. */
#define ALT_PINMUX_IO45CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO45CTRL_RPCDN register field. */
#define ALT_PINMUX_IO45CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO45CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO45CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO45CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO45CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO45CTRL_RPCDN register field. */
#define ALT_PINMUX_IO45CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO45CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO45CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO45CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO45
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO45CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO45CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_RPCDP register field. */
#define ALT_PINMUX_IO45CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_RPCDP register field. */
#define ALT_PINMUX_IO45CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO45CTRL_RPCDP register field. */
#define ALT_PINMUX_IO45CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO45CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO45CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO45CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO45CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO45CTRL_RPCDP register field. */
#define ALT_PINMUX_IO45CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO45CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO45CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO45CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO45
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO45CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO45CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO45CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO45CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO45CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO45CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO45CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO45CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO45CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO45CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO45
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO45CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO45CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO45CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO45CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO45CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO45CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO45CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO45CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO45CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO45CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO45
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO45CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO45CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO45CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO45CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO45CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO45CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO45CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO45CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO45. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO45CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO45CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO45CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO45CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO45CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO45CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO45CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO45CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO45CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO45CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO45. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO45CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO45CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO45CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO45CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO45CTRL.
 */
struct ALT_PINMUX_IO45CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO45CTRL. */
typedef struct ALT_PINMUX_IO45CTRL_s  ALT_PINMUX_IO45CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO45CTRL register. */
#define ALT_PINMUX_IO45CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO45CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO45CTRL_OFST        0x244

/*
 * Register : HPS Pinmux Control Register 46 - io46ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO46
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO46CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO46CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_RPCDN register field. */
#define ALT_PINMUX_IO46CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_RPCDN register field. */
#define ALT_PINMUX_IO46CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO46CTRL_RPCDN register field. */
#define ALT_PINMUX_IO46CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO46CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO46CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO46CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO46CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO46CTRL_RPCDN register field. */
#define ALT_PINMUX_IO46CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO46CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO46CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO46CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO46
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO46CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO46CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_RPCDP register field. */
#define ALT_PINMUX_IO46CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_RPCDP register field. */
#define ALT_PINMUX_IO46CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO46CTRL_RPCDP register field. */
#define ALT_PINMUX_IO46CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO46CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO46CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO46CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO46CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO46CTRL_RPCDP register field. */
#define ALT_PINMUX_IO46CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO46CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO46CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO46CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO46
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO46CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO46CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO46CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO46CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO46CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO46CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO46CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO46CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO46CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO46CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO46
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO46CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO46CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO46CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO46CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO46CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO46CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO46CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO46CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO46CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO46CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO46
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO46CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO46CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO46CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO46CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO46CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO46CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO46CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO46CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO46. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO46CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO46CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO46CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO46CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO46CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO46CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO46CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO46CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO46CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO46CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO46. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO46CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO46CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO46CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO46CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO46CTRL.
 */
struct ALT_PINMUX_IO46CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO46CTRL. */
typedef struct ALT_PINMUX_IO46CTRL_s  ALT_PINMUX_IO46CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO46CTRL register. */
#define ALT_PINMUX_IO46CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO46CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO46CTRL_OFST        0x248

/*
 * Register : HPS Pinmux Control Register 47 - io47ctrl
 * 
 * HPS Pinmux Control Value
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [7:0]   | RW     | 0x38  | Enable     
 *  [15:8]  | RW     | 0x2c  | Enable     
 *  [16]    | RW     | 0x0   | Enable     
 *  [17]    | RW     | 0x0   | Enable     
 *  [18]    | RW     | 0x0   | Enable     
 *  [20:19] | RW     | 0x2   | Enable     
 *  [22:21] | RW     | 0x2   | Enable     
 *  [31:23] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - rpcdn
 * 
 * Sets control value for pull down drive strength for IO47
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description             
 * :----------------------------------------|:------|:-------------------------
 *  ALT_PINMUX_IO47CTRL_RPCDN_E_PD_DRV_STRG | 0x38  | Pull Down drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_RPCDN
 * 
 * Pull Down drive strength
 */
#define ALT_PINMUX_IO47CTRL_RPCDN_E_PD_DRV_STRG 0x38

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_RPCDN register field. */
#define ALT_PINMUX_IO47CTRL_RPCDN_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_RPCDN register field. */
#define ALT_PINMUX_IO47CTRL_RPCDN_MSB        7
/* The width in bits of the ALT_PINMUX_IO47CTRL_RPCDN register field. */
#define ALT_PINMUX_IO47CTRL_RPCDN_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO47CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO47CTRL_RPCDN_SET_MSK    0x000000ff
/* The mask used to clear the ALT_PINMUX_IO47CTRL_RPCDN register field value. */
#define ALT_PINMUX_IO47CTRL_RPCDN_CLR_MSK    0xffffff00
/* The reset value of the ALT_PINMUX_IO47CTRL_RPCDN register field. */
#define ALT_PINMUX_IO47CTRL_RPCDN_RESET      0x38
/* Extracts the ALT_PINMUX_IO47CTRL_RPCDN field value from a register. */
#define ALT_PINMUX_IO47CTRL_RPCDN_GET(value) (((value) & 0x000000ff) >> 0)
/* Produces a ALT_PINMUX_IO47CTRL_RPCDN register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_RPCDN_SET(value) (((value) << 0) & 0x000000ff)

/*
 * Field : Enable - rpcdp
 * 
 * Sets control value for pull up drive strength for IO47
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description           
 * :----------------------------------------|:------|:-----------------------
 *  ALT_PINMUX_IO47CTRL_RPCDP_E_PU_DRV_STRG | 0x2C  | Pull Up drive strength
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_RPCDP
 * 
 * Pull Up drive strength
 */
#define ALT_PINMUX_IO47CTRL_RPCDP_E_PU_DRV_STRG 0x2C

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_RPCDP register field. */
#define ALT_PINMUX_IO47CTRL_RPCDP_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_RPCDP register field. */
#define ALT_PINMUX_IO47CTRL_RPCDP_MSB        15
/* The width in bits of the ALT_PINMUX_IO47CTRL_RPCDP register field. */
#define ALT_PINMUX_IO47CTRL_RPCDP_WIDTH      8
/* The mask used to set the ALT_PINMUX_IO47CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO47CTRL_RPCDP_SET_MSK    0x0000ff00
/* The mask used to clear the ALT_PINMUX_IO47CTRL_RPCDP register field value. */
#define ALT_PINMUX_IO47CTRL_RPCDP_CLR_MSK    0xffff00ff
/* The reset value of the ALT_PINMUX_IO47CTRL_RPCDP register field. */
#define ALT_PINMUX_IO47CTRL_RPCDP_RESET      0x2c
/* Extracts the ALT_PINMUX_IO47CTRL_RPCDP field value from a register. */
#define ALT_PINMUX_IO47CTRL_RPCDP_GET(value) (((value) & 0x0000ff00) >> 8)
/* Produces a ALT_PINMUX_IO47CTRL_RPCDP register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_RPCDP_SET(value) (((value) << 8) & 0x0000ff00)

/*
 * Field : Enable - rslewn
 * 
 * Sets control value for pull down slew for IO47
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description                 
 * :----------------------------------|:------|:-----------------------------
 *  ALT_PINMUX_IO47CTRL_RSLEWN_E_FAST | 0x0   | Fast Slew rate for pull down
 *  ALT_PINMUX_IO47CTRL_RSLEWN_E_SLOW | 0x1   | Slow Slew rate for pull down
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_RSLEWN
 * 
 * Fast Slew rate for pull down
 */
#define ALT_PINMUX_IO47CTRL_RSLEWN_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_RSLEWN
 * 
 * Slow Slew rate for pull down
 */
#define ALT_PINMUX_IO47CTRL_RSLEWN_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_LSB        16
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_MSB        16
/* The width in bits of the ALT_PINMUX_IO47CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO47CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_SET_MSK    0x00010000
/* The mask used to clear the ALT_PINMUX_IO47CTRL_RSLEWN register field value. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_CLR_MSK    0xfffeffff
/* The reset value of the ALT_PINMUX_IO47CTRL_RSLEWN register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_RESET      0x0
/* Extracts the ALT_PINMUX_IO47CTRL_RSLEWN field value from a register. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_GET(value) (((value) & 0x00010000) >> 16)
/* Produces a ALT_PINMUX_IO47CTRL_RSLEWN register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_RSLEWN_SET(value) (((value) << 16) & 0x00010000)

/*
 * Field : Enable - rslewp
 * 
 * Sets control value for pull up slew for IO47
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description               
 * :----------------------------------|:------|:---------------------------
 *  ALT_PINMUX_IO47CTRL_RSLEWP_E_FAST | 0x0   | Fast Slew rate for pull up
 *  ALT_PINMUX_IO47CTRL_RSLEWP_E_SLOW | 0x1   | Slow Slew rate for pull up
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_RSLEWP
 * 
 * Fast Slew rate for pull up
 */
#define ALT_PINMUX_IO47CTRL_RSLEWP_E_FAST   0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_RSLEWP
 * 
 * Slow Slew rate for pull up
 */
#define ALT_PINMUX_IO47CTRL_RSLEWP_E_SLOW   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_LSB        17
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_MSB        17
/* The width in bits of the ALT_PINMUX_IO47CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO47CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_SET_MSK    0x00020000
/* The mask used to clear the ALT_PINMUX_IO47CTRL_RSLEWP register field value. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_CLR_MSK    0xfffdffff
/* The reset value of the ALT_PINMUX_IO47CTRL_RSLEWP register field. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_RESET      0x0
/* Extracts the ALT_PINMUX_IO47CTRL_RSLEWP field value from a register. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_GET(value) (((value) & 0x00020000) >> 17)
/* Produces a ALT_PINMUX_IO47CTRL_RSLEWP register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_RSLEWP_SET(value) (((value) << 17) & 0x00020000)

/*
 * Field : Enable - ropdrain
 * 
 * Sets control value for open drain for IO47
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                    | Value | Description        
 * :----------------------------------------|:------|:--------------------
 *  ALT_PINMUX_IO47CTRL_ROPDRAIN_E_DISABLED | 0x0   | Disables Open Drain
 *  ALT_PINMUX_IO47CTRL_ROPDRAIN_E_ENABLED  | 0x1   | Enables Open Drain 
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_ROPDRAIN
 * 
 * Disables Open Drain
 */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_E_DISABLED 0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_ROPDRAIN
 * 
 * Enables Open Drain
 */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_E_ENABLED  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_LSB        18
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_MSB        18
/* The width in bits of the ALT_PINMUX_IO47CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_WIDTH      1
/* The mask used to set the ALT_PINMUX_IO47CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_SET_MSK    0x00040000
/* The mask used to clear the ALT_PINMUX_IO47CTRL_ROPDRAIN register field value. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_CLR_MSK    0xfffbffff
/* The reset value of the ALT_PINMUX_IO47CTRL_ROPDRAIN register field. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_RESET      0x0
/* Extracts the ALT_PINMUX_IO47CTRL_ROPDRAIN field value from a register. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_GET(value) (((value) & 0x00040000) >> 18)
/* Produces a ALT_PINMUX_IO47CTRL_ROPDRAIN register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_ROPDRAIN_SET(value) (((value) << 18) & 0x00040000)

/*
 * Field : Enable - input_sel
 * 
 * Sets control value to select the input source for IO47. Bit[20] selects
 * schmitt_en and bit[19] is to select between sstl_en and ttl_en. DEFAULT_SCHMITT
 * and SCHMITT are the same and sets schmitt_en. DEFAULT_SCHMITT is the default
 * reset value.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                            | Value | Description                                     
 * :------------------------------------------------|:------|:-------------------------------------------------
 *  ALT_PINMUX_IO47CTRL_INPUT_SEL_E_TTL             | 0x0   | Sets ttl enable.Selects TTL as the input source.
 *  ALT_PINMUX_IO47CTRL_INPUT_SEL_E_STTL            | 0x1   | Sets sstl enable. Selects STTL as the input     
 * :                                                |       | source.                                         
 *  ALT_PINMUX_IO47CTRL_INPUT_SEL_E_DEFAULT_SCHMITT | 0x2   | Sets schmitt enable This is also the default    
 * :                                                |       | reset value.                                    
 *  ALT_PINMUX_IO47CTRL_INPUT_SEL_E_SCHMITT         | 0x3   | Sets schmitt enable.                            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_INPUT_SEL
 * 
 * Sets ttl enable.Selects TTL as the input source.
 */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_E_TTL             0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_INPUT_SEL
 * 
 * Sets sstl enable. Selects STTL as the input source.
 */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_E_STTL            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_INPUT_SEL
 * 
 * Sets schmitt enable This is also the default reset value.
 */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_E_DEFAULT_SCHMITT 0x2
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_INPUT_SEL
 * 
 * Sets schmitt enable.
 */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_E_SCHMITT         0x3

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_LSB        19
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_MSB        20
/* The width in bits of the ALT_PINMUX_IO47CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO47CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_SET_MSK    0x00180000
/* The mask used to clear the ALT_PINMUX_IO47CTRL_INPUT_SEL register field value. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_CLR_MSK    0xffe7ffff
/* The reset value of the ALT_PINMUX_IO47CTRL_INPUT_SEL register field. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_RESET      0x2
/* Extracts the ALT_PINMUX_IO47CTRL_INPUT_SEL field value from a register. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_GET(value) (((value) & 0x00180000) >> 19)
/* Produces a ALT_PINMUX_IO47CTRL_INPUT_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_INPUT_SEL_SET(value) (((value) << 19) & 0x00180000)

/*
 * Field : Enable - wkpull_up_dn
 * 
 * Sets control value for weak pull up and weak pull down for IO47. Bit[22] is for
 * wkpullup and bit[21] is for wkpulldown.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description            
 * :-------------------------------------------|:------|:------------------------
 *  ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_E_PULL_DN | 0x1   | Enables Weak Pull Down.
 *  ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_E_PULL_UP | 0x2   | Enables Weak Pull Up.  
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Down.
 */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_E_PULL_DN  0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO47CTRL_WKPULL_UP_DN
 * 
 * Enables Weak Pull Up.
 */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_E_PULL_UP  0x2

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_LSB        21
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_MSB        22
/* The width in bits of the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_WIDTH      2
/* The mask used to set the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_SET_MSK    0x00600000
/* The mask used to clear the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field value. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_CLR_MSK    0xff9fffff
/* The reset value of the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_RESET      0x2
/* Extracts the ALT_PINMUX_IO47CTRL_WKPULL_UP_DN field value from a register. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_GET(value) (((value) & 0x00600000) >> 21)
/* Produces a ALT_PINMUX_IO47CTRL_WKPULL_UP_DN register field value suitable for setting the register. */
#define ALT_PINMUX_IO47CTRL_WKPULL_UP_DN_SET(value) (((value) << 21) & 0x00600000)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO47CTRL.
 */
struct ALT_PINMUX_IO47CTRL_s
{
    volatile uint32_t  rpcdn        :  8;  /* Enable */
    volatile uint32_t  rpcdp        :  8;  /* Enable */
    volatile uint32_t  rslewn       :  1;  /* Enable */
    volatile uint32_t  rslewp       :  1;  /* Enable */
    volatile uint32_t  ropdrain     :  1;  /* Enable */
    volatile uint32_t  input_sel    :  2;  /* Enable */
    volatile uint32_t  wkpull_up_dn :  2;  /* Enable */
    uint32_t                        :  9;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO47CTRL. */
typedef struct ALT_PINMUX_IO47CTRL_s  ALT_PINMUX_IO47CTRL_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO47CTRL register. */
#define ALT_PINMUX_IO47CTRL_RESET       0x00502c38
/* The byte offset of the ALT_PINMUX_IO47CTRL register from the beginning of the component. */
#define ALT_PINMUX_IO47CTRL_OFST        0x24c

/*
 * Register : Register for FPGA Interface for EMAC0 - pinmux_emac0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for EMAC0 signals. NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for EMAC0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL
 * 
 * EMAC0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL
 * 
 * EMAC0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_EMAC0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_EMAC0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_EMAC0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_EMAC0_USEFPGA_s  ALT_PINMUX_PINMUX_EMAC0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_EMAC0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_EMAC0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_EMAC0_USEFPGA_OFST        0x300

/*
 * Register : Register for FPGA Interface for EMAC1 - pinmux_emac1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for EMAC1 signals.   NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for EMAC1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL
 * 
 * EMAC1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL
 * 
 * EMAC1 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_EMAC1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_EMAC1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_EMAC1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_EMAC1_USEFPGA_s  ALT_PINMUX_PINMUX_EMAC1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_EMAC1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_EMAC1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_EMAC1_USEFPGA_OFST        0x304

/*
 * Register : Register for FPGA Interface for EMAC2 - pinmux_emac2_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for EMAC2 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for EMAC2.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL
 * 
 * EMAC2 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL
 * 
 * EMAC2 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_EMAC2_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_EMAC2_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_EMAC2_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_EMAC2_USEFPGA_s  ALT_PINMUX_PINMUX_EMAC2_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_EMAC2_USEFPGA register. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_EMAC2_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_EMAC2_USEFPGA_OFST        0x308

/*
 * Register : Register for FPGA Interface for I2C0 - pinmux_i2c0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for I2C0 signals.
 * 
 * NOTE: These registers should not be modified after IO configuration.There is no
 * support for dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for I2C0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description
 * :------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL
 * 
 * I2C0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_E_IO     0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL
 * 
 * I2C0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_E_FPGA   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_I2C0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_I2C0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_I2C0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_I2C0_USEFPGA_s  ALT_PINMUX_PINMUX_I2C0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_I2C0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_I2C0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_I2C0_USEFPGA_OFST        0x30c

/*
 * Register : Register for FPGA Interface for I2C1 - pinmux_i2c1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for I2C1 signals.
 * 
 * NOTE: These registers should not be modified after IO configuration.There is no
 * support for dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for I2C1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description
 * :------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL
 * 
 * I2C1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_E_IO     0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL
 * 
 * I2C1uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_E_FPGA   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_I2C1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_I2C1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_I2C1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_I2C1_USEFPGA_s  ALT_PINMUX_PINMUX_I2C1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_I2C1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_I2C1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_I2C1_USEFPGA_OFST        0x310

/*
 * Register : Register for FPGA Interface for I2C_EMAC0 - pinmux_i2c_emac0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for I2C_EMAC0 signals.   NOTE:
 * These registers should not be modified after IO configuration.There is no
 * support for dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for I2C_EMAC0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description
 * :-----------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL
 * 
 * I2C_EMAC0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL
 * 
 * I2C_EMAC0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_s  ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_OFST        0x314

/*
 * Register : Register for FPGA Interface for I2C_EMAC1 - pinmux_i2c_emac1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for I2C_EMAC1 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for I2C_EMAC1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description
 * :-----------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL
 * 
 * I2C_EMAC1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL
 * 
 * I2C_EMAC1uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_s  ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_OFST        0x318

/*
 * Register : Register for FPGA Interface for I2C_EMAC2 - pinmux_i2c_emac2_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for I2C_EMAC2 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for I2C_EMAC2.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                           | Value | Description
 * :-----------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL
 * 
 * I2C_EMAC2 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL
 * 
 * I2C_EMAC2uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_s  ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA register. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_OFST        0x31c

/*
 * Register : Register for FPGA Interface for NAND - pinmux_nand_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for NAND signals. NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for NAND.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description
 * :------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL
 * 
 * NAND uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_E_IO     0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL
 * 
 * NAND uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_E_FPGA   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_NAND_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_NAND_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_NAND_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_NAND_USEFPGA_s  ALT_PINMUX_PINMUX_NAND_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_NAND_USEFPGA register. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_NAND_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_NAND_USEFPGA_OFST        0x320

/*
 * Register : Register for FPGA Interface for SPIM0 - pinmux_spim0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for SPIM0 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for SPIM0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL
 * 
 * SPIM0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL
 * 
 * SPIM0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_SPIM0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_SPIM0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_SPIM0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_SPIM0_USEFPGA_s  ALT_PINMUX_PINMUX_SPIM0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_SPIM0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_SPIM0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_SPIM0_USEFPGA_OFST        0x328

/*
 * Register : Register for FPGA Interface for SPIM1 - pinmux_spim1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for SPIM1 signals.
 * 
 * NOTE: These registers should not be modified after IO configuration.There is no
 * support for dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for SPIM1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL
 * 
 * SPIM1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL
 * 
 * SPIM1uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_SPIM1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_SPIM1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_SPIM1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_SPIM1_USEFPGA_s  ALT_PINMUX_PINMUX_SPIM1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_SPIM1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_SPIM1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_SPIM1_USEFPGA_OFST        0x32c

/*
 * Register : Register for FPGA Interface for SPIS0 - pinmux_spis0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for SPIS0 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for SPIS0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL
 * 
 * SPIS0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL
 * 
 * SPIS0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_SPIS0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_SPIS0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_SPIS0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_SPIS0_USEFPGA_s  ALT_PINMUX_PINMUX_SPIS0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_SPIS0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_SPIS0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_SPIS0_USEFPGA_OFST        0x330

/*
 * Register : Register for FPGA Interface for SPIS1 - pinmux_spis1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for SPIS1 signals.   NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for SPIS1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL
 * 
 * SPIS1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL
 * 
 * SPIS1uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_SPIS1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_SPIS1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_SPIS1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_SPIS1_USEFPGA_s  ALT_PINMUX_PINMUX_SPIS1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_SPIS1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_SPIS1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_SPIS1_USEFPGA_OFST        0x334

/*
 * Register : Register for FPGA Interface for UART0 - pinmux_uart0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for UART0 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for UART0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL
 * 
 * UART0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL
 * 
 * UART0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_UART0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_UART0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_UART0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_UART0_USEFPGA_s  ALT_PINMUX_PINMUX_UART0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_UART0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_UART0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_UART0_USEFPGA_OFST        0x338

/*
 * Register : Register for FPGA Interface for UART1 - pinmux_uart1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for UART1 signals. NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for UART1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL
 * 
 * UART1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL
 * 
 * UART1uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_UART1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_UART1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_UART1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_UART1_USEFPGA_s  ALT_PINMUX_PINMUX_UART1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_UART1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_UART1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_UART1_USEFPGA_OFST        0x33c

/*
 * Register : Register for FPGA Interface for MDIO0 - pinmux_mdio0_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for MDIO0 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for MDIO0.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL
 * 
 * MDIO0 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL
 * 
 * MDIO0 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_MDIO0_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_MDIO0_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_MDIO0_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_MDIO0_USEFPGA_s  ALT_PINMUX_PINMUX_MDIO0_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_MDIO0_USEFPGA register. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_MDIO0_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_MDIO0_USEFPGA_OFST        0x340

/*
 * Register : Register for FPGA Interface for MDIO1 - pinmux_mdio1_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for MDIO1 signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for MDIO1.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL
 * 
 * MDIO1 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL
 * 
 * MDIO1uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_MDIO1_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_MDIO1_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_MDIO1_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_MDIO1_USEFPGA_s  ALT_PINMUX_PINMUX_MDIO1_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_MDIO1_USEFPGA register. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_MDIO1_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_MDIO1_USEFPGA_OFST        0x344

/*
 * Register : Register for FPGA Interface for MDIO2 - pinmux_mdio2_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for MDIO2 signals. NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for MDIO2.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL
 * 
 * MDIO2 uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL
 * 
 * MDIO2 uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_MDIO2_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_MDIO2_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_MDIO2_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_MDIO2_USEFPGA_s  ALT_PINMUX_PINMUX_MDIO2_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_MDIO2_USEFPGA register. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_MDIO2_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_MDIO2_USEFPGA_OFST        0x348

/*
 * Register : Register for FPGA Interface for JTAG - pinmux_jtag_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for JTAG signals.            NOTE:
 * These registers should not be modified after IO configuration.There is no
 * support for dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for JTAG.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                      | Value | Description
 * :------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL
 * 
 * JTAG uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_E_IO     0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL
 * 
 * JTAG uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_E_FPGA   0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_JTAG_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_JTAG_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_JTAG_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_JTAG_USEFPGA_s  ALT_PINMUX_PINMUX_JTAG_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_JTAG_USEFPGA register. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_JTAG_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_JTAG_USEFPGA_OFST        0x350

/*
 * Register : Register for FPGA Interface for SDMMC - pinmux_sdmmc_usefpga
 * 
 * Selection between HPS Pin and FPGA Interface for SDMMC signals.  NOTE: These
 * registers should not be modified after IO configuration.There is no support for
 * dynamically changing the Pin Mux selections.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description
 * :-------|:-------|:------|:------------
 *  [0]    | RW     | 0x0   | Enable     
 *  [31:1] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - sel
 * 
 * Select connection for SDMMC.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                       | Value | Description
 * :-------------------------------------------|:------|:------------
 *  ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_E_IO   | 0x0   |            
 *  ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_E_FPGA | 0x1   |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL
 * 
 * SDMMC uses HPS IO Pins.
 */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_E_IO    0x0
/*
 * Enumerated value for register field ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL
 * 
 * SDMMC uses the FPGA Inteface.
 */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_E_FPGA  0x1

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_MSB        0
/* The width in bits of the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_WIDTH      1
/* The mask used to set the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_SET_MSK    0x00000001
/* The mask used to clear the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field value. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_CLR_MSK    0xfffffffe
/* The reset value of the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_RESET      0x0
/* Extracts the ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL field value from a register. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_GET(value) (((value) & 0x00000001) >> 0)
/* Produces a ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL register field value suitable for setting the register. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_SEL_SET(value) (((value) << 0) & 0x00000001)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_PINMUX_SDMMC_USEFPGA.
 */
struct ALT_PINMUX_PINMUX_SDMMC_USEFPGA_s
{
    volatile uint32_t  sel :  1;  /* Enable */
    uint32_t               : 31;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_PINMUX_SDMMC_USEFPGA. */
typedef struct ALT_PINMUX_PINMUX_SDMMC_USEFPGA_s  ALT_PINMUX_PINMUX_SDMMC_USEFPGA_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_PINMUX_SDMMC_USEFPGA register. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_PINMUX_SDMMC_USEFPGA register from the beginning of the component. */
#define ALT_PINMUX_PINMUX_SDMMC_USEFPGA_OFST        0x354

/*
 * Register : HPS OSC CLK SOURCE - hps_osc_clk
 * 
 * The register selects the IO from which we want to route the external oscillator
 * clock to clock manager.The reset value of this register is 3F and this selects
 * value 1'b0. Hence,upon reset none of the IOs are selected and zero is routed to
 * clock manager.
 * 
 * Register Layout
 * 
 *  Bits   | Access | Reset | Description               
 * :-------|:-------|:------|:---------------------------
 *  [5:0]  | RW     | 0x3f  | ALT_PINMUX_HPS_OSC_CLK_REG
 *  [31:6] | ???    | 0x0   | *UNDEFINED*               
 * 
 */
/*
 * Field : reg
 * 
 * The register selects the IO from which we want to route the external oscillator
 * clock to clock manager.The reset value of this register is 3F and this selects
 * value 1'b0. Hence,upon reset none of the IOs are selected and zero is routed to
 * clock manager.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                              | Value | Description
 * :----------------------------------|:------|:------------
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO0  | 0x0   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO1  | 0x1   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO2  | 0x2   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO3  | 0x3   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO4  | 0x4   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO5  | 0x5   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO6  | 0x6   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO7  | 0x7   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO8  | 0x8   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO9  | 0x9   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO10 | 0xa   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO11 | 0xb   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO12 | 0xc   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO13 | 0xd   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO14 | 0xe   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO15 | 0xf   |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO16 | 0x10  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO17 | 0x11  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO18 | 0x12  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO19 | 0x13  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO20 | 0x14  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO21 | 0x15  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO22 | 0x16  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO23 | 0x17  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO24 | 0x18  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO25 | 0x19  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO26 | 0x1a  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO27 | 0x1b  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO28 | 0x1c  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO29 | 0x1d  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO30 | 0x1e  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO31 | 0x1f  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO32 | 0x20  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO33 | 0x21  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO34 | 0x22  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO35 | 0x23  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO36 | 0x24  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO37 | 0x25  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO38 | 0x26  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO39 | 0x27  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO40 | 0x28  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO41 | 0x29  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO42 | 0x2a  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO43 | 0x2b  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO44 | 0x2c  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO45 | 0x2d  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO46 | 0x2e  |            
 *  ALT_PINMUX_HPS_OSC_CLK_REG_E_IO47 | 0x2f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO0
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO0    0x0
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO1
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO1    0x1
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO2
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO2    0x2
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO3
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO3    0x3
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO4
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO4    0x4
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO5
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO5    0x5
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO6
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO6    0x6
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO7
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO7    0x7
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO8
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO8    0x8
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO9
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO9    0x9
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO10
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO10   0xa
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO11
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO11   0xb
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO12
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO12   0xc
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO13
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO13   0xd
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO14
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO14   0xe
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO15
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO15   0xf
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO16
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO16   0x10
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO17
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO17   0x11
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO18
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO18   0x12
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO19
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO19   0x13
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO20
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO20   0x14
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO21
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO21   0x15
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO22
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO22   0x16
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO23
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO23   0x17
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO24
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO24   0x18
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO25
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO25   0x19
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO26
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO26   0x1a
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO27
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO27   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO28
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO28   0x1c
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO29
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO29   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO30
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO30   0x1e
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO31
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO31   0x1f
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO32
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO32   0x20
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO33
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO33   0x21
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO34
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO34   0x22
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO35
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO35   0x23
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO36
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO36   0x24
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO37
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO37   0x25
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO38
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO38   0x26
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO39
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO39   0x27
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO40
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO40   0x28
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO41
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO41   0x29
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO42
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO42   0x2a
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO43
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO43   0x2b
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO44
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO44   0x2c
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO45
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO45   0x2d
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO46
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO46   0x2e
/*
 * Enumerated value for register field ALT_PINMUX_HPS_OSC_CLK_REG
 * 
 * Selects  IO47
 */
#define ALT_PINMUX_HPS_OSC_CLK_REG_E_IO47   0x2f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_HPS_OSC_CLK_REG register field. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_HPS_OSC_CLK_REG register field. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_MSB        5
/* The width in bits of the ALT_PINMUX_HPS_OSC_CLK_REG register field. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_WIDTH      6
/* The mask used to set the ALT_PINMUX_HPS_OSC_CLK_REG register field value. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_SET_MSK    0x0000003f
/* The mask used to clear the ALT_PINMUX_HPS_OSC_CLK_REG register field value. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_CLR_MSK    0xffffffc0
/* The reset value of the ALT_PINMUX_HPS_OSC_CLK_REG register field. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_RESET      0x3f
/* Extracts the ALT_PINMUX_HPS_OSC_CLK_REG field value from a register. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_GET(value) (((value) & 0x0000003f) >> 0)
/* Produces a ALT_PINMUX_HPS_OSC_CLK_REG register field value suitable for setting the register. */
#define ALT_PINMUX_HPS_OSC_CLK_REG_SET(value) (((value) << 0) & 0x0000003f)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_HPS_OSC_CLK.
 */
struct ALT_PINMUX_HPS_OSC_CLK_s
{
    volatile uint32_t  reg :  6;  /* ALT_PINMUX_HPS_OSC_CLK_REG */
    uint32_t               : 26;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_HPS_OSC_CLK. */
typedef struct ALT_PINMUX_HPS_OSC_CLK_s  ALT_PINMUX_HPS_OSC_CLK_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_HPS_OSC_CLK register. */
#define ALT_PINMUX_HPS_OSC_CLK_RESET       0x0000003f
/* The byte offset of the ALT_PINMUX_HPS_OSC_CLK register from the beginning of the component. */
#define ALT_PINMUX_HPS_OSC_CLK_OFST        0x358

/*
 * Register : IO0 DELAY CHAIN - io0_delay
 * 
 * Adds the delay chains in IO0
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO0_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO0_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO0_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO0_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO0_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO0_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO0_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO0_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO0_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO0_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO0_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO0_DELAY.
 */
struct ALT_PINMUX_IO0_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO0_DELAY. */
typedef struct ALT_PINMUX_IO0_DELAY_s  ALT_PINMUX_IO0_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO0_DELAY register. */
#define ALT_PINMUX_IO0_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO0_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO0_DELAY_OFST        0x400

/*
 * Register : IO1 DELAY CHAIN - io1_delay
 * 
 * Adds the delay chains in IO1
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO1_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO1_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO1_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO1_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO1_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO1_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO1_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO1_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO1_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO1_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO1_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO1_DELAY.
 */
struct ALT_PINMUX_IO1_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO1_DELAY. */
typedef struct ALT_PINMUX_IO1_DELAY_s  ALT_PINMUX_IO1_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO1_DELAY register. */
#define ALT_PINMUX_IO1_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO1_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO1_DELAY_OFST        0x404

/*
 * Register : IO2 DELAY CHAIN - io2_delay
 * 
 * Adds the delay chains in IO2
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO2_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO2_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO2_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO2_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO2_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO2_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO2_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO2_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO2_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO2_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO2_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO2_DELAY.
 */
struct ALT_PINMUX_IO2_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO2_DELAY. */
typedef struct ALT_PINMUX_IO2_DELAY_s  ALT_PINMUX_IO2_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO2_DELAY register. */
#define ALT_PINMUX_IO2_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO2_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO2_DELAY_OFST        0x408

/*
 * Register : IO3 DELAY CHAIN - io3_delay
 * 
 * Adds the delay chains in IO3
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO3_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO3_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO3_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO3_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO3_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO3_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO3_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO3_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO3_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO3_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO3_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO3_DELAY.
 */
struct ALT_PINMUX_IO3_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO3_DELAY. */
typedef struct ALT_PINMUX_IO3_DELAY_s  ALT_PINMUX_IO3_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO3_DELAY register. */
#define ALT_PINMUX_IO3_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO3_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO3_DELAY_OFST        0x40c

/*
 * Register : IO4 DELAY CHAIN - io4_delay
 * 
 * Adds the delay chains in IO4
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x0   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x1   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x5   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x7   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xb   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xd   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x11  |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x13  |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x15  |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x19  |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1d  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_CHAIN_DLY          0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1d

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO4_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO4_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO4_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO4_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO4_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO4_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO4_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO4_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO4_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO4_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO4_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO4_DELAY.
 */
struct ALT_PINMUX_IO4_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO4_DELAY. */
typedef struct ALT_PINMUX_IO4_DELAY_s  ALT_PINMUX_IO4_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO4_DELAY register. */
#define ALT_PINMUX_IO4_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO4_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO4_DELAY_OFST        0x410

/*
 * Register : IO5 DELAY CHAIN - io5_delay
 * 
 * Adds the delay chains in IO5
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO5_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO5_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO5_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO5_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO5_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO5_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO5_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO5_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO5_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO5_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO5_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO5_DELAY.
 */
struct ALT_PINMUX_IO5_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO5_DELAY. */
typedef struct ALT_PINMUX_IO5_DELAY_s  ALT_PINMUX_IO5_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO5_DELAY register. */
#define ALT_PINMUX_IO5_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO5_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO5_DELAY_OFST        0x414

/*
 * Register : IO6 DELAY CHAIN - io6_delay
 * 
 * Adds the delay chains in IO6
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO6_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO6_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO6_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO6_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO6_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO6_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO6_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO6_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO6_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO6_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO6_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO6_DELAY.
 */
struct ALT_PINMUX_IO6_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO6_DELAY. */
typedef struct ALT_PINMUX_IO6_DELAY_s  ALT_PINMUX_IO6_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO6_DELAY register. */
#define ALT_PINMUX_IO6_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO6_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO6_DELAY_OFST        0x418

/*
 * Register : IO7 DELAY CHAIN - io7_delay
 * 
 * Adds the delay chains in IO7
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO7_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO7_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO7_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO7_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO7_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO7_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO7_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO7_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO7_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO7_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO7_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO7_DELAY.
 */
struct ALT_PINMUX_IO7_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO7_DELAY. */
typedef struct ALT_PINMUX_IO7_DELAY_s  ALT_PINMUX_IO7_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO7_DELAY register. */
#define ALT_PINMUX_IO7_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO7_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO7_DELAY_OFST        0x41c

/*
 * Register : IO8 DELAY CHAIN - io8_delay
 * 
 * Adds the delay chains in IO8
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO8_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO8_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO8_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO8_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO8_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO8_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO8_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO8_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO8_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO8_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO8_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO8_DELAY.
 */
struct ALT_PINMUX_IO8_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO8_DELAY. */
typedef struct ALT_PINMUX_IO8_DELAY_s  ALT_PINMUX_IO8_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO8_DELAY register. */
#define ALT_PINMUX_IO8_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO8_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO8_DELAY_OFST        0x420

/*
 * Register : IO9 DELAY CHAIN - io9_delay
 * 
 * Adds the delay chains in IO9
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                | Value | Description
 * :----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_CHAIN_DLY          0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY 0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY 0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO9_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO9_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO9_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO9_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO9_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO9_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO9_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO9_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO9_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO9_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO9_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO9_DELAY.
 */
struct ALT_PINMUX_IO9_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO9_DELAY. */
typedef struct ALT_PINMUX_IO9_DELAY_s  ALT_PINMUX_IO9_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO9_DELAY register. */
#define ALT_PINMUX_IO9_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO9_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO9_DELAY_OFST        0x424

/*
 * Register : IO10 DELAY CHAIN - io10_delay
 * 
 * Adds the delay chains in IO10
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO10_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO10_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO10_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO10_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO10_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO10_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO10_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO10_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO10_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO10_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO10_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO10_DELAY.
 */
struct ALT_PINMUX_IO10_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO10_DELAY. */
typedef struct ALT_PINMUX_IO10_DELAY_s  ALT_PINMUX_IO10_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO10_DELAY register. */
#define ALT_PINMUX_IO10_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO10_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO10_DELAY_OFST        0x428

/*
 * Register : IO11 DELAY CHAIN - io11_delay
 * 
 * Adds the delay chains in IO11
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO11_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO11_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO11_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO11_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO11_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO11_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO11_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO11_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO11_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO11_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO11_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO11_DELAY.
 */
struct ALT_PINMUX_IO11_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO11_DELAY. */
typedef struct ALT_PINMUX_IO11_DELAY_s  ALT_PINMUX_IO11_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO11_DELAY register. */
#define ALT_PINMUX_IO11_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO11_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO11_DELAY_OFST        0x42c

/*
 * Register : IO12 DELAY CHAIN - io12_delay
 * 
 * Adds the delay chains in IO12
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO12_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO12_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO12_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO12_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO12_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO12_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO12_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO12_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO12_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO12_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO12_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO12_DELAY.
 */
struct ALT_PINMUX_IO12_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO12_DELAY. */
typedef struct ALT_PINMUX_IO12_DELAY_s  ALT_PINMUX_IO12_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO12_DELAY register. */
#define ALT_PINMUX_IO12_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO12_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO12_DELAY_OFST        0x430

/*
 * Register : IO13 DELAY CHAIN - io13_delay
 * 
 * Adds the delay chains in IO13
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO13_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO13_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO13_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO13_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO13_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO13_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO13_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO13_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO13_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO13_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO13_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO13_DELAY.
 */
struct ALT_PINMUX_IO13_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO13_DELAY. */
typedef struct ALT_PINMUX_IO13_DELAY_s  ALT_PINMUX_IO13_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO13_DELAY register. */
#define ALT_PINMUX_IO13_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO13_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO13_DELAY_OFST        0x434

/*
 * Register : IO14 DELAY CHAIN - io14_delay
 * 
 * Adds the delay chains in IO14
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO14_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO14_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO14_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO14_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO14_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO14_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO14_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO14_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO14_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO14_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO14_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO14_DELAY.
 */
struct ALT_PINMUX_IO14_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO14_DELAY. */
typedef struct ALT_PINMUX_IO14_DELAY_s  ALT_PINMUX_IO14_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO14_DELAY register. */
#define ALT_PINMUX_IO14_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO14_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO14_DELAY_OFST        0x438

/*
 * Register : IO15 DELAY CHAIN - io15_delay
 * 
 * Adds the delay chains in IO15
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO15_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO15_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO15_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO15_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO15_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO15_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO15_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO15_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO15_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO15_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO15_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO15_DELAY.
 */
struct ALT_PINMUX_IO15_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO15_DELAY. */
typedef struct ALT_PINMUX_IO15_DELAY_s  ALT_PINMUX_IO15_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO15_DELAY register. */
#define ALT_PINMUX_IO15_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO15_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO15_DELAY_OFST        0x43c

/*
 * Register : IO16 DELAY CHAIN - io16_delay
 * 
 * Adds the delay chains in IO16
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO16_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO16_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO16_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO16_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO16_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO16_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO16_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO16_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO16_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO16_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO16_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO16_DELAY.
 */
struct ALT_PINMUX_IO16_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO16_DELAY. */
typedef struct ALT_PINMUX_IO16_DELAY_s  ALT_PINMUX_IO16_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO16_DELAY register. */
#define ALT_PINMUX_IO16_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO16_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO16_DELAY_OFST        0x440

/*
 * Register : IO17 DELAY CHAIN - io17_delay
 * 
 * Adds the delay chains in IO17
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO17_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO17_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO17_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO17_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO17_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO17_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO17_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO17_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO17_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO17_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO17_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO17_DELAY.
 */
struct ALT_PINMUX_IO17_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO17_DELAY. */
typedef struct ALT_PINMUX_IO17_DELAY_s  ALT_PINMUX_IO17_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO17_DELAY register. */
#define ALT_PINMUX_IO17_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO17_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO17_DELAY_OFST        0x444

/*
 * Register : IO18 DELAY CHAIN - io18_delay
 * 
 * Adds the delay chains in IO18
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO18_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO18_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO18_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO18_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO18_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO18_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO18_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO18_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO18_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO18_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO18_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO18_DELAY.
 */
struct ALT_PINMUX_IO18_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO18_DELAY. */
typedef struct ALT_PINMUX_IO18_DELAY_s  ALT_PINMUX_IO18_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO18_DELAY register. */
#define ALT_PINMUX_IO18_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO18_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO18_DELAY_OFST        0x448

/*
 * Register : IO19 DELAY CHAIN - io19_delay
 * 
 * Adds the delay chains in IO19
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO19_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO19_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO19_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO19_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO19_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO19_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO19_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO19_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO19_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO19_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO19_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO19_DELAY.
 */
struct ALT_PINMUX_IO19_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO19_DELAY. */
typedef struct ALT_PINMUX_IO19_DELAY_s  ALT_PINMUX_IO19_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO19_DELAY register. */
#define ALT_PINMUX_IO19_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO19_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO19_DELAY_OFST        0x44c

/*
 * Register : IO20 DELAY CHAIN - io20_delay
 * 
 * Adds the delay chains in IO20
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO20_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO20_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO20_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO20_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO20_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO20_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO20_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO20_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO20_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO20_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO20_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO20_DELAY.
 */
struct ALT_PINMUX_IO20_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO20_DELAY. */
typedef struct ALT_PINMUX_IO20_DELAY_s  ALT_PINMUX_IO20_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO20_DELAY register. */
#define ALT_PINMUX_IO20_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO20_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO20_DELAY_OFST        0x450

/*
 * Register : IO21 DELAY CHAIN - io21_delay
 * 
 * Adds the delay chains in IO21
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO21_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO21_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO21_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO21_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO21_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO21_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO21_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO21_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO21_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO21_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO21_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO21_DELAY.
 */
struct ALT_PINMUX_IO21_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO21_DELAY. */
typedef struct ALT_PINMUX_IO21_DELAY_s  ALT_PINMUX_IO21_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO21_DELAY register. */
#define ALT_PINMUX_IO21_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO21_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO21_DELAY_OFST        0x454

/*
 * Register : IO22 DELAY CHAIN - io22_delay
 * 
 * Adds the delay chains in IO
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO22_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO22_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO22_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO22_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO22_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO22_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO22_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO22_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO22_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO22_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO22_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO22_DELAY.
 */
struct ALT_PINMUX_IO22_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO22_DELAY. */
typedef struct ALT_PINMUX_IO22_DELAY_s  ALT_PINMUX_IO22_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO22_DELAY register. */
#define ALT_PINMUX_IO22_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO22_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO22_DELAY_OFST        0x458

/*
 * Register : IO23 DELAY CHAIN - io23_delay
 * 
 * Adds the delay chains in IO23
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO23_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO23_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO23_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO23_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO23_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO23_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO23_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO23_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO23_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO23_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO23_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO23_DELAY.
 */
struct ALT_PINMUX_IO23_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO23_DELAY. */
typedef struct ALT_PINMUX_IO23_DELAY_s  ALT_PINMUX_IO23_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO23_DELAY register. */
#define ALT_PINMUX_IO23_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO23_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO23_DELAY_OFST        0x45c

/*
 * Register : IO24 DELAY CHAIN - io24_delay
 * 
 * Adds the delay chains in IO24
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO24_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO24_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO24_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO24_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO24_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO24_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO24_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO24_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO24_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO24_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO24_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO24_DELAY.
 */
struct ALT_PINMUX_IO24_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO24_DELAY. */
typedef struct ALT_PINMUX_IO24_DELAY_s  ALT_PINMUX_IO24_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO24_DELAY register. */
#define ALT_PINMUX_IO24_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO24_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO24_DELAY_OFST        0x460

/*
 * Register : IO25 DELAY CHAIN - io25_delay
 * 
 * Adds the delay chains in IO25
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO25_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO25_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO25_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO25_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO25_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO25_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO25_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO25_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO25_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO25_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO25_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO25_DELAY.
 */
struct ALT_PINMUX_IO25_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO25_DELAY. */
typedef struct ALT_PINMUX_IO25_DELAY_s  ALT_PINMUX_IO25_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO25_DELAY register. */
#define ALT_PINMUX_IO25_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO25_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO25_DELAY_OFST        0x464

/*
 * Register : IO26 DELAY CHAIN - io26_delay
 * 
 * Adds the delay chains in IO26
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO26_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO26_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO26_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO26_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO26_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO26_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO26_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO26_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO26_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO26_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO26_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO26_DELAY.
 */
struct ALT_PINMUX_IO26_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO26_DELAY. */
typedef struct ALT_PINMUX_IO26_DELAY_s  ALT_PINMUX_IO26_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO26_DELAY register. */
#define ALT_PINMUX_IO26_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO26_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO26_DELAY_OFST        0x468

/*
 * Register : IO27 DELAY CHAIN - io27_delay
 * 
 * Adds the delay chains in IO27
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO27_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO27_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO27_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO27_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO27_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO27_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO27_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO27_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO27_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO27_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO27_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO27_DELAY.
 */
struct ALT_PINMUX_IO27_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO27_DELAY. */
typedef struct ALT_PINMUX_IO27_DELAY_s  ALT_PINMUX_IO27_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO27_DELAY register. */
#define ALT_PINMUX_IO27_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO27_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO27_DELAY_OFST        0x46c

/*
 * Register : IO28 DELAY CHAIN - io28_delay
 * 
 * Adds the delay chains in IO28
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO28_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO28_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO28_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO28_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO28_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO28_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO28_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO28_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO28_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO28_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO28_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO28_DELAY.
 */
struct ALT_PINMUX_IO28_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO28_DELAY. */
typedef struct ALT_PINMUX_IO28_DELAY_s  ALT_PINMUX_IO28_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO28_DELAY register. */
#define ALT_PINMUX_IO28_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO28_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO28_DELAY_OFST        0x470

/*
 * Register : IO29 DELAY CHAIN - io29_delay
 * 
 * Adds the delay chains in IO29
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO29_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO29_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO29_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO29_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO29_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO29_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO29_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO29_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO29_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO29_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO29_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO29_DELAY.
 */
struct ALT_PINMUX_IO29_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO29_DELAY. */
typedef struct ALT_PINMUX_IO29_DELAY_s  ALT_PINMUX_IO29_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO29_DELAY register. */
#define ALT_PINMUX_IO29_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO29_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO29_DELAY_OFST        0x474

/*
 * Register : IO30 DELAY CHAIN - io30_delay
 * 
 * Adds the delay chains in IO30
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO30_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO30_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO30_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO30_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO30_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO30_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO30_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO30_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO30_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO30_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO30_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO30_DELAY.
 */
struct ALT_PINMUX_IO30_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO30_DELAY. */
typedef struct ALT_PINMUX_IO30_DELAY_s  ALT_PINMUX_IO30_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO30_DELAY register. */
#define ALT_PINMUX_IO30_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO30_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO30_DELAY_OFST        0x478

/*
 * Register : IO31 DELAY CHAIN - io31_delay
 * 
 * Adds the delay chains in IO31
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO31_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO31_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO31_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO31_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO31_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO31_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO31_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO31_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO31_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO31_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO31_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO31_DELAY.
 */
struct ALT_PINMUX_IO31_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO31_DELAY. */
typedef struct ALT_PINMUX_IO31_DELAY_s  ALT_PINMUX_IO31_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO31_DELAY register. */
#define ALT_PINMUX_IO31_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO31_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO31_DELAY_OFST        0x47c

/*
 * Register : IO32 DELAY CHAIN - io32_delay
 * 
 * Adds the delay chains in IO32
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO32_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO32_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO32_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO32_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO32_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO32_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO32_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO32_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO32_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO32_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO32_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO32_DELAY.
 */
struct ALT_PINMUX_IO32_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO32_DELAY. */
typedef struct ALT_PINMUX_IO32_DELAY_s  ALT_PINMUX_IO32_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO32_DELAY register. */
#define ALT_PINMUX_IO32_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO32_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO32_DELAY_OFST        0x480

/*
 * Register : IO33 DELAY CHAIN - io33_delay
 * 
 * Adds the delay chains in IO33
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO33_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO33_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO33_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO33_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO33_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO33_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO33_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO33_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO33_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO33_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO33_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO33_DELAY.
 */
struct ALT_PINMUX_IO33_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO33_DELAY. */
typedef struct ALT_PINMUX_IO33_DELAY_s  ALT_PINMUX_IO33_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO33_DELAY register. */
#define ALT_PINMUX_IO33_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO33_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO33_DELAY_OFST        0x484

/*
 * Register : IO34 DELAY CHAIN - io34_delay
 * 
 * Adds the delay chains in IO34
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO34_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO34_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO34_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO34_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO34_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO34_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO34_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO34_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO34_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO34_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO34_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO34_DELAY.
 */
struct ALT_PINMUX_IO34_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO34_DELAY. */
typedef struct ALT_PINMUX_IO34_DELAY_s  ALT_PINMUX_IO34_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO34_DELAY register. */
#define ALT_PINMUX_IO34_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO34_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO34_DELAY_OFST        0x488

/*
 * Register : IO35 DELAY CHAIN - io35_delay
 * 
 * Adds the delay chains in IO35
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO35_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO35_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO35_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO35_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO35_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO35_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO35_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO35_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO35_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO35_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO35_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO35_DELAY.
 */
struct ALT_PINMUX_IO35_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO35_DELAY. */
typedef struct ALT_PINMUX_IO35_DELAY_s  ALT_PINMUX_IO35_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO35_DELAY register. */
#define ALT_PINMUX_IO35_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO35_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO35_DELAY_OFST        0x48c

/*
 * Register : IO36 DELAY CHAIN - io36_delay
 * 
 * Adds the delay chains in IO36
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO36_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO36_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO36_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO36_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO36_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO36_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO36_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO36_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO36_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO36_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO36_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO36_DELAY.
 */
struct ALT_PINMUX_IO36_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO36_DELAY. */
typedef struct ALT_PINMUX_IO36_DELAY_s  ALT_PINMUX_IO36_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO36_DELAY register. */
#define ALT_PINMUX_IO36_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO36_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO36_DELAY_OFST        0x490

/*
 * Register : IO37 DELAY CHAIN - io37_delay
 * 
 * Adds the delay chains in IO37
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO37_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO37_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO37_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO37_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO37_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO37_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO37_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO37_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO37_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO37_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO37_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO37_DELAY.
 */
struct ALT_PINMUX_IO37_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO37_DELAY. */
typedef struct ALT_PINMUX_IO37_DELAY_s  ALT_PINMUX_IO37_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO37_DELAY register. */
#define ALT_PINMUX_IO37_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO37_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO37_DELAY_OFST        0x494

/*
 * Register : IO38 DELAY CHAIN - io38_delay
 * 
 * Adds the delay chains in IO38
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO38_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO38_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO38_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO38_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO38_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO38_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO38_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO38_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO38_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO38_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO38_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO38_DELAY.
 */
struct ALT_PINMUX_IO38_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO38_DELAY. */
typedef struct ALT_PINMUX_IO38_DELAY_s  ALT_PINMUX_IO38_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO38_DELAY register. */
#define ALT_PINMUX_IO38_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO38_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO38_DELAY_OFST        0x498

/*
 * Register : IO39 DELAY CHAIN - io39_delay
 * 
 * Adds the delay chains in IO39
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO39_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO39_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO39_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO39_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO39_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO39_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO39_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO39_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO39_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO39_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO39_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO39_DELAY.
 */
struct ALT_PINMUX_IO39_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO39_DELAY. */
typedef struct ALT_PINMUX_IO39_DELAY_s  ALT_PINMUX_IO39_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO39_DELAY register. */
#define ALT_PINMUX_IO39_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO39_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO39_DELAY_OFST        0x49c

/*
 * Register : IO40 DELAY CHAIN - io40_delay
 * 
 * Adds the delay chains in IO40
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO40_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO40_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO40_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO40_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO40_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO40_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO40_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO40_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO40_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO40_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO40_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO40_DELAY.
 */
struct ALT_PINMUX_IO40_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO40_DELAY. */
typedef struct ALT_PINMUX_IO40_DELAY_s  ALT_PINMUX_IO40_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO40_DELAY register. */
#define ALT_PINMUX_IO40_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO40_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO40_DELAY_OFST        0x500

/*
 * Register : IO41 DELAY CHAIN - io41_delay
 * 
 * Adds the delay chains in IO41
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO41_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO41_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO41_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO41_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO41_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO41_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO41_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO41_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO41_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO41_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO41_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO41_DELAY.
 */
struct ALT_PINMUX_IO41_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO41_DELAY. */
typedef struct ALT_PINMUX_IO41_DELAY_s  ALT_PINMUX_IO41_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO41_DELAY register. */
#define ALT_PINMUX_IO41_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO41_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO41_DELAY_OFST        0x504

/*
 * Register : IO42 DELAY CHAIN - io42_delay
 * 
 * Adds the delay chains in IO42
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO42_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO42_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO42_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO42_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO42_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO42_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO42_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO42_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO42_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO42_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO42_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO42_DELAY.
 */
struct ALT_PINMUX_IO42_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO42_DELAY. */
typedef struct ALT_PINMUX_IO42_DELAY_s  ALT_PINMUX_IO42_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO42_DELAY register. */
#define ALT_PINMUX_IO42_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO42_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO42_DELAY_OFST        0x508

/*
 * Register : IO43 DELAY CHAIN - io43_delay
 * 
 * Adds the delay chains in IO43
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO43_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO43_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO43_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO43_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO43_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO43_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO43_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO43_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO43_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO43_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO43_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO43_DELAY.
 */
struct ALT_PINMUX_IO43_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO43_DELAY. */
typedef struct ALT_PINMUX_IO43_DELAY_s  ALT_PINMUX_IO43_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO43_DELAY register. */
#define ALT_PINMUX_IO43_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO43_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO43_DELAY_OFST        0x50c

/*
 * Register : IO44 DELAY CHAIN - io44_delay
 * 
 * Adds the delay chains in IO44
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO44_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO44_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO44_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO44_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO44_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO44_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO44_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO44_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO44_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO44_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO44_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO44_DELAY.
 */
struct ALT_PINMUX_IO44_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO44_DELAY. */
typedef struct ALT_PINMUX_IO44_DELAY_s  ALT_PINMUX_IO44_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO44_DELAY register. */
#define ALT_PINMUX_IO44_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO44_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO44_DELAY_OFST        0x510

/*
 * Register : IO45 DELAY CHAIN - io45_delay
 * 
 * Adds the delay chains in IO45
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO45_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO45_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO45_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO45_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO45_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO45_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO45_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO45_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO45_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO45_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO45_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO45_DELAY.
 */
struct ALT_PINMUX_IO45_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO45_DELAY. */
typedef struct ALT_PINMUX_IO45_DELAY_s  ALT_PINMUX_IO45_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO45_DELAY register. */
#define ALT_PINMUX_IO45_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO45_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO45_DELAY_OFST        0x514

/*
 * Register : IO4 6DELAY CHAIN - io46_delay
 * 
 * Adds the delay chains in IO46
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO46_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO46_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO46_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO46_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO46_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO46_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO46_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO46_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO46_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO46_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO46_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO46_DELAY.
 */
struct ALT_PINMUX_IO46_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO46_DELAY. */
typedef struct ALT_PINMUX_IO46_DELAY_s  ALT_PINMUX_IO46_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO46_DELAY register. */
#define ALT_PINMUX_IO46_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO46_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO46_DELAY_OFST        0x518

/*
 * Register : IO47 DELAY CHAIN - io47_delay
 * 
 * Adds the delay chains in IO47
 * 
 * Register Layout
 * 
 *  Bits    | Access | Reset | Description
 * :--------|:-------|:------|:------------
 *  [4:0]   | RW     | 0x0   | Enable     
 *  [7:5]   | ???    | 0x0   | *UNDEFINED*
 *  [12:8]  | RW     | 0x0   | Enable     
 *  [31:13] | ???    | 0x0   | *UNDEFINED*
 * 
 */
/*
 * Field : Enable - input_val
 * 
 * Depending on the value, it adds the chain delays in the input path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                 | Value | Description
 * :-----------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_ZERO_CHAIN_DLY        0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_CHAIN_DLY             0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_ONE_CHAIN_DLY         0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_TWO_CHAIN_DLY         0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_THREE_CHAIN_DLY       0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FOUR_CHAIN_DLY        0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FIVE_CHAIN_DLY        0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_SIX_CHAIN_DLY         0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_SEVEN_CHAIN_DLY       0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_EIGHT_CHAIN_DLY       0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_NINE_CHAIN_DLY        0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_TEN_CHAIN_DLY         0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_ELEVEN_CHAIN_DLY      0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_TWELVE_CHAIN_DLY      0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_THIRTEEN_CHAIN_DLY    0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FOURTEEN_CHAIN_DLY    0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_INPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_E_FIFTEEN_CHAIN_DLY     0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_LSB        0
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_MSB        4
/* The width in bits of the ALT_PINMUX_IO47_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO47_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_SET_MSK    0x0000001f
/* The mask used to clear the ALT_PINMUX_IO47_DELAY_INPUT_VAL register field value. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_CLR_MSK    0xffffffe0
/* The reset value of the ALT_PINMUX_IO47_DELAY_INPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO47_DELAY_INPUT_VAL field value from a register. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_GET(value) (((value) & 0x0000001f) >> 0)
/* Produces a ALT_PINMUX_IO47_DELAY_INPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO47_DELAY_INPUT_VAL_SET(value) (((value) << 0) & 0x0000001f)

/*
 * Field : Enable - output_val
 * 
 * Depending on the value, it adds the chain delays in the output path of the
 * Pinmux. The LSB serves as an enable.
 * 
 * Field Enumeration Values:
 * 
 *  Enum                                                  | Value | Description
 * :------------------------------------------------------|:------|:------------
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY     | 0x0   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_CHAIN_DLY          | 0x1   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY      | 0x3   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY      | 0x5   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY    | 0x7   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY     | 0x9   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY     | 0xb   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY      | 0xd   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY    | 0xf   |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY    | 0x11  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY     | 0x13  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY      | 0x15  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY   | 0x17  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY   | 0x19  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY | 0x1b  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY | 0x1d  |            
 *  ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY  | 0x1f  |            
 * 
 * Field Access Macros:
 * 
 */
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay . This bypasses the delay chain and selects the data
 * directly.
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_ZERO_CHAIN_DLY       0x0
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum Chain delay . Selects the data through the delay
 * chain but no delay cell is enabled.
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_CHAIN_DLY            0x1
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+1Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_ONE_CHAIN_DLY        0x3
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +2Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_TWO_CHAIN_DLY        0x5
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +3Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_THREE_CHAIN_DLY      0x7
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +4Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FOUR_CHAIN_DLY       0x9
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+5 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FIVE_CHAIN_DLY       0xb
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +6Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_SIX_CHAIN_DLY        0xd
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +7Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_SEVEN_CHAIN_DLY      0xf
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +8Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_EIGHT_CHAIN_DLY      0x11
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+9 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_NINE_CHAIN_DLY       0x13
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +10Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_TEN_CHAIN_DLY        0x15
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+11 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_ELEVEN_CHAIN_DLY     0x17
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +12Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_TWELVE_CHAIN_DLY     0x19
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum+13 Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_THIRTEEN_CHAIN_DLY   0x1b
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +14Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FOURTEEN_CHAIN_DLY   0x1d
/*
 * Enumerated value for register field ALT_PINMUX_IO47_DELAY_OUTPUT_VAL
 * 
 * Intrinsic IO delay + Minimum +15Chain delay
 */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_E_FIFTEEN_CHAIN_DLY    0x1f

/* The Least Significant Bit (LSB) position of the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_LSB        8
/* The Most Significant Bit (MSB) position of the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_MSB        12
/* The width in bits of the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_WIDTH      5
/* The mask used to set the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_SET_MSK    0x00001f00
/* The mask used to clear the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field value. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_CLR_MSK    0xffffe0ff
/* The reset value of the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_RESET      0x0
/* Extracts the ALT_PINMUX_IO47_DELAY_OUTPUT_VAL field value from a register. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_GET(value) (((value) & 0x00001f00) >> 8)
/* Produces a ALT_PINMUX_IO47_DELAY_OUTPUT_VAL register field value suitable for setting the register. */
#define ALT_PINMUX_IO47_DELAY_OUTPUT_VAL_SET(value) (((value) << 8) & 0x00001f00)

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register ALT_PINMUX_IO47_DELAY.
 */
struct ALT_PINMUX_IO47_DELAY_s
{
    volatile uint32_t  input_val  :  5;  /* Enable */
    uint32_t                      :  3;  /* *UNDEFINED* */
    volatile uint32_t  output_val :  5;  /* Enable */
    uint32_t                      : 19;  /* *UNDEFINED* */
};

/* The typedef declaration for register ALT_PINMUX_IO47_DELAY. */
typedef struct ALT_PINMUX_IO47_DELAY_s  ALT_PINMUX_IO47_DELAY_t;
#endif  /* __ASSEMBLY__ */

/* The reset value of the ALT_PINMUX_IO47_DELAY register. */
#define ALT_PINMUX_IO47_DELAY_RESET       0x00000000
/* The byte offset of the ALT_PINMUX_IO47_DELAY register from the beginning of the component. */
#define ALT_PINMUX_IO47_DELAY_OFST        0x51c

#ifndef __ASSEMBLY__
/*
 * WARNING: The C register and register group struct declarations are provided for
 * convenience and illustrative purposes. They should, however, be used with
 * caution as the C language standard provides no guarantees about the alignment or
 * atomicity of device memory accesses. The recommended practice for coding device
 * drivers is to use the SoCAL access macros in conjunction with alt_read_word()
 * and alt_write_word() functions for 32 bit registers and alt_read_dword() and
 * alt_write_dword() functions for 64 bit registers.
 * 
 * The struct declaration for register group ALT_PINMUX.
 */
struct ALT_PINMUX_s
{
    volatile ALT_PINMUX_PIN0SEL_t                   pin0sel;                   /* ALT_PINMUX_PIN0SEL */
    volatile ALT_PINMUX_PIN1SEL_t                   pin1sel;                   /* ALT_PINMUX_PIN1SEL */
    volatile ALT_PINMUX_PIN2SEL_t                   pin2sel;                   /* ALT_PINMUX_PIN2SEL */
    volatile ALT_PINMUX_PIN3SEL_t                   pin3sel;                   /* ALT_PINMUX_PIN3SEL */
    volatile ALT_PINMUX_PIN4SEL_t                   pin4sel;                   /* ALT_PINMUX_PIN4SEL */
    volatile ALT_PINMUX_PIN5SEL_t                   pin5sel;                   /* ALT_PINMUX_PIN5SEL */
    volatile ALT_PINMUX_PIN6SEL_t                   pin6sel;                   /* ALT_PINMUX_PIN6SEL */
    volatile ALT_PINMUX_PIN7SEL_t                   pin7sel;                   /* ALT_PINMUX_PIN7SEL */
    volatile ALT_PINMUX_PIN8SEL_t                   pin8sel;                   /* ALT_PINMUX_PIN8SEL */
    volatile ALT_PINMUX_PIN9SEL_t                   pin9sel;                   /* ALT_PINMUX_PIN9SEL */
    volatile ALT_PINMUX_PIN10SEL_t                  pin10sel;                  /* ALT_PINMUX_PIN10SEL */
    volatile ALT_PINMUX_PIN11SEL_t                  pin11sel;                  /* ALT_PINMUX_PIN11SEL */
    volatile ALT_PINMUX_PIN12SEL_t                  pin12sel;                  /* ALT_PINMUX_PIN12SEL */
    volatile ALT_PINMUX_PIN13SEL_t                  pin13sel;                  /* ALT_PINMUX_PIN13SEL */
    volatile ALT_PINMUX_PIN14SEL_t                  pin14sel;                  /* ALT_PINMUX_PIN14SEL */
    volatile ALT_PINMUX_PIN15SEL_t                  pin15sel;                  /* ALT_PINMUX_PIN15SEL */
    volatile ALT_PINMUX_PIN16SEL_t                  pin16sel;                  /* ALT_PINMUX_PIN16SEL */
    volatile ALT_PINMUX_PIN17SEL_t                  pin17sel;                  /* ALT_PINMUX_PIN17SEL */
    volatile ALT_PINMUX_PIN18SEL_t                  pin18sel;                  /* ALT_PINMUX_PIN18SEL */
    volatile ALT_PINMUX_PIN19SEL_t                  pin19sel;                  /* ALT_PINMUX_PIN19SEL */
    volatile ALT_PINMUX_PIN20SEL_t                  pin20sel;                  /* ALT_PINMUX_PIN20SEL */
    volatile ALT_PINMUX_PIN21SEL_t                  pin21sel;                  /* ALT_PINMUX_PIN21SEL */
    volatile ALT_PINMUX_PIN22SEL_t                  pin22sel;                  /* ALT_PINMUX_PIN22SEL */
    volatile ALT_PINMUX_PIN23SEL_t                  pin23sel;                  /* ALT_PINMUX_PIN23SEL */
    volatile ALT_PINMUX_PIN24SEL_t                  pin24sel;                  /* ALT_PINMUX_PIN24SEL */
    volatile ALT_PINMUX_PIN25SEL_t                  pin25sel;                  /* ALT_PINMUX_PIN25SEL */
    volatile ALT_PINMUX_PIN26SEL_t                  pin26sel;                  /* ALT_PINMUX_PIN26SEL */
    volatile ALT_PINMUX_PIN27SEL_t                  pin27sel;                  /* ALT_PINMUX_PIN27SEL */
    volatile ALT_PINMUX_PIN28SEL_t                  pin28sel;                  /* ALT_PINMUX_PIN28SEL */
    volatile ALT_PINMUX_PIN29SEL_t                  pin29sel;                  /* ALT_PINMUX_PIN29SEL */
    volatile ALT_PINMUX_PIN30SEL_t                  pin30sel;                  /* ALT_PINMUX_PIN30SEL */
    volatile ALT_PINMUX_PIN31SEL_t                  pin31sel;                  /* ALT_PINMUX_PIN31SEL */
    volatile ALT_PINMUX_PIN32SEL_t                  pin32sel;                  /* ALT_PINMUX_PIN32SEL */
    volatile ALT_PINMUX_PIN33SEL_t                  pin33sel;                  /* ALT_PINMUX_PIN33SEL */
    volatile ALT_PINMUX_PIN34SEL_t                  pin34sel;                  /* ALT_PINMUX_PIN34SEL */
    volatile ALT_PINMUX_PIN35SEL_t                  pin35sel;                  /* ALT_PINMUX_PIN35SEL */
    volatile ALT_PINMUX_PIN36SEL_t                  pin36sel;                  /* ALT_PINMUX_PIN36SEL */
    volatile ALT_PINMUX_PIN37SEL_t                  pin37sel;                  /* ALT_PINMUX_PIN37SEL */
    volatile ALT_PINMUX_PIN38SEL_t                  pin38sel;                  /* ALT_PINMUX_PIN38SEL */
    volatile ALT_PINMUX_PIN39SEL_t                  pin39sel;                  /* ALT_PINMUX_PIN39SEL */
    volatile uint32_t                               _pad_0xa0_0xff[24];        /* *UNDEFINED* */
    volatile ALT_PINMUX_PIN40SEL_t                  pin40sel;                  /* ALT_PINMUX_PIN40SEL */
    volatile ALT_PINMUX_PIN41SEL_t                  pin41sel;                  /* ALT_PINMUX_PIN41SEL */
    volatile ALT_PINMUX_PIN42SEL_t                  pin42sel;                  /* ALT_PINMUX_PIN42SEL */
    volatile ALT_PINMUX_PIN43SEL_t                  pin43sel;                  /* ALT_PINMUX_PIN43SEL */
    volatile ALT_PINMUX_PIN44SEL_t                  pin44sel;                  /* ALT_PINMUX_PIN44SEL */
    volatile ALT_PINMUX_PIN45SEL_t                  pin45sel;                  /* ALT_PINMUX_PIN45SEL */
    volatile ALT_PINMUX_PIN46SEL_t                  pin46sel;                  /* ALT_PINMUX_PIN46SEL */
    volatile ALT_PINMUX_PIN47SEL_t                  pin47sel;                  /* ALT_PINMUX_PIN47SEL */
    volatile uint32_t                               _pad_0x120_0x12f[4];       /* *UNDEFINED* */
    volatile ALT_PINMUX_IO0CTRL_t                   io0ctrl;                   /* ALT_PINMUX_IO0CTRL */
    volatile ALT_PINMUX_IO1CTRL_t                   io1ctrl;                   /* ALT_PINMUX_IO1CTRL */
    volatile ALT_PINMUX_IO2CTRL_t                   io2ctrl;                   /* ALT_PINMUX_IO2CTRL */
    volatile ALT_PINMUX_IO3CTRL_t                   io3ctrl;                   /* ALT_PINMUX_IO3CTRL */
    volatile ALT_PINMUX_IO4CTRL_t                   io4ctrl;                   /* ALT_PINMUX_IO4CTRL */
    volatile ALT_PINMUX_IO5CTRL_t                   io5ctrl;                   /* ALT_PINMUX_IO5CTRL */
    volatile ALT_PINMUX_IO6CTRL_t                   io6ctrl;                   /* ALT_PINMUX_IO6CTRL */
    volatile ALT_PINMUX_IO7CTRL_t                   io7ctrl;                   /* ALT_PINMUX_IO7CTRL */
    volatile ALT_PINMUX_IO8CTRL_t                   io8ctrl;                   /* ALT_PINMUX_IO8CTRL */
    volatile ALT_PINMUX_IO9CTRL_t                   io9ctrl;                   /* ALT_PINMUX_IO9CTRL */
    volatile ALT_PINMUX_IO10CTRL_t                  io10ctrl;                  /* ALT_PINMUX_IO10CTRL */
    volatile ALT_PINMUX_IO11CTRL_t                  io11ctrl;                  /* ALT_PINMUX_IO11CTRL */
    volatile ALT_PINMUX_IO12CTRL_t                  io12ctrl;                  /* ALT_PINMUX_IO12CTRL */
    volatile ALT_PINMUX_IO13CTRL_t                  io13ctrl;                  /* ALT_PINMUX_IO13CTRL */
    volatile ALT_PINMUX_IO14CTRL_t                  io14ctrl;                  /* ALT_PINMUX_IO14CTRL */
    volatile ALT_PINMUX_IO15CTRL_t                  io15ctrl;                  /* ALT_PINMUX_IO15CTRL */
    volatile ALT_PINMUX_IO16CTRL_t                  io16ctrl;                  /* ALT_PINMUX_IO16CTRL */
    volatile ALT_PINMUX_IO17CTRL_t                  io17ctrl;                  /* ALT_PINMUX_IO17CTRL */
    volatile ALT_PINMUX_IO18CTRL_t                  io18ctrl;                  /* ALT_PINMUX_IO18CTRL */
    volatile ALT_PINMUX_IO19CTRL_t                  io19ctrl;                  /* ALT_PINMUX_IO19CTRL */
    volatile ALT_PINMUX_IO20CTRL_t                  io20ctrl;                  /* ALT_PINMUX_IO20CTRL */
    volatile ALT_PINMUX_IO21CTRL_t                  io21ctrl;                  /* ALT_PINMUX_IO21CTRL */
    volatile ALT_PINMUX_IO22CTRL_t                  io22ctrl;                  /* ALT_PINMUX_IO22CTRL */
    volatile ALT_PINMUX_IO23CTRL_t                  io23ctrl;                  /* ALT_PINMUX_IO23CTRL */
    volatile ALT_PINMUX_IO24CTRL_t                  io24ctrl;                  /* ALT_PINMUX_IO24CTRL */
    volatile ALT_PINMUX_IO25CTRL_t                  io25ctrl;                  /* ALT_PINMUX_IO25CTRL */
    volatile ALT_PINMUX_IO26CTRL_t                  io26ctrl;                  /* ALT_PINMUX_IO26CTRL */
    volatile ALT_PINMUX_IO27CTRL_t                  io27ctrl;                  /* ALT_PINMUX_IO27CTRL */
    volatile uint32_t                               _pad_0x1a0_0x1ff[24];      /* *UNDEFINED* */
    volatile ALT_PINMUX_IO28CTRL_t                  io28ctrl;                  /* ALT_PINMUX_IO28CTRL */
    volatile ALT_PINMUX_IO29CTRL_t                  io29ctrl;                  /* ALT_PINMUX_IO29CTRL */
    volatile ALT_PINMUX_IO30CTRL_t                  io30ctrl;                  /* ALT_PINMUX_IO30CTRL */
    volatile ALT_PINMUX_IO31CTRL_t                  io31ctrl;                  /* ALT_PINMUX_IO31CTRL */
    volatile ALT_PINMUX_IO32CTRL_t                  io32ctrl;                  /* ALT_PINMUX_IO32CTRL */
    volatile ALT_PINMUX_IO33CTRL_t                  io33ctrl;                  /* ALT_PINMUX_IO33CTRL */
    volatile ALT_PINMUX_IO34CTRL_t                  io34ctrl;                  /* ALT_PINMUX_IO34CTRL */
    volatile ALT_PINMUX_IO35CTRL_t                  io35ctrl;                  /* ALT_PINMUX_IO35CTRL */
    volatile ALT_PINMUX_IO36CTRL_t                  io36ctrl;                  /* ALT_PINMUX_IO36CTRL */
    volatile ALT_PINMUX_IO37CTRL_t                  io37ctrl;                  /* ALT_PINMUX_IO37CTRL */
    volatile ALT_PINMUX_IO38CTRL_t                  io38ctrl;                  /* ALT_PINMUX_IO38CTRL */
    volatile ALT_PINMUX_IO39CTRL_t                  io39ctrl;                  /* ALT_PINMUX_IO39CTRL */
    volatile ALT_PINMUX_IO40CTRL_t                  io40ctrl;                  /* ALT_PINMUX_IO40CTRL */
    volatile ALT_PINMUX_IO41CTRL_t                  io41ctrl;                  /* ALT_PINMUX_IO41CTRL */
    volatile ALT_PINMUX_IO42CTRL_t                  io42ctrl;                  /* ALT_PINMUX_IO42CTRL */
    volatile ALT_PINMUX_IO43CTRL_t                  io43ctrl;                  /* ALT_PINMUX_IO43CTRL */
    volatile ALT_PINMUX_IO44CTRL_t                  io44ctrl;                  /* ALT_PINMUX_IO44CTRL */
    volatile ALT_PINMUX_IO45CTRL_t                  io45ctrl;                  /* ALT_PINMUX_IO45CTRL */
    volatile ALT_PINMUX_IO46CTRL_t                  io46ctrl;                  /* ALT_PINMUX_IO46CTRL */
    volatile ALT_PINMUX_IO47CTRL_t                  io47ctrl;                  /* ALT_PINMUX_IO47CTRL */
    volatile uint32_t                               _pad_0x250_0x2ff[44];      /* *UNDEFINED* */
    volatile ALT_PINMUX_PINMUX_EMAC0_USEFPGA_t      pinmux_emac0_usefpga;      /* ALT_PINMUX_PINMUX_EMAC0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_EMAC1_USEFPGA_t      pinmux_emac1_usefpga;      /* ALT_PINMUX_PINMUX_EMAC1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_EMAC2_USEFPGA_t      pinmux_emac2_usefpga;      /* ALT_PINMUX_PINMUX_EMAC2_USEFPGA */
    volatile ALT_PINMUX_PINMUX_I2C0_USEFPGA_t       pinmux_i2c0_usefpga;       /* ALT_PINMUX_PINMUX_I2C0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_I2C1_USEFPGA_t       pinmux_i2c1_usefpga;       /* ALT_PINMUX_PINMUX_I2C1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA_t  pinmux_i2c_emac0_usefpga;  /* ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA_t  pinmux_i2c_emac1_usefpga;  /* ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA_t  pinmux_i2c_emac2_usefpga;  /* ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA */
    volatile ALT_PINMUX_PINMUX_NAND_USEFPGA_t       pinmux_nand_usefpga;       /* ALT_PINMUX_PINMUX_NAND_USEFPGA */
    volatile uint32_t                               _pad_0x324_0x327;          /* *UNDEFINED* */
    volatile ALT_PINMUX_PINMUX_SPIM0_USEFPGA_t      pinmux_spim0_usefpga;      /* ALT_PINMUX_PINMUX_SPIM0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_SPIM1_USEFPGA_t      pinmux_spim1_usefpga;      /* ALT_PINMUX_PINMUX_SPIM1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_SPIS0_USEFPGA_t      pinmux_spis0_usefpga;      /* ALT_PINMUX_PINMUX_SPIS0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_SPIS1_USEFPGA_t      pinmux_spis1_usefpga;      /* ALT_PINMUX_PINMUX_SPIS1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_UART0_USEFPGA_t      pinmux_uart0_usefpga;      /* ALT_PINMUX_PINMUX_UART0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_UART1_USEFPGA_t      pinmux_uart1_usefpga;      /* ALT_PINMUX_PINMUX_UART1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_MDIO0_USEFPGA_t      pinmux_mdio0_usefpga;      /* ALT_PINMUX_PINMUX_MDIO0_USEFPGA */
    volatile ALT_PINMUX_PINMUX_MDIO1_USEFPGA_t      pinmux_mdio1_usefpga;      /* ALT_PINMUX_PINMUX_MDIO1_USEFPGA */
    volatile ALT_PINMUX_PINMUX_MDIO2_USEFPGA_t      pinmux_mdio2_usefpga;      /* ALT_PINMUX_PINMUX_MDIO2_USEFPGA */
    volatile uint32_t                               _pad_0x34c_0x34f;          /* *UNDEFINED* */
    volatile ALT_PINMUX_PINMUX_JTAG_USEFPGA_t       pinmux_jtag_usefpga;       /* ALT_PINMUX_PINMUX_JTAG_USEFPGA */
    volatile ALT_PINMUX_PINMUX_SDMMC_USEFPGA_t      pinmux_sdmmc_usefpga;      /* ALT_PINMUX_PINMUX_SDMMC_USEFPGA */
    volatile ALT_PINMUX_HPS_OSC_CLK_t               hps_osc_clk;               /* ALT_PINMUX_HPS_OSC_CLK */
    volatile uint32_t                               _pad_0x35c_0x3ff[41];      /* *UNDEFINED* */
    volatile ALT_PINMUX_IO0_DELAY_t                 io0_delay;                 /* ALT_PINMUX_IO0_DELAY */
    volatile ALT_PINMUX_IO1_DELAY_t                 io1_delay;                 /* ALT_PINMUX_IO1_DELAY */
    volatile ALT_PINMUX_IO2_DELAY_t                 io2_delay;                 /* ALT_PINMUX_IO2_DELAY */
    volatile ALT_PINMUX_IO3_DELAY_t                 io3_delay;                 /* ALT_PINMUX_IO3_DELAY */
    volatile ALT_PINMUX_IO4_DELAY_t                 io4_delay;                 /* ALT_PINMUX_IO4_DELAY */
    volatile ALT_PINMUX_IO5_DELAY_t                 io5_delay;                 /* ALT_PINMUX_IO5_DELAY */
    volatile ALT_PINMUX_IO6_DELAY_t                 io6_delay;                 /* ALT_PINMUX_IO6_DELAY */
    volatile ALT_PINMUX_IO7_DELAY_t                 io7_delay;                 /* ALT_PINMUX_IO7_DELAY */
    volatile ALT_PINMUX_IO8_DELAY_t                 io8_delay;                 /* ALT_PINMUX_IO8_DELAY */
    volatile ALT_PINMUX_IO9_DELAY_t                 io9_delay;                 /* ALT_PINMUX_IO9_DELAY */
    volatile ALT_PINMUX_IO10_DELAY_t                io10_delay;                /* ALT_PINMUX_IO10_DELAY */
    volatile ALT_PINMUX_IO11_DELAY_t                io11_delay;                /* ALT_PINMUX_IO11_DELAY */
    volatile ALT_PINMUX_IO12_DELAY_t                io12_delay;                /* ALT_PINMUX_IO12_DELAY */
    volatile ALT_PINMUX_IO13_DELAY_t                io13_delay;                /* ALT_PINMUX_IO13_DELAY */
    volatile ALT_PINMUX_IO14_DELAY_t                io14_delay;                /* ALT_PINMUX_IO14_DELAY */
    volatile ALT_PINMUX_IO15_DELAY_t                io15_delay;                /* ALT_PINMUX_IO15_DELAY */
    volatile ALT_PINMUX_IO16_DELAY_t                io16_delay;                /* ALT_PINMUX_IO16_DELAY */
    volatile ALT_PINMUX_IO17_DELAY_t                io17_delay;                /* ALT_PINMUX_IO17_DELAY */
    volatile ALT_PINMUX_IO18_DELAY_t                io18_delay;                /* ALT_PINMUX_IO18_DELAY */
    volatile ALT_PINMUX_IO19_DELAY_t                io19_delay;                /* ALT_PINMUX_IO19_DELAY */
    volatile ALT_PINMUX_IO20_DELAY_t                io20_delay;                /* ALT_PINMUX_IO20_DELAY */
    volatile ALT_PINMUX_IO21_DELAY_t                io21_delay;                /* ALT_PINMUX_IO21_DELAY */
    volatile ALT_PINMUX_IO22_DELAY_t                io22_delay;                /* ALT_PINMUX_IO22_DELAY */
    volatile ALT_PINMUX_IO23_DELAY_t                io23_delay;                /* ALT_PINMUX_IO23_DELAY */
    volatile ALT_PINMUX_IO24_DELAY_t                io24_delay;                /* ALT_PINMUX_IO24_DELAY */
    volatile ALT_PINMUX_IO25_DELAY_t                io25_delay;                /* ALT_PINMUX_IO25_DELAY */
    volatile ALT_PINMUX_IO26_DELAY_t                io26_delay;                /* ALT_PINMUX_IO26_DELAY */
    volatile ALT_PINMUX_IO27_DELAY_t                io27_delay;                /* ALT_PINMUX_IO27_DELAY */
    volatile ALT_PINMUX_IO28_DELAY_t                io28_delay;                /* ALT_PINMUX_IO28_DELAY */
    volatile ALT_PINMUX_IO29_DELAY_t                io29_delay;                /* ALT_PINMUX_IO29_DELAY */
    volatile ALT_PINMUX_IO30_DELAY_t                io30_delay;                /* ALT_PINMUX_IO30_DELAY */
    volatile ALT_PINMUX_IO31_DELAY_t                io31_delay;                /* ALT_PINMUX_IO31_DELAY */
    volatile ALT_PINMUX_IO32_DELAY_t                io32_delay;                /* ALT_PINMUX_IO32_DELAY */
    volatile ALT_PINMUX_IO33_DELAY_t                io33_delay;                /* ALT_PINMUX_IO33_DELAY */
    volatile ALT_PINMUX_IO34_DELAY_t                io34_delay;                /* ALT_PINMUX_IO34_DELAY */
    volatile ALT_PINMUX_IO35_DELAY_t                io35_delay;                /* ALT_PINMUX_IO35_DELAY */
    volatile ALT_PINMUX_IO36_DELAY_t                io36_delay;                /* ALT_PINMUX_IO36_DELAY */
    volatile ALT_PINMUX_IO37_DELAY_t                io37_delay;                /* ALT_PINMUX_IO37_DELAY */
    volatile ALT_PINMUX_IO38_DELAY_t                io38_delay;                /* ALT_PINMUX_IO38_DELAY */
    volatile ALT_PINMUX_IO39_DELAY_t                io39_delay;                /* ALT_PINMUX_IO39_DELAY */
    volatile uint32_t                               _pad_0x4a0_0x4ff[24];      /* *UNDEFINED* */
    volatile ALT_PINMUX_IO40_DELAY_t                io40_delay;                /* ALT_PINMUX_IO40_DELAY */
    volatile ALT_PINMUX_IO41_DELAY_t                io41_delay;                /* ALT_PINMUX_IO41_DELAY */
    volatile ALT_PINMUX_IO42_DELAY_t                io42_delay;                /* ALT_PINMUX_IO42_DELAY */
    volatile ALT_PINMUX_IO43_DELAY_t                io43_delay;                /* ALT_PINMUX_IO43_DELAY */
    volatile ALT_PINMUX_IO44_DELAY_t                io44_delay;                /* ALT_PINMUX_IO44_DELAY */
    volatile ALT_PINMUX_IO45_DELAY_t                io45_delay;                /* ALT_PINMUX_IO45_DELAY */
    volatile ALT_PINMUX_IO46_DELAY_t                io46_delay;                /* ALT_PINMUX_IO46_DELAY */
    volatile ALT_PINMUX_IO47_DELAY_t                io47_delay;                /* ALT_PINMUX_IO47_DELAY */
    volatile uint32_t                               _pad_0x520_0x1000[696];    /* *UNDEFINED* */
};

/* The typedef declaration for register group ALT_PINMUX. */
typedef struct ALT_PINMUX_s  ALT_PINMUX_t;
/* The struct declaration for the raw register contents of register group ALT_PINMUX. */
struct ALT_PINMUX_raw_s
{
    volatile uint32_t  pin0sel;                   /* ALT_PINMUX_PIN0SEL */
    volatile uint32_t  pin1sel;                   /* ALT_PINMUX_PIN1SEL */
    volatile uint32_t  pin2sel;                   /* ALT_PINMUX_PIN2SEL */
    volatile uint32_t  pin3sel;                   /* ALT_PINMUX_PIN3SEL */
    volatile uint32_t  pin4sel;                   /* ALT_PINMUX_PIN4SEL */
    volatile uint32_t  pin5sel;                   /* ALT_PINMUX_PIN5SEL */
    volatile uint32_t  pin6sel;                   /* ALT_PINMUX_PIN6SEL */
    volatile uint32_t  pin7sel;                   /* ALT_PINMUX_PIN7SEL */
    volatile uint32_t  pin8sel;                   /* ALT_PINMUX_PIN8SEL */
    volatile uint32_t  pin9sel;                   /* ALT_PINMUX_PIN9SEL */
    volatile uint32_t  pin10sel;                  /* ALT_PINMUX_PIN10SEL */
    volatile uint32_t  pin11sel;                  /* ALT_PINMUX_PIN11SEL */
    volatile uint32_t  pin12sel;                  /* ALT_PINMUX_PIN12SEL */
    volatile uint32_t  pin13sel;                  /* ALT_PINMUX_PIN13SEL */
    volatile uint32_t  pin14sel;                  /* ALT_PINMUX_PIN14SEL */
    volatile uint32_t  pin15sel;                  /* ALT_PINMUX_PIN15SEL */
    volatile uint32_t  pin16sel;                  /* ALT_PINMUX_PIN16SEL */
    volatile uint32_t  pin17sel;                  /* ALT_PINMUX_PIN17SEL */
    volatile uint32_t  pin18sel;                  /* ALT_PINMUX_PIN18SEL */
    volatile uint32_t  pin19sel;                  /* ALT_PINMUX_PIN19SEL */
    volatile uint32_t  pin20sel;                  /* ALT_PINMUX_PIN20SEL */
    volatile uint32_t  pin21sel;                  /* ALT_PINMUX_PIN21SEL */
    volatile uint32_t  pin22sel;                  /* ALT_PINMUX_PIN22SEL */
    volatile uint32_t  pin23sel;                  /* ALT_PINMUX_PIN23SEL */
    volatile uint32_t  pin24sel;                  /* ALT_PINMUX_PIN24SEL */
    volatile uint32_t  pin25sel;                  /* ALT_PINMUX_PIN25SEL */
    volatile uint32_t  pin26sel;                  /* ALT_PINMUX_PIN26SEL */
    volatile uint32_t  pin27sel;                  /* ALT_PINMUX_PIN27SEL */
    volatile uint32_t  pin28sel;                  /* ALT_PINMUX_PIN28SEL */
    volatile uint32_t  pin29sel;                  /* ALT_PINMUX_PIN29SEL */
    volatile uint32_t  pin30sel;                  /* ALT_PINMUX_PIN30SEL */
    volatile uint32_t  pin31sel;                  /* ALT_PINMUX_PIN31SEL */
    volatile uint32_t  pin32sel;                  /* ALT_PINMUX_PIN32SEL */
    volatile uint32_t  pin33sel;                  /* ALT_PINMUX_PIN33SEL */
    volatile uint32_t  pin34sel;                  /* ALT_PINMUX_PIN34SEL */
    volatile uint32_t  pin35sel;                  /* ALT_PINMUX_PIN35SEL */
    volatile uint32_t  pin36sel;                  /* ALT_PINMUX_PIN36SEL */
    volatile uint32_t  pin37sel;                  /* ALT_PINMUX_PIN37SEL */
    volatile uint32_t  pin38sel;                  /* ALT_PINMUX_PIN38SEL */
    volatile uint32_t  pin39sel;                  /* ALT_PINMUX_PIN39SEL */
    volatile uint32_t  _pad_0xa0_0xff[24];        /* *UNDEFINED* */
    volatile uint32_t  pin40sel;                  /* ALT_PINMUX_PIN40SEL */
    volatile uint32_t  pin41sel;                  /* ALT_PINMUX_PIN41SEL */
    volatile uint32_t  pin42sel;                  /* ALT_PINMUX_PIN42SEL */
    volatile uint32_t  pin43sel;                  /* ALT_PINMUX_PIN43SEL */
    volatile uint32_t  pin44sel;                  /* ALT_PINMUX_PIN44SEL */
    volatile uint32_t  pin45sel;                  /* ALT_PINMUX_PIN45SEL */
    volatile uint32_t  pin46sel;                  /* ALT_PINMUX_PIN46SEL */
    volatile uint32_t  pin47sel;                  /* ALT_PINMUX_PIN47SEL */
    volatile uint32_t  _pad_0x120_0x12f[4];       /* *UNDEFINED* */
    volatile uint32_t  io0ctrl;                   /* ALT_PINMUX_IO0CTRL */
    volatile uint32_t  io1ctrl;                   /* ALT_PINMUX_IO1CTRL */
    volatile uint32_t  io2ctrl;                   /* ALT_PINMUX_IO2CTRL */
    volatile uint32_t  io3ctrl;                   /* ALT_PINMUX_IO3CTRL */
    volatile uint32_t  io4ctrl;                   /* ALT_PINMUX_IO4CTRL */
    volatile uint32_t  io5ctrl;                   /* ALT_PINMUX_IO5CTRL */
    volatile uint32_t  io6ctrl;                   /* ALT_PINMUX_IO6CTRL */
    volatile uint32_t  io7ctrl;                   /* ALT_PINMUX_IO7CTRL */
    volatile uint32_t  io8ctrl;                   /* ALT_PINMUX_IO8CTRL */
    volatile uint32_t  io9ctrl;                   /* ALT_PINMUX_IO9CTRL */
    volatile uint32_t  io10ctrl;                  /* ALT_PINMUX_IO10CTRL */
    volatile uint32_t  io11ctrl;                  /* ALT_PINMUX_IO11CTRL */
    volatile uint32_t  io12ctrl;                  /* ALT_PINMUX_IO12CTRL */
    volatile uint32_t  io13ctrl;                  /* ALT_PINMUX_IO13CTRL */
    volatile uint32_t  io14ctrl;                  /* ALT_PINMUX_IO14CTRL */
    volatile uint32_t  io15ctrl;                  /* ALT_PINMUX_IO15CTRL */
    volatile uint32_t  io16ctrl;                  /* ALT_PINMUX_IO16CTRL */
    volatile uint32_t  io17ctrl;                  /* ALT_PINMUX_IO17CTRL */
    volatile uint32_t  io18ctrl;                  /* ALT_PINMUX_IO18CTRL */
    volatile uint32_t  io19ctrl;                  /* ALT_PINMUX_IO19CTRL */
    volatile uint32_t  io20ctrl;                  /* ALT_PINMUX_IO20CTRL */
    volatile uint32_t  io21ctrl;                  /* ALT_PINMUX_IO21CTRL */
    volatile uint32_t  io22ctrl;                  /* ALT_PINMUX_IO22CTRL */
    volatile uint32_t  io23ctrl;                  /* ALT_PINMUX_IO23CTRL */
    volatile uint32_t  io24ctrl;                  /* ALT_PINMUX_IO24CTRL */
    volatile uint32_t  io25ctrl;                  /* ALT_PINMUX_IO25CTRL */
    volatile uint32_t  io26ctrl;                  /* ALT_PINMUX_IO26CTRL */
    volatile uint32_t  io27ctrl;                  /* ALT_PINMUX_IO27CTRL */
    volatile uint32_t  _pad_0x1a0_0x1ff[24];      /* *UNDEFINED* */
    volatile uint32_t  io28ctrl;                  /* ALT_PINMUX_IO28CTRL */
    volatile uint32_t  io29ctrl;                  /* ALT_PINMUX_IO29CTRL */
    volatile uint32_t  io30ctrl;                  /* ALT_PINMUX_IO30CTRL */
    volatile uint32_t  io31ctrl;                  /* ALT_PINMUX_IO31CTRL */
    volatile uint32_t  io32ctrl;                  /* ALT_PINMUX_IO32CTRL */
    volatile uint32_t  io33ctrl;                  /* ALT_PINMUX_IO33CTRL */
    volatile uint32_t  io34ctrl;                  /* ALT_PINMUX_IO34CTRL */
    volatile uint32_t  io35ctrl;                  /* ALT_PINMUX_IO35CTRL */
    volatile uint32_t  io36ctrl;                  /* ALT_PINMUX_IO36CTRL */
    volatile uint32_t  io37ctrl;                  /* ALT_PINMUX_IO37CTRL */
    volatile uint32_t  io38ctrl;                  /* ALT_PINMUX_IO38CTRL */
    volatile uint32_t  io39ctrl;                  /* ALT_PINMUX_IO39CTRL */
    volatile uint32_t  io40ctrl;                  /* ALT_PINMUX_IO40CTRL */
    volatile uint32_t  io41ctrl;                  /* ALT_PINMUX_IO41CTRL */
    volatile uint32_t  io42ctrl;                  /* ALT_PINMUX_IO42CTRL */
    volatile uint32_t  io43ctrl;                  /* ALT_PINMUX_IO43CTRL */
    volatile uint32_t  io44ctrl;                  /* ALT_PINMUX_IO44CTRL */
    volatile uint32_t  io45ctrl;                  /* ALT_PINMUX_IO45CTRL */
    volatile uint32_t  io46ctrl;                  /* ALT_PINMUX_IO46CTRL */
    volatile uint32_t  io47ctrl;                  /* ALT_PINMUX_IO47CTRL */
    volatile uint32_t  _pad_0x250_0x2ff[44];      /* *UNDEFINED* */
    volatile uint32_t  pinmux_emac0_usefpga;      /* ALT_PINMUX_PINMUX_EMAC0_USEFPGA */
    volatile uint32_t  pinmux_emac1_usefpga;      /* ALT_PINMUX_PINMUX_EMAC1_USEFPGA */
    volatile uint32_t  pinmux_emac2_usefpga;      /* ALT_PINMUX_PINMUX_EMAC2_USEFPGA */
    volatile uint32_t  pinmux_i2c0_usefpga;       /* ALT_PINMUX_PINMUX_I2C0_USEFPGA */
    volatile uint32_t  pinmux_i2c1_usefpga;       /* ALT_PINMUX_PINMUX_I2C1_USEFPGA */
    volatile uint32_t  pinmux_i2c_emac0_usefpga;  /* ALT_PINMUX_PINMUX_I2C_EMAC0_USEFPGA */
    volatile uint32_t  pinmux_i2c_emac1_usefpga;  /* ALT_PINMUX_PINMUX_I2C_EMAC1_USEFPGA */
    volatile uint32_t  pinmux_i2c_emac2_usefpga;  /* ALT_PINMUX_PINMUX_I2C_EMAC2_USEFPGA */
    volatile uint32_t  pinmux_nand_usefpga;       /* ALT_PINMUX_PINMUX_NAND_USEFPGA */
    volatile uint32_t  _pad_0x324_0x327;          /* *UNDEFINED* */
    volatile uint32_t  pinmux_spim0_usefpga;      /* ALT_PINMUX_PINMUX_SPIM0_USEFPGA */
    volatile uint32_t  pinmux_spim1_usefpga;      /* ALT_PINMUX_PINMUX_SPIM1_USEFPGA */
    volatile uint32_t  pinmux_spis0_usefpga;      /* ALT_PINMUX_PINMUX_SPIS0_USEFPGA */
    volatile uint32_t  pinmux_spis1_usefpga;      /* ALT_PINMUX_PINMUX_SPIS1_USEFPGA */
    volatile uint32_t  pinmux_uart0_usefpga;      /* ALT_PINMUX_PINMUX_UART0_USEFPGA */
    volatile uint32_t  pinmux_uart1_usefpga;      /* ALT_PINMUX_PINMUX_UART1_USEFPGA */
    volatile uint32_t  pinmux_mdio0_usefpga;      /* ALT_PINMUX_PINMUX_MDIO0_USEFPGA */
    volatile uint32_t  pinmux_mdio1_usefpga;      /* ALT_PINMUX_PINMUX_MDIO1_USEFPGA */
    volatile uint32_t  pinmux_mdio2_usefpga;      /* ALT_PINMUX_PINMUX_MDIO2_USEFPGA */
    volatile uint32_t  _pad_0x34c_0x34f;          /* *UNDEFINED* */
    volatile uint32_t  pinmux_jtag_usefpga;       /* ALT_PINMUX_PINMUX_JTAG_USEFPGA */
    volatile uint32_t  pinmux_sdmmc_usefpga;      /* ALT_PINMUX_PINMUX_SDMMC_USEFPGA */
    volatile uint32_t  hps_osc_clk;               /* ALT_PINMUX_HPS_OSC_CLK */
    volatile uint32_t  _pad_0x35c_0x3ff[41];      /* *UNDEFINED* */
    volatile uint32_t  io0_delay;                 /* ALT_PINMUX_IO0_DELAY */
    volatile uint32_t  io1_delay;                 /* ALT_PINMUX_IO1_DELAY */
    volatile uint32_t  io2_delay;                 /* ALT_PINMUX_IO2_DELAY */
    volatile uint32_t  io3_delay;                 /* ALT_PINMUX_IO3_DELAY */
    volatile uint32_t  io4_delay;                 /* ALT_PINMUX_IO4_DELAY */
    volatile uint32_t  io5_delay;                 /* ALT_PINMUX_IO5_DELAY */
    volatile uint32_t  io6_delay;                 /* ALT_PINMUX_IO6_DELAY */
    volatile uint32_t  io7_delay;                 /* ALT_PINMUX_IO7_DELAY */
    volatile uint32_t  io8_delay;                 /* ALT_PINMUX_IO8_DELAY */
    volatile uint32_t  io9_delay;                 /* ALT_PINMUX_IO9_DELAY */
    volatile uint32_t  io10_delay;                /* ALT_PINMUX_IO10_DELAY */
    volatile uint32_t  io11_delay;                /* ALT_PINMUX_IO11_DELAY */
    volatile uint32_t  io12_delay;                /* ALT_PINMUX_IO12_DELAY */
    volatile uint32_t  io13_delay;                /* ALT_PINMUX_IO13_DELAY */
    volatile uint32_t  io14_delay;                /* ALT_PINMUX_IO14_DELAY */
    volatile uint32_t  io15_delay;                /* ALT_PINMUX_IO15_DELAY */
    volatile uint32_t  io16_delay;                /* ALT_PINMUX_IO16_DELAY */
    volatile uint32_t  io17_delay;                /* ALT_PINMUX_IO17_DELAY */
    volatile uint32_t  io18_delay;                /* ALT_PINMUX_IO18_DELAY */
    volatile uint32_t  io19_delay;                /* ALT_PINMUX_IO19_DELAY */
    volatile uint32_t  io20_delay;                /* ALT_PINMUX_IO20_DELAY */
    volatile uint32_t  io21_delay;                /* ALT_PINMUX_IO21_DELAY */
    volatile uint32_t  io22_delay;                /* ALT_PINMUX_IO22_DELAY */
    volatile uint32_t  io23_delay;                /* ALT_PINMUX_IO23_DELAY */
    volatile uint32_t  io24_delay;                /* ALT_PINMUX_IO24_DELAY */
    volatile uint32_t  io25_delay;                /* ALT_PINMUX_IO25_DELAY */
    volatile uint32_t  io26_delay;                /* ALT_PINMUX_IO26_DELAY */
    volatile uint32_t  io27_delay;                /* ALT_PINMUX_IO27_DELAY */
    volatile uint32_t  io28_delay;                /* ALT_PINMUX_IO28_DELAY */
    volatile uint32_t  io29_delay;                /* ALT_PINMUX_IO29_DELAY */
    volatile uint32_t  io30_delay;                /* ALT_PINMUX_IO30_DELAY */
    volatile uint32_t  io31_delay;                /* ALT_PINMUX_IO31_DELAY */
    volatile uint32_t  io32_delay;                /* ALT_PINMUX_IO32_DELAY */
    volatile uint32_t  io33_delay;                /* ALT_PINMUX_IO33_DELAY */
    volatile uint32_t  io34_delay;                /* ALT_PINMUX_IO34_DELAY */
    volatile uint32_t  io35_delay;                /* ALT_PINMUX_IO35_DELAY */
    volatile uint32_t  io36_delay;                /* ALT_PINMUX_IO36_DELAY */
    volatile uint32_t  io37_delay;                /* ALT_PINMUX_IO37_DELAY */
    volatile uint32_t  io38_delay;                /* ALT_PINMUX_IO38_DELAY */
    volatile uint32_t  io39_delay;                /* ALT_PINMUX_IO39_DELAY */
    volatile uint32_t  _pad_0x4a0_0x4ff[24];      /* *UNDEFINED* */
    volatile uint32_t  io40_delay;                /* ALT_PINMUX_IO40_DELAY */
    volatile uint32_t  io41_delay;                /* ALT_PINMUX_IO41_DELAY */
    volatile uint32_t  io42_delay;                /* ALT_PINMUX_IO42_DELAY */
    volatile uint32_t  io43_delay;                /* ALT_PINMUX_IO43_DELAY */
    volatile uint32_t  io44_delay;                /* ALT_PINMUX_IO44_DELAY */
    volatile uint32_t  io45_delay;                /* ALT_PINMUX_IO45_DELAY */
    volatile uint32_t  io46_delay;                /* ALT_PINMUX_IO46_DELAY */
    volatile uint32_t  io47_delay;                /* ALT_PINMUX_IO47_DELAY */
    volatile uint32_t  _pad_0x520_0x1000[696];    /* *UNDEFINED* */
};

/* The typedef declaration for the raw register contents of register group ALT_PINMUX. */
typedef struct ALT_PINMUX_raw_s  ALT_PINMUX_raw_t;
#endif  /* __ASSEMBLY__ */


#ifdef __cplusplus
}
#endif  /* __cplusplus */
#endif  /* __ALT_SOCAL_PINMUX_H__ */

